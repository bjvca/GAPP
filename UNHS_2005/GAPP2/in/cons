library(foreign) 
rm(list=ls())


#food, beverages and tobacco
secA <- read.dta("hsec14a.dta")
secA[is.na(secA)] <- 0

secA$cons <- secA$h14aq5 +secA$h14aq7+secA$h14aq9+secA$h14aq11
hhconsA <- data.frame(tapply(secA$cons,secA$hh, sum, na.rm=TRUE )*4.285714)
hhconsA$HHID <- rownames(hhconsA)

#non-durable goods
secB <- read.dta("hsec14b.dta")
secB[is.na(secB)] <- 0

secB$cons <- secB$h14bq5 +secB$h14bq7+secB$h14bq9

hhconsB <- data.frame(tapply(secB$cons,secB$hh, sum, na.rm=TRUE ))
hhconsB$HHID <- rownames(hhconsB)

#semi durables and durables
secC <- read.dta("hsec14c.dta")
secC[is.na(secC)] <- 0

secC$cons <- secC$h14cq3 +secC$h14cq4+secC$h14cq5

hhconsC <- data.frame(tapply(secC$cons,secC$hh, sum, na.rm=TRUE )/356*30)
hhconsC$HHID <- rownames(hhconsC)

#semi durables and durables
secD <- read.dta("hsec14d.dta")
secD[is.na(secD)] <- 0

secD$cons <- secD$h14dq3

hhconsD <- data.frame(tapply(secD$cons,secD$hh, sum, na.rm=TRUE )/356*30)
hhconsD$HHID <- rownames(hhconsD)


totcons <- merge(merge(merge(hhconsA,hhconsB),hhconsC),hhconsD)
names(totcons) <- c("HHID", "consA","consB", "consC", "consD")
totcons$totcons <- totcons$consA + totcons$consB + totcons$consC + totcons$consD

*now expres per capita
sec14 <- read.dta("hsec14.dta")
sec14[ is.na(sec14) ] <- 0 


sec14$HHsize <- sec14$h14q1 + sec14$h14q2 + sec14$h14q3 + sec14$h14q4 + sec14$h14q5 + sec14$h14q6 + sec14$h14q7 + sec14$h14q8
names(sec14)[1] <- "HHID"
totcons <- merge(sec14, totcons)

totcons$totcons_cap <- totcons$totcons/totcons$HHsize

#remove 10 outliers

write.dta(totcons,"unps0.dta")



FGT <- function (x, k, parameter = 0, weight = 1)
#based on Foster in package ineq (Achim Zeileis)
{
    if (is.null(parameter)) parameter <- 0
	x <- x[!is.na(x)]
	totweight <- weight*array(1,length(x))
    	x2 <- x[x < k]
	weight <- totweight[x < k]
    if (length(x2) < 1)
        0
    else 
	sum(weight*(((k - x2)/k)^(parameter)))/sum(totweight)
	
}

