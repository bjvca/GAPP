--------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//rep/090_temp_index.log
  log type:  text
 opened on:   8 Jul 2013, 20:14:49

. clear

. set more off

. #delimit ;
delimiter now ;
. **************************************************************************
> * 090_temp_index.do     (start)
> **************************************************************************;
. *do "$path/new/010_initial.do";
. **************************************************************************
> * Program to compute the temporal price index (intra-survey)
> * 
> * The index is based on 6 regions (North/Center/South by rural/urban) 
> * and four quarters. For IAF 2002/03 (t=t1) it is based on the same 9
> * commodities used for the analysis of the 1996 IAF (t=t0), 
> * except that we have to go to 8 commodities because the 2002-03 survey 
> * does not distinguish between large and small groundnuts, which were 
> * separate items in the old index. For IOF 2008/09 (t=t2) we expand the
> * the food basket to include the 15 most important food products among
> * the poorest.
> *
> * The commodity weights for the items vary by the 6 regions, and are 
> * calculated from the observations in the IAF2002, using the relatively 
> * poor households (below median nominal consumption per capita).
> *
> * The unit values (prices) calculated here are also based on the prices 
> * paid by the relatively poor, using the same definition.
> *
> * K Simler, Sep 2003
> * CA
> * MAH, April 2010
> * URB, Feb 2013 (automatization to any number of n_tpi's)
> **************************************************************************;
. /*
> This file uses:
>         work/own.dta
>         work/receipts.dta
>         work/daily.dta
>         work/hhdata
>         work/cons_cat.dta
> 
> This file creates:
>         work/tpi_unit_val_quarterly.dta
>         work/tpi_unit_val_monthly.dta
>         work/tpi_news_share.dta
>         work/tpi_reg_tpi_share.dta
>         work/temp_index_news.dta
>         work/temp_index_reg_tpi.dta
> */      
> 
> 
> **************************************************************************
> * Either the products used for intertemporal price index is specified
> * explicitly, or they are automatically found as the the n_tpi products
> * with the highest weighted expenditure shares among the $bottom % poorest
> * part of the population
> **************************************************************************;
. * Generating the n_tpi most important food items for the poorest $bottom % ;
. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (start)
> **************************************************************************;
. *------------------------------------------------------------------------*
> * Population weights for each HH
> *------------------------------------------------------------------------*;
. use "$path/work/hhdata.dta", clear;
(Household master record (1 record per household))

. keep hhid hhweight hhsize;

. gen popwt = hhweight*hhsize;
(2 missing values generated)

. lab var popwt "Population weights = hhsize X hhweight";

. sort hhid;

. tempfile popwt;

. save `popwt', replace;
(note: file /tmp/St02337.000001 not found)
file /tmp/St02337.000001 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      2716    1.32e+11    4.07e+12   1.01e+09   2.12e+14
    hhweight |      2715    2207.802    1694.047   308.1181   8736.727
      hhsize |      2714     7.06706    3.584677          1         29
       popwt |      2714       13754    11237.33   548.9749   104660.2

. *------------------------------------------------------------------------*
> * Make list of all consumed products
> *------------------------------------------------------------------------*;
. *use "$path/in/cons_cod.dta", clear;
. *save "$path/work/cons_cod.dta", replace;
. use "$path/work/cons_cod.dta", clear;

. keep product descript;

. collapse product, by(descript);

. sort product;

. tempfile descript;

. save `descript', replace;
(note: file /tmp/St02337.000002 not found)
file /tmp/St02337.000002 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
    descript |         2         1.5    .7071068          1          2
     product |         2    566.4601    611.7038   133.9201        999

. *------------------------------------------------------------------------*
> * Find the poorest part of the population
> *------------------------------------------------------------------------*;
. use
> "$path/work/cons_cod.dta", clear;

. *use
> *"$path/work/cons_cod.dta", clear;
. ********************************************check the COICOP categories to create the variable prod_cat, for the moment 
> it is equal to food_cat******;
. keep hhid prod_cat product cod_hh_nom;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     36833    1.34e+11    4.13e+12   1.01e+09   2.12e+14
     product |     37094    197.1675    225.8068        100        999
    prod_cat |     37116    1.073068     .260252          1          2
  cod_hh_nom |     37116    1066.391    8498.978          0   857465.5

. merge hhid using `popwt';
variable hhid does not uniquely identify observations in the master data

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     36837    1.34e+11    4.13e+12   1.01e+09   2.12e+14
     product |     37094    197.1675    225.8068        100        999
    prod_cat |     37116    1.073068     .260252          1          2
  cod_hh_nom |     37116    1066.391    8498.978          0   857465.5
    hhweight |     36836    2108.699      1640.9   308.1181   8736.727
-------------+--------------------------------------------------------
      hhsize |     36835    7.420877    3.609826          1         29
       popwt |     36835    13937.78    11273.38   548.9749   104660.2
      _merge |     37120    2.984644    .1742655          1          3

. drop _merge;

. preserve;

. collapse (sum) cod_hh_nom (mean) popwt hhweight hhsize, by(hhid);

. gen cod_pc_nom = cod_hh_nom/hhsize;
(3 missing values generated)

.         sum cod_pc_nom [aw=popwt] , detail;

                         cod_pc_nom
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     302.5962              0
10%     493.8137              0       Obs                2714
25%     802.1614              0       Sum of Wgt.  37328356.8

50%     1313.876                      Mean           2012.671
                        Largest       Std. Dev.       5409.64
75%     2181.702       76733.53
90%     3653.682       78344.66       Variance       2.93e+07
95%     4998.947       79483.23       Skewness       33.34378
99%     10528.57       252488.6       Kurtosis       1448.419

.         global medcpc_= r(p$tpi_bottom);

.         gen bottom_ = cod_pc_nom <= $medcpc_;

. sum [aw=popwt];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    2714  37328356.8    1.47e+11   2.95e+12   1.01e+09   2.12e+14
  cod_hh_nom |    2714  37328356.8     15992.4   33602.47          0   874315.5
       popwt |    2714  37328356.8    22931.77   17291.44   548.9749   104660.2
    hhweight |    2714  37328356.8    3059.501   2065.404   308.1181   8736.727
      hhsize |    2714  37328356.8    8.214561   4.009234          1         29
-------------+-----------------------------------------------------------------
  cod_pc_nom |    2714  37328356.8    2012.671    5409.64          0   252488.6
     bottom_ |    2714  37328356.8    .5001372   .5000921          0          1

. sum [aw=hhweight];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    2715  5994181.97    3.93e+11   7.30e+12   1.01e+09   2.12e+14
  cod_hh_nom |    2715  5994181.97    12533.77   29053.86          0   874315.5
       popwt |    2714  5985445.24    19080.64   14826.93   548.9749   104660.2
    hhweight |    2715  5994181.97    3507.165   2259.003   308.1181   8736.727
      hhsize |    2714  5985445.24    6.236521   3.512924          1         29
-------------+-----------------------------------------------------------------
  cod_pc_nom |    2714  5985445.24    2389.193   8409.093          0   252488.6
     bottom_ |    2715  5994181.97    .4617461   .4986263          0          1

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      2716    1.32e+11    4.07e+12   1.01e+09   2.12e+14
  cod_hh_nom |      2717    14567.59    32253.54          0   874315.5
       popwt |      2714       13754    11237.33   548.9749   104660.2
    hhweight |      2715    2207.802    1694.047   308.1181   8736.727
      hhsize |      2714     7.06706    3.584677          1         29
-------------+--------------------------------------------------------
  cod_pc_nom |      2714     2237.42    6114.131          0   252488.6
     bottom_ |      2717    .4755245    .4994925          0          1

. keep if bottom_==1;
(1425 observations deleted)

. keep hhid;

. sort hhid;

. tempfile hhid;

. save `hhid';
file /tmp/St02337.000004 saved

. restore;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     36837    1.34e+11    4.13e+12   1.01e+09   2.12e+14
     product |     37094    197.1675    225.8068        100        999
    prod_cat |     37116    1.073068     .260252          1          2
  cod_hh_nom |     37116    1066.391    8498.978          0   857465.5
    hhweight |     36836    2108.699      1640.9   308.1181   8736.727
-------------+--------------------------------------------------------
      hhsize |     36835    7.420877    3.609826          1         29
       popwt |     36835    13937.78    11273.38   548.9749   104660.2

. merge hhid using `hhid';
variable hhid does not uniquely identify observations in the master data

. tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     23,039       62.07       62.07
          3 |     14,081       37.93      100.00
------------+-----------------------------------
      Total |     37,120      100.00

. keep if _m==3;
(23039 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     14081    3.58e+10    1.99e+11   1.02e+09   2.32e+12
     product |     14058    213.2222    250.1721        101        999
    prod_cat |     14078    1.091561    .2884159          1          2
  cod_hh_nom |     14078    522.1147    946.8067          0   13228.79
    hhweight |     14081    2039.613    1528.942   381.7499   8736.727
-------------+--------------------------------------------------------
      hhsize |     14081    7.762233    3.113957          1         29
       popwt |     14081    14693.25    11020.04   821.0083   104660.2
      _merge |     14081           3           0          3          3

. *------------------------------------------------------------------------*
> * Keep only food product expenditure by the poor. Calculate food product
> * share of total food expenditure by the poor
> *------------------------------------------------------------------------*;
. keep if prod_cat==1;
(1292 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     12789    3.56e+10    1.98e+11   1.02e+09   2.32e+12
     product |     12769    133.8998    16.65255        101        171
    prod_cat |     12789           1           0          1          1
  cod_hh_nom |     12789    340.0714    510.8613   1.428571   11428.57
    hhweight |     12789    2029.244    1520.653   381.7499   8736.727
-------------+--------------------------------------------------------
      hhsize |     12789     7.79889    3.100556          1         29
       popwt |     12789    14717.84     11009.9   821.0083   104660.2
      _merge |     12789           3           0          3          3

. sort product;

. *preserve;
. collapse (sum) cod_hh_nom [aw=hhweight], by(product);

. sort cod;

. egen total=sum(cod_hh_nom);

. gen sh=100*cod_hh_nom/total;

. *------------------------------------------------------------------------*
> * Include product labels
> *------------------------------------------------------------------------*;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        65    135.0308     20.5015        101        171
  cod_hh_nom |        66    63808.76    89487.47   428.5714   400428.9
       total |        66     4211379           0    4211379    4211379
          sh |        66    1.515151    2.124897   .0101765   9.508262

. sort product;

. merge product using `descript';

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         66       97.06       97.06
          2 |          2        2.94      100.00
------------+-----------------------------------
      Total |         68      100.00

. keep if _merge==1 | _merge==3;
(2 observations deleted)

. drop _merge;

. sort sh;

. *list;
. list in -$product_tpi_n/-1;

     +----------------------------------------------------+
     | product   cod_hh~m     total         sh   descript |
     |----------------------------------------------------|
 37. |     137   41074.22   4211379   .9753153          . |
 38. |     150   42021.38   4211379    .997806          . |
 39. |     146   42851.82   4211379   1.017525          . |
 40. |     135    46019.2   4211379   1.092735          . |
 41. |     118   48591.65   4211379   1.153818          . |
     |----------------------------------------------------|
 42. |     132   50774.41   4211379   1.205648          . |
 43. |     119   56504.61   4211379   1.341713          . |
 44. |     138    63879.3   4211379   1.516826          . |
 45. |     112   65231.24   4211379   1.548928          . |
 46. |     144   67521.51   4211379   1.603311          . |
     |----------------------------------------------------|
 47. |     139   73495.88   4211379   1.745174          . |
 48. |     115    74736.8   4211379    1.77464          . |
 49. |     136   77159.07   4211379   1.832157          . |
 50. |     110   83982.38   4211379   1.994178          . |
 51. |     122   88817.03   4211379   2.108978          . |
     |----------------------------------------------------|
 52. |     121   92049.94   4211379   2.185744          . |
 53. |     116   95493.22   4211379   2.267505          . |
 54. |     123   98410.09   4211379   2.336767          . |
 55. |     127   101368.6   4211379   2.407016          . |
 56. |     105   106746.5   4211379   2.534717          . |
     |----------------------------------------------------|
 57. |     140   111581.6   4211379   2.649527          . |
 58. |     107   116030.7   4211379   2.755172          . |
 59. |     125     130727   4211379   3.104138          . |
 60. |     157   173844.4   4211379    4.12797          . |
 61. |     147   185882.9   4211379   4.413826          . |
     |----------------------------------------------------|
 62. |     117     187859   4211379   4.460749          . |
 63. |     108   298100.1   4211379   7.078444          . |
 64. |     113   364568.8   4211379   8.656758          . |
 65. |     101   381710.4   4211379   9.063788          . |
 66. |     141   400428.9   4211379   9.508262          . |
     +----------------------------------------------------+

. list product descript in -$product_tpi_n/-1;

     +--------------------+
     | product   descript |
     |--------------------|
 37. |     137          . |
 38. |     150          . |
 39. |     146          . |
 40. |     135          . |
 41. |     118          . |
     |--------------------|
 42. |     132          . |
 43. |     119          . |
 44. |     138          . |
 45. |     112          . |
 46. |     144          . |
     |--------------------|
 47. |     139          . |
 48. |     115          . |
 49. |     136          . |
 50. |     110          . |
 51. |     122          . |
     |--------------------|
 52. |     121          . |
 53. |     116          . |
 54. |     123          . |
 55. |     127          . |
 56. |     105          . |
     |--------------------|
 57. |     140          . |
 58. |     107          . |
 59. |     125          . |
 60. |     157          . |
 61. |     147          . |
     |--------------------|
 62. |     117          . |
 63. |     108          . |
 64. |     113          . |
 65. |     101          . |
 66. |     141          . |
     +--------------------+

. *restore;
. *------------------------------------------------------------------------*
> * Keep the required number of most important food products
> *------------------------------------------------------------------------*;
. keep in -$product_tpi_n/-1;
(36 observations deleted)

. list;

     +----------------------------------------------------+
     | product   cod_hh~m     total         sh   descript |
     |----------------------------------------------------|
  1. |     137   41074.22   4211379   .9753153          . |
  2. |     150   42021.38   4211379    .997806          . |
  3. |     146   42851.82   4211379   1.017525          . |
  4. |     135    46019.2   4211379   1.092735          . |
  5. |     118   48591.65   4211379   1.153818          . |
     |----------------------------------------------------|
  6. |     132   50774.41   4211379   1.205648          . |
  7. |     119   56504.61   4211379   1.341713          . |
  8. |     138    63879.3   4211379   1.516826          . |
  9. |     112   65231.24   4211379   1.548928          . |
 10. |     144   67521.51   4211379   1.603311          . |
     |----------------------------------------------------|
 11. |     139   73495.88   4211379   1.745174          . |
 12. |     115    74736.8   4211379    1.77464          . |
 13. |     136   77159.07   4211379   1.832157          . |
 14. |     110   83982.38   4211379   1.994178          . |
 15. |     122   88817.03   4211379   2.108978          . |
     |----------------------------------------------------|
 16. |     121   92049.94   4211379   2.185744          . |
 17. |     116   95493.22   4211379   2.267505          . |
 18. |     123   98410.09   4211379   2.336767          . |
 19. |     127   101368.6   4211379   2.407016          . |
 20. |     105   106746.5   4211379   2.534717          . |
     |----------------------------------------------------|
 21. |     140   111581.6   4211379   2.649527          . |
 22. |     107   116030.7   4211379   2.755172          . |
 23. |     125     130727   4211379   3.104138          . |
 24. |     157   173844.4   4211379    4.12797          . |
 25. |     147   185882.9   4211379   4.413826          . |
     |----------------------------------------------------|
 26. |     117     187859   4211379   4.460749          . |
 27. |     108   298100.1   4211379   7.078444          . |
 28. |     113   364568.8   4211379   8.656758          . |
 29. |     101   381710.4   4211379   9.063788          . |
 30. |     141   400428.9   4211379   9.508262          . |
     +----------------------------------------------------+

. gen product_tpi=1;

. keep product product_tpi;

. list;

     +--------------------+
     | product   produc~i |
     |--------------------|
  1. |     137          1 |
  2. |     150          1 |
  3. |     146          1 |
  4. |     135          1 |
  5. |     118          1 |
     |--------------------|
  6. |     132          1 |
  7. |     119          1 |
  8. |     138          1 |
  9. |     112          1 |
 10. |     144          1 |
     |--------------------|
 11. |     139          1 |
 12. |     115          1 |
 13. |     136          1 |
 14. |     110          1 |
 15. |     122          1 |
     |--------------------|
 16. |     121          1 |
 17. |     116          1 |
 18. |     123          1 |
 19. |     127          1 |
 20. |     105          1 |
     |--------------------|
 21. |     140          1 |
 22. |     107          1 |
 23. |     125          1 |
 24. |     157          1 |
 25. |     147          1 |
     |--------------------|
 26. |     117          1 |
 27. |     108          1 |
 28. |     113          1 |
 29. |     101          1 |
 30. |     141          1 |
     +--------------------+

. sort product;

. tempfile product_tpi;

. save `product_tpi', replace;
(note: file /tmp/St02337.000005 not found)
file /tmp/St02337.000005 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        30       126.7    15.08402        101        157
 product_tpi |        30           1           0          1          1

. clear;

. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (end)
> **************************************************************************;
. **************************************************************************;
. * First, need to calculate the average prices for the food items, by 
> * strata and quarter. For this, we are using the "unit values"
> * (value/quantity) for the observations in the consumption questionnaires,
> * including daily, own and receipts-in-kind.
> *
> * The unit values are constructed as sum(value)/sum(quantity), which effectively
> * weights them by the quantity and value of the transaction. Sampling
> * weights are also used.
> *
> * Get the own consumption file, and limit analysis to the observations
> * in KGs where both value and quantity are available.
> **************************************************************************;
. use "$path/work/cons_cod.dta";

. *use "$path/work/cons_cod.dta";
. keep if prod_cat==1;
(2712 observations deleted)

. drop if quantityd==0 | quantityd==.;
(1062 observations deleted)

. *keep if quantityd!=. & cod_hh_nom2!=.;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     33342    1.37e+11    4.18e+12   1.01e+09   2.12e+14
     product |     33320    133.3781    16.98235        101        171
    food_cat |     33342           1           0          1          1
    prod_cat |     33342           1           0          1          1
    descript |     33342           1           0          1          1
-------------+--------------------------------------------------------
       untcd |     33320    55.74619     39.1895          1        133
      h15bq2 |         0
     h15bq2b |         0
     h15bq2c |     32923    5.831789    3.135899          1         12
     h15bq2d |         0
-------------+--------------------------------------------------------
     h15bq3a |     33342           1           0          1          1
     h15bq3b |     33337     4.09425    2.381471          1          7
     h15bq3c |        22    48522.68    66379.85          1     166089
     h15bq14 |     32913    4.368152    54.27286          0       7000
     h15bq15 |     32911    3057.808    6173.454          0     600000
-------------+--------------------------------------------------------
   quantityd |     33342    .5568673    1.366798   .0071429   71.42857
      valuez |     33342    438.0954     880.029   1.428571   85714.29
    quantity |     18219    .7986303     2.63978   .0004286         60
  cod_hh_nom |     33342    438.0954     880.029   1.428571   85714.29

. sort product;

. merge product using `product_tpi';
variable product does not uniquely identify observations in the master data

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      7,781       23.34       23.34
          2 |          1        0.00       23.34
          3 |     25,561       76.66      100.00
------------+-----------------------------------
      Total |     33,343      100.00

. drop _merge;

. keep if $product_tpi;
(7781 observations deleted)

. *        replace valued_ac=0 if valued_ac==.;
. *        replace quantityd_ac=0 if quantityd_ac==.;
.         gen valued_tot=cod_hh_nom;
(1 missing value generated)

.         gen quantityd_tot=quantityd;
(1 missing value generated)

. *               replace quantityd_tot=0 if (valued_tot>0 & valued_tot<.) & quantityd_tot==.;
.         keep if quantityd_tot!=. & valued_tot!=.;
(1 observation deleted)

.                 collapse (sum) valued_tot quantityd_tot, by(hhid product);

.                 sort hhid;

. tempfile acredd;

. save `acredd' , replace;
(note: file /tmp/St02337.000006 not found)
file /tmp/St02337.000006 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     25561    1.46e+11    4.39e+12   1.01e+09   2.12e+14
     product |     25561    130.0653    14.31836        101        150
  valued_tot |     25561     487.644    964.7436   2.857143   85714.29
quantityd_~t |     25561    .5451678    1.096971   .0071429         60

. /*
> **************************************************************************;
> * Create a data set with an empty 1 observation. Used to avoid empty data
> * sets when the survey do not have the Mozambican set up
> **************************************************************************;
> use "$path/work/own.dta";
> 
> preserve;
> keep in 1;
> drop unit valued quantityd;
> gen unit=2;
> gen valued=0;
> gen quantityd=0;
> tempfile 1obs;
> save `1obs';
> restore;
> 
> **************************************************************************;
> * Own consumption
> **************************************************************************;
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_ac;
>         rename quantityd quantityd_ac;
>         compress;
>         sort hhid product;
>         tempfile ac;
> save `ac', replace;
> 
> **************************************************************************;
> * Now do a similar thing with receipts-in-kind file.
> **************************************************************************;
> use "$path/work/receipts.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> 
> 
> keep if $product_tpi;
> append using `1obs';
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_re;
>         rename quantityd quantityd_re;
>         compress;
>         sort hhid product;
>         tempfile re;
> save `re', replace;
> 
> **************************************************************************;
> * And also with the daily expenditure file.
> **************************************************************************;
> use "$path/work/daily.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> *rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> *rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         collapse (sum) value quantity days , 
>                 by(hhid product unit);
> 
>         gen valued=value/7 if days<=7;
>         replace valued=value/days if days>7 & days<.;
>         gen quantityd=quantity/7 if days<=7;
>         replace quantityd=quantity/days if days>7 & days<.;
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
> 
>         rename valued valued_dd;
>         rename quantityd quantityd_dd;
>         compress;
>         sort hhid product;
>         tempfile dd;
> save `dd', replace;
> 
> 
> 
> 
> **************************************************************************;
> * Merge the three components (own, daily, receipts) together at the HH/product level, 
> * then aggregate to the regional level, using the sample weights (hhweight).
> * We DON'T want to weight by "hhsize" because the quantity and value are
> * already for the household (i.e., other things equal, larger households
> * are buying larger quantities, and therefore already getting more weight).
> * Then calculate sum(val)/sum(quantity) to get the quantity weighted mean
> * unit value in each strata in each quarter.
> **************************************************************************;
> use `ac';
>         sort hhid product;
>         merge hhid product using `re';
>         tab _m;
>         drop _m;
>         
>         sort hhid product;
>         merge hhid product using `dd';
>         tab _m;
>         drop _m;
>         
>         replace valued_ac=0 if valued_ac==.;
>         replace valued_re=0 if valued_re==.;
>         replace valued_dd=0 if valued_dd==.;
>         replace quantityd_ac=0 if quantityd_ac==.;
>         replace quantityd_re=0 if quantityd_re==.;
>         replace quantityd_dd=0 if quantityd_dd==.;
> 
>         gen valued_tot=valued_ac+valued_re+valued_dd;
>         gen quantityd_tot=quantityd_ac+quantityd_re+quantityd_dd;
> 
>         sort hhid;
> 
>         tempfile acredd;
> save `acredd' , replace;
> */
> 
> 
> 
> use "$path/work/hhdata.dta";
(Household master record (1 record per household))

.         keep strata hhid hhweight hhsize rural survmon survquar news spdomain reg_tpi;

.         sort hhid;

.         tempfile hhd;

. save `hhd' , replace;
(note: file /tmp/St02337.000007 not found)
file /tmp/St02337.000007 saved

. use `acredd', clear;

.         merge hhid using `hhd';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        158        0.61        0.61
          3 |     25,561       99.39      100.00
------------+-----------------------------------
      Total |     25,719      100.00

.         drop _merge;

.                 tab survquar , miss;

    Sequential |
Survey Quarter |
 (Oct-Dec 10 = |
            1) |      Freq.     Percent        Cum.
---------------+-----------------------------------
    Oct-Dec 10 |      6,767       26.31       26.31
   Jan-Marc 11 |      6,361       24.73       51.04
   Apr-June 11 |      6,638       25.81       76.85
July-Sept 2011 |      5,905       22.96       99.81
             . |         48        0.19      100.00
---------------+-----------------------------------
         Total |     25,719      100.00

.                 tab survmon survquar, miss;

Sequential |
    Survey |
Month (Oct |       Sequential Survey Quarter (Oct-Dec 10 = 1)
 2010 = 1) | Oct-Dec 1  Jan-Marc   Apr-June   July-Sept          . |     Total
-----------+-------------------------------------------------------+----------
    Oct 10 |     2,114          0          0          0          0 |     2,114 
    Nov 10 |     1,849          0          0          0          0 |     1,849 
    Dec 10 |     2,804          0          0          0          0 |     2,804 
    Jan 11 |         0      2,241          0          0          0 |     2,241 
    Feb 11 |         0      2,040          0          0          0 |     2,040 
    Mac 11 |         0      2,080          0          0          0 |     2,080 
    Apr 11 |         0          0      2,461          0          0 |     2,461 
    May 11 |         0          0      2,524          0          0 |     2,524 
    Jun 11 |         0          0      1,653          0          0 |     1,653 
    Jul 11 |         0          0          0      2,026          0 |     2,026 
    Aug 11 |         0          0          0      2,087          0 |     2,087 
    Sep 11 |         0          0          0      1,792          0 |     1,792 
         . |         0          0          0          0         48 |        48 
-----------+-------------------------------------------------------+----------
     Total |     6,767      6,361      6,638      5,905         48 |    25,719 


.         compress;
product was float now int
survquar was float now byte
survmon was float now byte
rural was float now byte
spdomain was float now byte
news was float now byte
hhsize was long now byte

.         sort hhid;

. save `acredd', replace;
file /tmp/St02337.000006 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     25719    1.46e+11    4.38e+12   1.01e+09   2.12e+14
     product |     25561    130.0653    14.31836        101        150
  valued_tot |     25561     487.644    964.7436   2.857143   85714.29
quantityd_~t |     25561    .5451678    1.096971   .0071429         60
      strata |     25719    3.718418    1.492715          1          6
-------------+--------------------------------------------------------
    hhweight |     25718    2115.725     1647.65   308.1181   8736.727
    survquar |     25671    2.455027    1.111435          1          4
     survmon |     25671    6.345098    3.373594          1         12
       rural |     25719    .7517011    .4320345          0          1
     reg_tpi |     25719    2.202457    1.192897          0          4
-------------+--------------------------------------------------------
    spdomain |     25711    3.150636    1.264136          1          5
        news |     25711    2.277819    1.077952          1          4
      hhsize |     25717    7.455885    3.568308          1         29

. **************************************************************************;
. * Need to merge with the file that has nominal consumption per household,
> * and compute nominal consumption per capita from that, so that we can
> * choose the relatively poor (i.e., below median nominal consumption per
> * capita).
> **************************************************************************;
. use "$path/work/conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta" ;
. *save "$path/work/cons_cat.dta", replace ;
. *use "$path/work/cons_cat.dta" ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path/work/hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          1        0.04        0.04
          3 |      2,716       99.96      100.00
------------+-----------------------------------
      Total |      2,717      100.00

.  drop _m;

.         collapse (mean) cons_hh_nom hhsize hhweight , by(hhid);

.         gen cpc=cons_hh_nom/hhsize;
(6 missing values generated)

.         sum cpc [aw=hhsize*hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     302.6044              0
10%     495.2753              0       Obs                2711
25%     805.0471              0       Sum of Wgt.  37293839.4

50%     1314.064                      Mean           2014.534
                        Largest       Std. Dev.      5411.797
75%     2181.898       76733.53
90%     3655.888       78344.66       Variance       2.93e+07
95%     4998.947       79483.23       Skewness       33.33378
99%     10528.57       252488.6       Kurtosis       1447.404

.         global medcpc=r(p$tpi_bottom);

.         gen bottom_tpi=cpc<=$medcpc;

.         keep hhid bottom_tpi;

.         sort hhid;

.         tempfile bottom_tpi;

. save `bottom_tpi', replace;
(note: file /tmp/St02337.000008 not found)
file /tmp/St02337.000008 saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      2716    1.32e+11    4.07e+12   1.01e+09   2.12e+14
  bottom_tpi |      2717    .4747884    .4994559          0          1

. use `acredd' ;

.         merge hhid using `bottom_tpi';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |          1        0.00        0.00
          3 |     25,719      100.00      100.00
------------+-----------------------------------
      Total |     25,720      100.00

.         drop _merge;

.         keep if bottom_tpi;
(15339 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     10381    3.63e+10    1.99e+11   1.02e+09   2.32e+12
     product |     10293    130.6602    14.35474        101        150
  valued_tot |     10293    362.3232    521.7516   2.857143   7714.286
quantityd_~t |     10293    .5546537     1.03094   .0142857   34.28571
      strata |     10381    4.202389    1.213039          1          6
-------------+--------------------------------------------------------
    hhweight |     10381    2041.623    1531.055   381.7499   8736.727
    survquar |     10338    2.354227    1.083833          1          4
     survmon |     10338    6.063358    3.315961          1         12
       rural |     10381    .8891244    .3139932          0          1
     reg_tpi |     10381    2.464502    .9803547          0          4
-------------+--------------------------------------------------------
    spdomain |     10374    3.449586    1.011223          1          5
        news |     10374      2.4786    .9531971          1          4
      hhsize |     10381    7.759272    3.096978          1         29
  bottom_tpi |     10381           1           0          1          1

. * Drop one HH with extremely high quantity and low value in IAF 2002/03 (t=t1) ;
. *        drop if hhid==263001;
.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survmon);

.                         drop if product==.;
(23 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         lab var ppkg "Unit value per kg";

.                         sort reg_tpi product ;

.                         compress;

.                         tempfile uvm;

.                 save `uvm', replace;
(note: file /tmp/St02337.00000a not found)
file /tmp/St02337.00000a saved

.                 save "$path/work/tpi_unit_val_monthly.dta", replace;
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_unit_val_monthly.dta not found)
file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_unit_val_monthly.dta saved

.         restore;

.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(16 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         sort reg_tpi product survquar;

.                         list in  1/3;

     +----------------------------------------------------------------------------+
     | product      survquar   reg_tpi      news   valued~t   quanti~t       ppkg |
     |----------------------------------------------------------------------------|
  1. |     107    Oct-Dec 10   Kampala   Central   857.1429   .2857143       3000 |
  2. |     107   Jan-Marc 11   Kampala   Central   379.0834   .6591906    575.074 |
  3. |     108   Apr-June 11   Kampala   Central   28.57143   .0357143   799.9999 |
     +----------------------------------------------------------------------------+

.                         list in -3/-1;

     +-------------------------------------------------------------------------------+
     | product         survquar   reg_tpi      news   valued~t   quanti~t       ppkg |
     |-------------------------------------------------------------------------------|
491. |     150      Jan-Marc 11   Western   Western   3601.478   11.12012   323.8705 |
492. |     150      Apr-June 11   Western   Western   2198.346   7.189951   305.7527 |
493. |     150   July-Sept 2011   Western   Western   1696.156   7.857604   215.8618 |
     +-------------------------------------------------------------------------------+

.                         tempfile uvq;

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_unit_val_quarterly.dta not found)
file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_unit_val_quarterly.dta saved

.                 save `uvq', replace;
(note: file /tmp/St02337.00000c not found)
file /tmp/St02337.00000c saved

.         restore;

.         **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each reg_tpi & product combination. This should eliminate outliers that
> * may have an undue influence on the price calculation. Then use sample
> * weighting PLUS quantity weighting on those HH-level observations.
> **************************************************************************;
.         preserve;

.                 gen hhppkg=valued_tot/quantityd_tot;
(88 missing values generated)

.                 egen lower5=pctile(hhppkg), p(5) by(reg_tpi product);
(88 missing values generated)

.                 egen upper5=pctile(hhppkg), p(95) by(reg_tpi product);
(88 missing values generated)

.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
(599 observations deleted)

.                                 gen hhqtywt=hhweight*quantityd_tot;
(88 missing values generated)

.                                 collapse (sum) valued_tot quantityd_tot [aw=hhqtywt] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(0 observations deleted)

.                         gen ppkg_trim=valued_tot/quantityd_tot;

.                         lab var ppkg_trim "90% trimmed unit value per kg";

.                         sort reg_tpi product survquar;

.                         list , nol;

     +----------------------------------------------------------------------+
     | product   survquar   reg_tpi   news   valued~t   quanti~t   ppkg_t~m |
     |----------------------------------------------------------------------|
  1. |     107          1         0      1   857.1429   .2857143       3000 |
  2. |     107          2         0      1   407.1217    .771344   527.8082 |
  3. |     108          3         0      1   28.57143   .0357143   799.9999 |
  4. |     110          1         0      1   3598.358   1.799179       2000 |
  5. |     110          2         0      1   2300.655   1.150327       2000 |
     |----------------------------------------------------------------------|
  6. |     110          3         0      1   1973.699   .8830373   2235.126 |
  7. |     113          1         0      1   3350.772   3.451814    970.728 |
  8. |     113          2         0      1   1648.749   1.101152   1497.295 |
  9. |     113          3         0      1   3861.863   2.235071   1727.848 |
 10. |     115          3         0      1   186.3665   .2516307   740.6353 |
     |----------------------------------------------------------------------|
 11. |     117          1         0      1   3775.796   .7911923   4772.286 |
 12. |     117          2         0      1   428.5714   .0714286       6000 |
 13. |     117          3         0      1   1428.571   .2857143       5000 |
 14. |     119          1         0      1   857.1429   .2142857       4000 |
 15. |     122          1         0      1   571.4286   .2857143       2000 |
     |----------------------------------------------------------------------|
 16. |     122          2         0      1   142.8571   .1428571       1000 |
 17. |     123          1         0      1   142.8571   .2857143        500 |
 18. |     123          2         0      1   285.7143   .1428571       2000 |
 19. |     123          3         0      1   1450.349   2.400864   604.0945 |
 20. |     125          1         0      1   386.8408   .5906939   654.8922 |
     |----------------------------------------------------------------------|
 21. |     125          3         0      1       1200          1       1200 |
 22. |     127          1         0      1   1573.615   14.92771   105.4157 |
 23. |     127          2         0      1   676.7366   4.917112   137.6289 |
 24. |     127          3         0      1   604.1272   2.746361   219.9737 |
 25. |     132          1         0      1   214.2857   .4285714        500 |
     |----------------------------------------------------------------------|
 26. |     135          1         0      1   650.1832   5.689021   114.2874 |
 27. |     135          2         0      1   375.5209   1.019376   368.3831 |
 28. |     135          3         0      1   491.4345    2.66431   184.4509 |
 29. |     136          1         0      1   1173.866   5.643443   208.0053 |
 30. |     136          2         0      1   557.3323   2.640672    211.057 |
     |----------------------------------------------------------------------|
 31. |     136          3         0      1   629.3058   2.616377   240.5257 |
 32. |     137          1         0      1   114.2857   .1428571   799.9999 |
 33. |     137          2         0      1   191.6272   .6551563   292.4909 |
 34. |     137          3         0      1   570.6872   2.241921   254.5527 |
 35. |     138          3         0      1   42.85714   .1428571        300 |
     |----------------------------------------------------------------------|
 36. |     139          1         0      1   85.71429   .2857143        300 |
 37. |     140          1         0      1   742.8571   .5714286       1300 |
 38. |     141          1         0      1   2876.524   1.868016   1539.882 |
 39. |     141          2         0      1   1016.138   .6491459   1565.346 |
 40. |     141          3         0      1   1355.766   .8571429   1581.727 |
     |----------------------------------------------------------------------|
 41. |     144          1         0      1   285.7143   .0714286       4000 |
 42. |     144          2         0      1   283.7055   .4532841    625.889 |
 43. |     144          3         0      1   142.8571   .2169185   658.5751 |
 44. |     147          1         0      1   3196.448   1.314269   2432.111 |
 45. |     147          2         0      1   1674.621   .6977589       2400 |
     |----------------------------------------------------------------------|
 46. |     147          3         0      1   1526.507   .6194932   2464.122 |
 47. |     150          1         0      1   215.9625   .8235683   262.2278 |
 48. |     150          2         0      1   211.7416   .8719191   242.8455 |
 49. |     150          3         0      1   161.8092   .3869489   418.1669 |
 50. |     101          1         1      1   61183.82   15.68489   3900.812 |
     |----------------------------------------------------------------------|
 51. |     101          2         1      1   44178.81   14.94222   2956.642 |
 52. |     101          3         1      1   46389.69   12.38842   3744.601 |
 53. |     101          4         1      1   37843.35   8.337832   4538.751 |
 54. |     105          1         1      1   8765.177   3.206006   2733.987 |
 55. |     105          2         1      1    7326.93    1.86774   3922.886 |
     |----------------------------------------------------------------------|
 56. |     105          3         1      1   3697.255   6.087051   607.3967 |
 57. |     105          4         1      1   5553.843   1.704152   3259.007 |
 58. |     107          1         1      1    25054.9   25.93194   966.1793 |
 59. |     107          2         1      1   11969.75    6.80383   1759.267 |
 60. |     107          3         1      1   12732.38   8.542399   1490.492 |
     |----------------------------------------------------------------------|
 61. |     107          4         1      1   11002.21   6.061995   1814.948 |
 62. |     108          1         1      1   7081.627   10.60605   667.6966 |
 63. |     108          2         1      1   22037.78   25.83074   853.1611 |
 64. |     108          3         1      1   14938.54   18.96226   787.8038 |
 65. |     108          4         1      1   2117.246   2.015287   1050.593 |
     |----------------------------------------------------------------------|
 66. |     110          1         1      1   8488.324    4.95036   1714.688 |
 67. |     110          2         1      1   7364.795   3.653591   2015.769 |
 68. |     110          3         1      1   6882.737   2.893463    2378.72 |
 69. |     110          4         1      1   943.1462   .5491004   1717.621 |
 70. |     112          1         1      1   2727.982   13.01372   209.6236 |
     |----------------------------------------------------------------------|
 71. |     112          2         1      1   1241.393   8.112843   153.0157 |
 72. |     112          4         1      1   2830.457   28.30457        100 |
 73. |     113          1         1      1   52712.43   57.89247   910.5231 |
 74. |     113          2         1      1   38254.06   32.89579   1162.886 |
 75. |     113          3         1      1   39303.21   24.27087   1619.357 |
     |----------------------------------------------------------------------|
 76. |     113          4         1      1   16958.01   9.447243   1795.022 |
 77. |     115          1         1      1   3527.053   3.331188   1058.797 |
 78. |     115          2         1      1   85.71429   .0714286       1200 |
 79. |     115          3         1      1   1041.901   1.383767   752.9458 |
 80. |     117          1         1      1   15878.68   3.859207   4114.494 |
     |----------------------------------------------------------------------|
 81. |     117          2         1      1   2623.791   .5052698    5192.85 |
 82. |     117          3         1      1   10160.03   2.007406   5061.275 |
 83. |     117          4         1      1   1798.912   .3903554   4608.397 |
 84. |     118          1         1      1   7325.717   1.428992   5126.494 |
 85. |     118          2         1      1   5879.707   1.357394   4331.613 |
     |----------------------------------------------------------------------|
 86. |     118          3         1      1   7706.461   2.110944   3650.719 |
 87. |     118          4         1      1   867.8613   .1875015   4628.557 |
 88. |     119          1         1      1   857.1429   .1428571       6000 |
 89. |     119          2         1      1    1123.65   .2013378    5580.92 |
 90. |     119          3         1      1   1769.958   .2857143   6194.852 |
     |----------------------------------------------------------------------|
 91. |     119          4         1      1       1000   .1428571       7000 |
 92. |     121          1         1      1   4780.983    .973973   4908.743 |
 93. |     121          2         1      1   4675.481   .4285714   10909.46 |
 94. |     121          3         1      1   2142.857   .1428571      15000 |
 95. |     122          1         1      1   5109.192   5.312877    961.662 |
     |----------------------------------------------------------------------|
 96. |     122          2         1      1   1803.927   .9635748   1872.119 |
 97. |     122          3         1      1   6031.641   8.175878   737.7363 |
 98. |     122          4         1      1   1086.937   1.400611   776.0446 |
 99. |     123          1         1      1   2766.405    2.15432    1284.12 |
100. |     123          2         1      1   3631.161   5.930922   612.2423 |
     |----------------------------------------------------------------------|
101. |     123          3         1      1   759.0632   .6609835   1148.385 |
102. |     123          4         1      1   1080.359   2.115664   510.6476 |
103. |     125          1         1      1   9412.915   20.53923   458.2895 |
104. |     125          2         1      1   18794.56   31.47745     597.08 |
105. |     125          3         1      1    10598.2   27.91056   379.7199 |
     |----------------------------------------------------------------------|
106. |     125          4         1      1   4663.476   14.07764   331.2683 |
107. |     127          1         1      1   6314.351   53.80526   117.3556 |
108. |     127          2         1      1   4581.972   30.29646   151.2379 |
109. |     127          3         1      1   2398.542   20.41783   117.4729 |
110. |     127          4         1      1   1970.758   12.95661   152.1045 |
     |----------------------------------------------------------------------|
111. |     132          1         1      1   1779.429   17.96892   99.02814 |
112. |     132          2         1      1   2346.598   19.49998   120.3385 |
113. |     132          3         1      1   780.2601   3.655854   213.4276 |
114. |     132          4         1      1   7645.567   67.74515   112.8578 |
115. |     135          1         1      1   4523.952   31.65684    142.906 |
     |----------------------------------------------------------------------|
116. |     135          2         1      1   2762.963   18.51264   149.2474 |
117. |     135          3         1      1   3232.623   16.11324   200.6191 |
118. |     135          4         1      1   855.4415   2.400346   356.3827 |
119. |     136          1         1      1   6408.022   48.35724   132.5142 |
120. |     136          2         1      1   4002.341   28.64699   139.7125 |
     |----------------------------------------------------------------------|
121. |     136          3         1      1   4517.565    25.3608   178.1318 |
122. |     136          4         1      1   1497.614    11.7162   127.8242 |
123. |     137          1         1      1   8490.857   28.71381   295.7064 |
124. |     137          2         1      1   1851.326   5.002508   370.0796 |
125. |     137          3         1      1   1512.589    3.21747   470.1176 |
     |----------------------------------------------------------------------|
126. |     137          4         1      1   451.8953   1.387866   325.6043 |
127. |     138          1         1      1   2660.607   12.43835   213.9034 |
128. |     138          2         1      1   2584.739   13.07059   197.7524 |
129. |     138          3         1      1   4982.806   25.24613   197.3691 |
130. |     138          4         1      1   1136.881    6.11848    185.811 |
     |----------------------------------------------------------------------|
131. |     139          1         1      1    792.576   7.067476   112.1441 |
132. |     139          2         1      1   600.7182   5.496535   109.2903 |
133. |     139          3         1      1   5844.902   13.74309   425.2976 |
134. |     139          4         1      1   297.4069   2.720005   109.3406 |
135. |     140          1         1      1   36797.51   67.18647   547.6923 |
     |----------------------------------------------------------------------|
136. |     140          2         1      1   2889.947   2.103635   1373.787 |
137. |     140          3         1      1   7947.802   6.674436   1190.782 |
138. |     140          4         1      1   4787.107   2.407599   1988.333 |
139. |     141          1         1      1   13845.06   11.50694   1203.191 |
140. |     141          2         1      1   42430.03   35.60706   1191.618 |
     |----------------------------------------------------------------------|
141. |     141          3         1      1   16462.98   9.992702     1647.5 |
142. |     141          4         1      1   12690.56   10.82958   1171.843 |
143. |     144          1         1      1   8244.967   5.767156   1429.642 |
144. |     144          2         1      1   10934.98   10.44801   1046.609 |
145. |     144          3         1      1   16197.77   5.985424   2706.203 |
     |----------------------------------------------------------------------|
146. |     144          4         1      1   1663.013    .835554   1990.312 |
147. |     146          1         1      1   142.8571   .0714286       2000 |
148. |     146          2         1      1   142.8571   .0714286       2000 |
149. |     147          1         1      1   18731.19   7.576658   2472.224 |
150. |     147          2         1      1   26039.56   9.054358   2875.915 |
     |----------------------------------------------------------------------|
151. |     147          3         1      1   15383.45   5.791993   2655.985 |
152. |     147          4         1      1   2705.121   .7154486   3781.013 |
153. |     150          1         1      1   2225.382    6.31754   352.2545 |
154. |     150          2         1      1   6447.842   16.23745   397.0969 |
155. |     150          3         1      1   2098.576   4.794247    437.728 |
     |----------------------------------------------------------------------|
156. |     150          4         1      1    782.758   1.971697   396.9972 |
157. |     101          1         2      2   35610.85   11.02221   3230.828 |
158. |     101          2         2      2   25894.76   11.63327   2225.923 |
159. |     101          3         2      2   60130.53   15.28813   3933.153 |
160. |     101          4         2      2   13913.07   5.820185   2390.486 |
     |----------------------------------------------------------------------|
161. |     105          1         2      2   20710.57   10.63029    1948.26 |
162. |     105          2         2      2   4044.057    1.61369   2506.094 |
163. |     105          3         2      2   4043.407   1.246663   3243.384 |
164. |     105          4         2      2   8100.008   1.521023   5325.369 |
165. |     107          1         2      2    7220.73   7.765607   929.8347 |
     |----------------------------------------------------------------------|
166. |     107          2         2      2   5996.103    8.34439   718.5789 |
167. |     107          3         2      2   22036.15    31.3138   703.7202 |
168. |     107          4         2      2   3679.192   3.328225   1105.452 |
169. |     108          1         2      2   45082.41   84.86259   531.2401 |
170. |     108          2         2      2   53862.38   105.2229   511.8882 |
     |----------------------------------------------------------------------|
171. |     108          3         2      2   77199.74   117.9987   654.2421 |
172. |     108          4         2      2   36680.78   37.43356   979.8902 |
173. |     110          1         2      2     9021.7   6.932191   1301.421 |
174. |     110          2         2      2   6204.229   3.165736   1959.806 |
175. |     110          3         2      2    14353.6    6.63855   2162.159 |
     |----------------------------------------------------------------------|
176. |     110          4         2      2   29594.49   14.69297   2014.194 |
177. |     112          1         2      2   8026.776   78.83954   101.8115 |
178. |     112          2         2      2   1388.169   4.677974   296.7457 |
179. |     112          3         2      2   19667.43   194.3671    101.187 |
180. |     112          4         2      2   28023.84   191.1113   146.6362 |
     |----------------------------------------------------------------------|
181. |     113          1         2      2    33886.5    55.5631   609.8741 |
182. |     113          2         2      2   59871.63   60.82225   984.3705 |
183. |     113          3         2      2   38698.06   29.51314   1311.215 |
184. |     113          4         2      2   138764.5   148.7131   933.1019 |
185. |     115          1         2      2   3215.237   4.095737   785.0204 |
     |----------------------------------------------------------------------|
186. |     115          2         2      2   15270.31   17.89433   853.3605 |
187. |     115          3         2      2   7569.979    11.4053   663.7247 |
188. |     115          4         2      2    7485.15   11.64548   642.7517 |
189. |     116          1         2      2   23924.02   34.54507    692.545 |
190. |     116          2         2      2   22779.73   98.59449   231.0446 |
     |----------------------------------------------------------------------|
191. |     116          3         2      2    8345.99   13.57754    614.691 |
192. |     116          4         2      2   3683.191   5.768276   638.5254 |
193. |     117          1         2      2   25894.55   6.051853    4278.78 |
194. |     117          2         2      2   14436.74   3.054201   4726.846 |
195. |     117          3         2      2   23142.15   4.417496   5238.747 |
     |----------------------------------------------------------------------|
196. |     117          4         2      2   14881.78   2.767347   5377.633 |
197. |     118          1         2      2   5369.401   1.633896   3286.257 |
198. |     118          2         2      2   2908.327   .7941739   3662.078 |
199. |     118          3         2      2   6657.192   1.692754   3932.757 |
200. |     118          4         2      2   714.2857   .1428571       5000 |
     |----------------------------------------------------------------------|
201. |     119          1         2      2   13975.41   3.416974   4089.998 |
202. |     119          2         2      2   8130.199    1.79769   4522.581 |
203. |     119          3         2      2   8225.682    1.51886   5415.694 |
204. |     119          4         2      2   5974.481   1.020931   5851.991 |
205. |     121          1         2      2   7858.358   1.142857   6876.063 |
     |----------------------------------------------------------------------|
206. |     121          2         2      2   9103.506    1.47835   6157.884 |
207. |     121          3         2      2   8064.646          1   8064.646 |
208. |     121          4         2      2   3571.428   .2857143      12500 |
209. |     122          1         2      2   5661.253   17.89177   316.4166 |
210. |     122          2         2      2   18666.49    32.4875   574.5745 |
     |----------------------------------------------------------------------|
211. |     122          3         2      2   13492.26   14.45222   933.5771 |
212. |     122          4         2      2   8331.856    8.77039   949.9984 |
213. |     123          1         2      2   7850.718   11.99976   654.2396 |
214. |     123          2         2      2   5422.113   7.889865    687.225 |
215. |     123          3         2      2   9204.772   9.527148   966.1624 |
     |----------------------------------------------------------------------|
216. |     123          4         2      2   4069.779   4.086731   995.8519 |
217. |     125          1         2      2   37197.22   122.1611   304.4931 |
218. |     125          2         2      2   25160.36   82.52043   304.8985 |
219. |     125          3         2      2   22313.88   49.20964   453.4453 |
220. |     125          4         2      2   18316.91   36.65964   499.6479 |
     |----------------------------------------------------------------------|
221. |     127          1         2      2   9430.823   91.54885   103.0141 |
222. |     127          2         2      2    9871.31   109.1083   90.47259 |
223. |     127          3         2      2   14697.89    96.4172   152.4405 |
224. |     127          4         2      2    8061.38   61.46597   131.1519 |
225. |     132          1         2      2   4676.561     86.731   53.92029 |
     |----------------------------------------------------------------------|
226. |     132          2         2      2   4019.257   33.17253   121.1622 |
227. |     132          3         2      2   24704.61    277.963   88.87734 |
228. |     132          4         2      2   883.7887   1.767577        500 |
229. |     135          1         2      2   3140.275   36.81636   85.29565 |
230. |     135          2         2      2   4033.833   38.18739   105.6326 |
     |----------------------------------------------------------------------|
231. |     135          3         2      2   3149.645    24.8141   126.9297 |
232. |     135          4         2      2   2690.282   19.59386   137.3023 |
233. |     136          1         2      2   10540.92   65.83214   160.1181 |
234. |     136          2         2      2       9937   52.69078   188.5909 |
235. |     136          3         2      2   7242.051    39.2385   184.5649 |
     |----------------------------------------------------------------------|
236. |     136          4         2      2   7407.505   38.70135   191.4017 |
237. |     137          1         2      2   3696.387   9.052724   408.3177 |
238. |     137          2         2      2   8043.224   24.30675    330.905 |
239. |     137          3         2      2   3204.917   6.834064   468.9621 |
240. |     137          4         2      2   6665.167   18.74246   355.6186 |
     |----------------------------------------------------------------------|
241. |     138          1         2      2   8040.259   36.29096   221.5499 |
242. |     138          2         2      2   5622.262   21.05486   267.0292 |
243. |     138          3         2      2   19958.09   68.95907   289.4193 |
244. |     138          4         2      2    9297.17    41.0909   226.2586 |
245. |     139          1         2      2   8316.443   32.39323    256.734 |
     |----------------------------------------------------------------------|
246. |     139          2         2      2   11965.69   56.32352   212.4457 |
247. |     139          3         2      2    14711.5   29.25366   502.8944 |
248. |     139          4         2      2   5488.171   26.32952   208.4418 |
249. |     140          1         2      2   14616.19   22.54646     648.27 |
250. |     140          2         2      2   1862.453   2.394912   777.6708 |
     |----------------------------------------------------------------------|
251. |     140          3         2      2   13916.09   41.58488   334.6429 |
252. |     140          4         2      2   15711.85   48.26757   325.5156 |
253. |     141          1         2      2   15198.06    17.4745   869.7278 |
254. |     141          2         2      2   14062.97   18.13512   775.4549 |
255. |     141          3         2      2   12038.72   12.43926   967.8005 |
     |----------------------------------------------------------------------|
256. |     141          4         2      2   22539.83   23.56055   956.6768 |
257. |     144          1         2      2   4284.601   8.211622   521.7728 |
258. |     144          2         2      2   7133.506    22.6219   315.3362 |
259. |     144          3         2      2   1252.493   2.464385   508.2375 |
260. |     144          4         2      2   21972.79   26.18251   839.2164 |
     |----------------------------------------------------------------------|
261. |     146          1         2      2    288.604   .4285714   673.4094 |
262. |     146          2         2      2    211.044   .4723901   446.7578 |
263. |     146          3         2      2   642.8571   .4285714       1500 |
264. |     146          4         2      2   2253.895   1.664292   1354.267 |
265. |     147          1         2      2   35789.85   15.08015   2373.309 |
     |----------------------------------------------------------------------|
266. |     147          2         2      2   22736.27   15.69151   1448.954 |
267. |     147          3         2      2   22312.53   9.900102   2253.768 |
268. |     147          4         2      2    14843.9   6.674133   2224.094 |
269. |     150          1         2      2   2567.651   11.77341   218.0891 |
270. |     150          2         2      2   2655.197   11.46342   231.6235 |
     |----------------------------------------------------------------------|
271. |     150          3         2      2   2903.421   10.31683   281.4257 |
272. |     150          4         2      2   3089.061    10.2028   302.7662 |
273. |     101          1         3      3   4967.888   1.142857   4346.901 |
274. |     101          2         3      3   7437.076   1.562128   4760.862 |
275. |     101          3         3      3   6178.359    1.65877   3724.663 |
     |----------------------------------------------------------------------|
276. |     101          4         3      3   826.8876   .4661054   1774.036 |
277. |     105          2         3      3   4663.914   1.833247   2544.073 |
278. |     105          3         3      3   112.8174   .2857143   394.8608 |
279. |     105          4         3      3   259.5653   .5191305        500 |
280. |     107          1         3      3   6536.571   8.183124   798.7867 |
     |----------------------------------------------------------------------|
281. |     107          2         3      3   6469.697   11.56867   559.2427 |
282. |     107          3         3      3   47862.56   90.35747   529.7023 |
283. |     107          4         3      3   19521.81   37.12429     525.85 |
284. |     108          1         3      3   15160.09    7.01026   2162.557 |
285. |     108          2         3      3   33235.07   90.19969    368.461 |
     |----------------------------------------------------------------------|
286. |     108          3         3      3   35154.78   67.57202   520.2565 |
287. |     108          4         3      3   26881.13   25.03152   1073.891 |
288. |     110          1         3      3   4385.336   3.647362   1202.331 |
289. |     110          2         3      3   2789.987   2.288352   1219.213 |
290. |     110          3         3      3   5648.036   5.368416   1052.086 |
     |----------------------------------------------------------------------|
291. |     110          4         3      3   1142.857   1.142857       1000 |
292. |     112          1         3      3   9937.259   121.6747   81.67068 |
293. |     112          3         3      3   635.2629   1.994179   318.5585 |
294. |     112          4         3      3   16274.03   144.7483   112.4299 |
295. |     113          1         3      3   17074.18   36.73992   464.7309 |
     |----------------------------------------------------------------------|
296. |     113          2         3      3   35845.78   47.20774     759.32 |
297. |     113          3         3      3   14419.73   29.70137   485.4902 |
298. |     113          4         3      3   14950.95   46.15514   323.9283 |
299. |     115          1         3      3   1101.454   4.332984   254.2022 |
300. |     115          2         3      3   2459.487   10.56822    232.725 |
     |----------------------------------------------------------------------|
301. |     115          3         3      3   3338.151   10.40891   320.7015 |
302. |     115          4         3      3   26326.49   87.10557   302.2366 |
303. |     116          1         3      3   20837.36   31.30208    665.686 |
304. |     116          2         3      3   26816.47   81.97037   327.1484 |
305. |     116          3         3      3   31286.45   85.50703   365.8933 |
     |----------------------------------------------------------------------|
306. |     116          4         3      3   20032.46   72.24566   277.2826 |
307. |     117          1         3      3   18494.53   5.388734   3432.073 |
308. |     117          2         3      3      23006   4.919659    4676.34 |
309. |     117          3         3      3   24811.79   5.078369   4885.779 |
310. |     117          4         3      3   4578.561   .8571429   5341.654 |
     |----------------------------------------------------------------------|
311. |     118          1         3      3   2907.122   .6466722   4495.511 |
312. |     118          2         3      3   7787.872   1.859051   4189.165 |
313. |     118          3         3      3   6361.434   1.400197   4543.244 |
314. |     118          4         3      3   5282.972   1.395173   3786.605 |
315. |     119          1         3      3   5964.879   1.517105   3931.752 |
     |----------------------------------------------------------------------|
316. |     119          2         3      3   2023.566   .4285714   4721.653 |
317. |     119          3         3      3   6914.688   1.341015   5156.309 |
318. |     119          4         3      3   8495.891   1.637535   5188.218 |
319. |     121          1         3      3   18343.81   3.688892   4972.717 |
320. |     121          2         3      3   7230.792   1.142857   6326.943 |
     |----------------------------------------------------------------------|
321. |     121          3         3      3    12966.2   1.714286   7563.618 |
322. |     121          4         3      3   9987.496   1.142857   8739.059 |
323. |     122          1         3      3   6187.694   9.680598   639.1851 |
324. |     122          2         3      3   13773.38   10.16585   1354.867 |
325. |     122          3         3      3   4137.343   3.751785   1102.767 |
     |----------------------------------------------------------------------|
326. |     122          4         3      3   11018.22    5.47283   2013.258 |
327. |     123          1         3      3   8312.434   7.742247   1073.646 |
328. |     123          2         3      3   18527.47   18.06921   1025.361 |
329. |     123          3         3      3   21918.96   22.69214   965.9274 |
330. |     123          4         3      3   12891.19   11.45553   1125.325 |
     |----------------------------------------------------------------------|
331. |     125          1         3      3   4866.717   17.39224   279.8211 |
332. |     125          2         3      3   13304.69   44.24602    300.698 |
333. |     125          3         3      3   14786.08   53.63977   275.6551 |
334. |     125          4         3      3   4685.511   15.66692   299.0703 |
335. |     127          1         3      3   19314.17   144.4477   133.7105 |
     |----------------------------------------------------------------------|
336. |     127          2         3      3   9262.747    46.2803   200.1445 |
337. |     127          3         3      3   15453.55   45.64319   338.5729 |
338. |     127          4         3      3   12123.83   33.91972   357.4271 |
339. |     132          1         3      3    1556.66   9.710485   160.3072 |
340. |     132          2         3      3   1818.749   17.74215   102.5101 |
     |----------------------------------------------------------------------|
341. |     132          3         3      3   10678.61   249.9236   42.72749 |
342. |     132          4         3      3   171.4286   .5714286        300 |
343. |     135          1         3      3   4767.914   38.97139    122.344 |
344. |     135          2         3      3   3856.345   27.99683   137.7422 |
345. |     135          3         3      3   4502.882   28.70368   156.8747 |
     |----------------------------------------------------------------------|
346. |     135          4         3      3   4968.949   39.61509   125.4307 |
347. |     136          1         3      3   6281.047   29.30536    214.331 |
348. |     136          2         3      3   5481.669   32.99029     166.16 |
349. |     136          3         3      3   7757.902   27.92799   277.7823 |
350. |     136          4         3      3   6823.918   27.34502   249.5489 |
     |----------------------------------------------------------------------|
351. |     137          1         3      3   2713.126   5.215378   520.2167 |
352. |     137          2         3      3   2398.447   4.537549   528.5777 |
353. |     137          3         3      3   5863.697    9.59765   610.9513 |
354. |     137          4         3      3   8674.195   16.88633   513.6815 |
355. |     138          1         3      3   2373.378   16.35827   145.0874 |
     |----------------------------------------------------------------------|
356. |     138          2         3      3   3218.361   15.82931   203.3165 |
357. |     138          3         3      3   4963.437   43.69847   113.5838 |
358. |     138          4         3      3   7342.165   50.77223   144.6099 |
359. |     139          1         3      3   11360.67   56.38173   201.4956 |
360. |     139          2         3      3   15339.91   107.8578   142.2234 |
     |----------------------------------------------------------------------|
361. |     139          3         3      3   15485.57    83.4904   185.4773 |
362. |     139          4         3      3   8484.824   56.07034   151.3246 |
363. |     140          1         3      3   4966.273   20.20681   245.7723 |
364. |     140          2         3      3   142.8571   .2857143        500 |
365. |     140          3         3      3   1868.141   4.741264   394.0175 |
     |----------------------------------------------------------------------|
366. |     140          4         3      3   9912.569   19.08087   519.5031 |
367. |     141          1         3      3   50973.42   104.9896   485.5091 |
368. |     141          2         3      3   57004.01   81.01371   703.6341 |
369. |     141          3         3      3   64156.37   85.07708   754.0969 |
370. |     141          4         3      3   74697.11   131.1912   569.3758 |
     |----------------------------------------------------------------------|
371. |     144          1         3      3    366.955   1.473307   249.0689 |
372. |     144          2         3      3   510.1722   .7123278   716.2043 |
373. |     144          3         3      3   213.2845   .4285714   497.6637 |
374. |     144          4         3      3   71.42857   .1428571        500 |
375. |     146          1         3      3   11006.61   15.73418    699.535 |
     |----------------------------------------------------------------------|
376. |     146          2         3      3    10723.2   16.67012   643.2584 |
377. |     146          3         3      3   15230.91   19.43355   783.7434 |
378. |     146          4         3      3    10666.1   10.89046   979.3984 |
379. |     147          1         3      3   15850.81   20.85188   760.1624 |
380. |     147          2         3      3   26857.35   62.59761   429.0476 |
     |----------------------------------------------------------------------|
381. |     147          3         3      3   13636.03   12.31874   1106.934 |
382. |     147          4         3      3   3800.285   3.732512   1018.158 |
383. |     150          1         3      3   3049.827   9.099812   335.1527 |
384. |     150          2         3      3   3225.872   9.598372   336.0853 |
385. |     150          3         3      3   4084.397   11.26374   362.6147 |
     |----------------------------------------------------------------------|
386. |     150          4         3      3   4013.825   11.70919   342.7929 |
387. |     101          1         4      4   49713.25   16.66596    2982.92 |
388. |     101          2         4      4   57993.32   19.85145   2921.365 |
389. |     101          3         4      4   55534.15   12.93994   4291.686 |
390. |     101          4         4      4   28912.37   9.743103    2967.47 |
     |----------------------------------------------------------------------|
391. |     105          1         4      4   15423.99   8.899301   1733.169 |
392. |     105          2         4      4   29807.22   10.82014   2754.791 |
393. |     105          3         4      4   22268.69   7.106473   3133.579 |
394. |     105          4         4      4   17772.14   8.946219   1986.553 |
395. |     107          1         4      4   3582.676   3.582676       1000 |
     |----------------------------------------------------------------------|
396. |     107          2         4      4    3191.14   3.396227   939.6134 |
397. |     107          3         4      4   3247.528   3.247528   999.9999 |
398. |     107          4         4      4   3494.029   2.990711   1168.293 |
399. |     108          1         4      4   14341.79   97.10511   147.6934 |
400. |     108          2         4      4   17223.81   83.99698   205.0528 |
     |----------------------------------------------------------------------|
401. |     108          3         4      4   17383.52   75.18237    231.218 |
402. |     108          4         4      4   4693.262   25.64843   182.9844 |
403. |     110          1         4      4    1142.35   .6009132   1901.023 |
404. |     110          2         4      4   6135.005   4.808774   1275.794 |
405. |     110          4         4      4   285.7143   .2857143       1000 |
     |----------------------------------------------------------------------|
406. |     112          1         4      4    2998.53   9.107293    329.245 |
407. |     112          2         4      4    621.719   5.529422   112.4383 |
408. |     112          3         4      4   399.7506   2.947166    135.639 |
409. |     112          4         4      4   57.14286   .5714286   99.99999 |
410. |     113          1         4      4   15080.41   18.63489   809.2563 |
     |----------------------------------------------------------------------|
411. |     113          2         4      4   25332.89   24.98225   1014.035 |
412. |     113          3         4      4   29252.98   22.08986   1324.272 |
413. |     113          4         4      4   4400.616   3.106781   1416.455 |
414. |     115          1         4      4   1372.861   2.001275   685.9929 |
415. |     115          2         4      4   21323.35   36.89885   577.8865 |
     |----------------------------------------------------------------------|
416. |     115          3         4      4   10023.14   12.65059    792.306 |
417. |     115          4         4      4   8778.819   11.32324   775.2922 |
418. |     116          1         4      4   1903.096    2.56921   740.7319 |
419. |     116          2         4      4   14502.23   35.89775   403.9873 |
420. |     116          3         4      4   1363.626   3.115075   437.7505 |
     |----------------------------------------------------------------------|
421. |     116          4         4      4   1178.152   1.207613   975.6038 |
422. |     117          1         4      4   5510.875   1.216076   4531.685 |
423. |     117          2         4      4   10666.36    2.19079   4868.725 |
424. |     117          3         4      4   12206.75   2.018177   6048.405 |
425. |     117          4         4      4   8081.661   1.346944       6000 |
     |----------------------------------------------------------------------|
426. |     118          2         4      4   1291.808   .2857143   4521.327 |
427. |     118          3         4      4   1285.714   .2142857       6000 |
428. |     118          4         4      4   942.8133   .1428571   6599.692 |
429. |     119          1         4      4   3828.304   .8724113   4388.187 |
430. |     119          2         4      4   714.2857   .1428571       5000 |
     |----------------------------------------------------------------------|
431. |     119          3         4      4   857.1429   .1428571       6000 |
432. |     119          4         4      4   2931.146   .4444352   6595.216 |
433. |     121          3         4      4   714.2857   .1428571       5000 |
434. |     122          1         4      4   1650.287   1.520221   1085.558 |
435. |     122          2         4      4   2125.521    1.06276       2000 |
     |----------------------------------------------------------------------|
436. |     122          3         4      4   3225.621   1.511335   2134.286 |
437. |     122          4         4      4   571.4286   .2857143       2000 |
438. |     123          1         4      4   709.3217   .4285714   1655.084 |
439. |     123          2         4      4    1562.57   1.070804   1459.249 |
440. |     123          3         4      4   2227.963   4.961765   449.0263 |
     |----------------------------------------------------------------------|
441. |     123          4         4      4   714.2857   .2857143       2500 |
442. |     125          1         4      4   22122.31   69.35778   318.9592 |
443. |     125          2         4      4    2633.35   6.039391   436.0291 |
444. |     125          3         4      4   12489.72   35.82612   348.6204 |
445. |     125          4         4      4   2729.434   8.406087   324.6973 |
     |----------------------------------------------------------------------|
446. |     127          1         4      4   857.4753    3.79559   225.9135 |
447. |     127          2         4      4   950.3602   10.48977   90.59873 |
448. |     127          3         4      4   1541.437   5.256469   293.2456 |
449. |     127          4         4      4   978.0741   .3622416    2700.06 |
450. |     132          1         4      4     4940.5   92.66317   53.31676 |
     |----------------------------------------------------------------------|
451. |     132          2         4      4   721.2561   10.93984   65.92928 |
452. |     132          3         4      4   5461.326   56.51178   96.64048 |
453. |     132          4         4      4   342.8571   1.714286        200 |
454. |     135          1         4      4   1492.429   7.302239   204.3797 |
455. |     135          2         4      4   2285.028   9.994683   228.6244 |
     |----------------------------------------------------------------------|
456. |     135          3         4      4   1510.614   5.893722    256.309 |
457. |     135          4         4      4    1802.09   3.131497   575.4724 |
458. |     136          1         4      4   3965.484   14.83919   267.2305 |
459. |     136          2         4      4   3803.155   14.08406   270.0326 |
460. |     136          3         4      4   4449.067   17.96481   247.6545 |
     |----------------------------------------------------------------------|
461. |     136          4         4      4   2254.381   8.788265   256.5217 |
462. |     137          1         4      4   1247.667   3.569555   349.5303 |
463. |     137          2         4      4   1590.299   4.231922   375.7866 |
464. |     137          3         4      4   753.9571   2.048531   368.0477 |
465. |     137          4         4      4   840.9837   2.056099    409.019 |
     |----------------------------------------------------------------------|
466. |     138          1         4      4   3914.174   22.05731   177.4547 |
467. |     138          2         4      4   3317.699   22.45145   147.7722 |
468. |     138          3         4      4   4959.341   20.50866   241.8169 |
469. |     138          4         4      4   1107.162   5.542194   199.7696 |
470. |     139          1         4      4   1056.743   6.530907   161.8064 |
     |----------------------------------------------------------------------|
471. |     139          2         4      4   1285.235   2.815099   456.5507 |
472. |     139          3         4      4   1048.108   2.337052   448.4743 |
473. |     139          4         4      4   219.6491   1.246245   176.2487 |
474. |     140          1         4      4   28464.36   60.20312   472.8054 |
475. |     140          2         4      4   3623.574     6.2562   579.1973 |
     |----------------------------------------------------------------------|
476. |     140          3         4      4   20870.28   51.28834   406.9206 |
477. |     140          4         4      4   571.4286   .5714286       1000 |
478. |     141          1         4      4    12226.1   15.74737   776.3903 |
479. |     141          2         4      4   79038.79   88.76166    890.461 |
480. |     141          3         4      4   35785.28   34.39193   1040.514 |
     |----------------------------------------------------------------------|
481. |     141          4         4      4   29464.24   34.89855   844.2828 |
482. |     144          1         4      4    3907.61   5.387311   725.3359 |
483. |     144          2         4      4   13878.42   13.11095   1058.537 |
484. |     144          3         4      4   1596.692   1.469606   1086.476 |
485. |     144          4         4      4   4783.617   4.035596   1185.356 |
     |----------------------------------------------------------------------|
486. |     147          1         4      4   5402.363    2.15405   2508.002 |
487. |     147          2         4      4   6151.034    2.28928   2686.886 |
488. |     147          3         4      4   2248.612   1.103284   2038.109 |
489. |     147          4         4      4    1456.49   .5599361   2601.173 |
490. |     150          1         4      4   2297.742   6.884213   333.7697 |
     |----------------------------------------------------------------------|
491. |     150          2         4      4   8817.374   23.24019    379.402 |
492. |     150          3         4      4   2525.998   6.325019   399.3661 |
493. |     150          4         4      4   2007.251    4.50429    445.631 |
     +----------------------------------------------------------------------+

.                         tempfile uvq2;

.                         keep reg_tpi product survquar ppkg_trim;

.                 save `uvq2', replace;
(note: file /tmp/St02337.00000e not found)
file /tmp/St02337.00000e saved

.                                 use `uvq' ;

.                         merge reg_tpi product survquar using `uvq2';
(label lbreg already defined)
(label lsurvquar already defined)

.                         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |        493      100.00      100.00
------------+-----------------------------------
      Total |        493      100.00

.                         drop _merge;

.                 save `uvq', replace;
file /tmp/St02337.00000c saved

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_unit_val_quarterly.dta saved

.         restore;

. **************************************************************************;
. * Now calculate the weights for the temporal price index. The weights
> * will be based on the bottom 50% of the national nominal consumption
> * per capita (see below). We let the weights vary by strata (3 regions X rural/urban).
> *
> * First, make a small file that has the total nominal HH daily consumption,
> * to use as our denominator. We cannot simply use the `bottom_tpi' file that
> * was created earlier because we will need some other variables from
> * the cons_cat.dta file.
> **************************************************************************;
. use "$path/work/conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta", clear ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path/work/hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          1        0.04        0.04
          3 |      2,716       99.96      100.00
------------+-----------------------------------
      Total |      2,717      100.00

.         collapse (mean) cons_hh_nom hhsize strata hhweight rural news survquar reg_tpi,
>                 by(hhid);

.         lab var cons_hh_nom "Nominal daily HH consumption";

.         rename hhsize   cc_hhs;

.         rename strata   cc_reg;

.         rename hhweight cc_hhw;

.         rename rural    cc_rur;

.         rename news     cc_news;

.         rename survquar cc_qua;

.         rename reg_tpi  cc_reg_tpi;

.         sort hhid;

.         tempfile thhcons;

. save `thhcons', replace;
(note: file /tmp/St02337.00000f not found)
file /tmp/St02337.00000f saved

. **************************************************************************;
. * Merge the file with consumption on the food products with HH consumption file,
> * then use "fillin" to take care of cases where a household did not
> * consume all n_tpi commodities. Note that we need to do the merge
> * first because there are some households that are not in `acredd' at
> * all, because they did not consume *any* of the n_tpi items. Then replace
> * missing values in the "filled in" observations with the relevant values 
> * for that household.
> **************************************************************************;
. use `acredd';

.         cap drop _merge;

.         drop if product==.;
(158 observations deleted)

.         merge hhid using `thhcons';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        159        0.62        0.62
          3 |     25,561       99.38      100.00
------------+-----------------------------------
      Total |     25,720      100.00

.         for var valued_tot quantityd_tot : replace X=0 if _merge==2;

->  replace valued_tot=0 if _merge==2
(159 real changes made)

->  replace quantityd_tot=0 if _merge==2
(159 real changes made)

.                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 valued_tot quantityd_tot : replace X=0 if _merge==2;
>                                 */
> 
>         replace hhsize  =cc_hhs     if _merge==2;
(156 real changes made)

.         replace strata  =cc_reg     if _merge==2;
(158 real changes made)

.         replace hhweight=cc_hhw     if _merge==2;
(157 real changes made)

.         replace rural   =cc_rur     if _merge==2;
(158 real changes made)

.         replace news    =cc_news        if _merge==2;
(150 real changes made)

.         replace survquar=cc_qua     if _merge==2;
(110 real changes made)

.         replace reg_tpi =cc_reg_tpi     if _merge==2;
(158 real changes made)

.         drop _merge cc_* ;

.                 fillin hhid product;

.         replace valued_tot=0 if _fillin;
(55790 real changes made)

.                 for var quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;

->  egen tmp=mean(quantityd_tot), by(hhid)

->  replace quantityd_tot=tmp if _fillin
(55790 real changes made)

->  drop tmp

->  egen tmp=mean(strata), by(hhid)
(30 missing values generated)

->  replace strata=tmp if _fillin
(55761 real changes made)

->  drop tmp

->  egen tmp=mean(rural), by(hhid)
(30 missing values generated)

->  replace rural=tmp if _fillin
(55761 real changes made)

->  drop tmp

->  egen tmp=mean(hhweight), by(hhid)
(60 missing values generated)

->  replace hhweight=tmp if _fillin
(55732 real changes made)

->  drop tmp

->  egen tmp=mean(hhsize), by(hhid)
(90 missing values generated)

->  replace hhsize=tmp if _fillin
(55703 real changes made)

->  drop tmp

->  egen tmp=mean(survquar), by(hhid)
(1470 missing values generated)

->  replace survquar=tmp if _fillin
(54369 real changes made)

->  drop tmp

->  egen tmp=mean(survmon), by(hhid)
(4770 missing values generated)

->  replace survmon=tmp if _fillin
(51179 real changes made)

->  drop tmp

->  egen tmp=mean(news), by(hhid)
(270 missing values generated)

->  replace news=tmp if _fillin
(55529 real changes made)

->  drop tmp

->  egen tmp=mean(reg_tpi), by(hhid)
(30 missing values generated)

->  replace reg_tpi=tmp if _fillin
(55761 real changes made)

->  drop tmp

->  egen tmp=mean(cons_hh_nom), by(hhid)
(120 missing values generated)

->  replace cons_hh_nom=tmp if _fillin
(55674 real changes made)

->  drop tmp

.                                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;
>                                 */
> 
> **************************************************************************;
. * Now calculate the shares, and then the mean shares in each strata, 
> * using hhweight*hhsize weighting. 
> * Note that we are not doing quantity weighting now for the shares.
> **************************************************************************;
.         gen share = valued_tot/cons_hh_nom ;
(1770 missing values generated)

.         gen popwt = hhsize*hhweight;
(90 missing values generated)

.         lab var share "HH share in total consumption";

.         lab var popwt "Population weight: hhsize*hhweight";

. **************************************************************************;
. * Select the bottom 50% (weighted) of the distribution of nominal per 
> * capita consumption.
> **************************************************************************;
.         gen cpc=cons_hh_nom/hhsize;
(180 missing values generated)

.         sum cpc [aw=hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     324.6641              0
10%     513.4186              0       Obs               81330
25%     857.0879              0       Sum of Wgt.   179111489

50%     1412.666                      Mean           2395.221
                        Largest       Std. Dev.      8417.337
75%     2417.119       252488.6
90%     4215.398       252488.6       Variance       7.09e+07
95%     6013.398       252488.6       Skewness       25.87545
99%      12224.3       252488.6       Kurtosis       753.8105

.         global medcpc=r(p$tpi_bottom);

. * MAH ;
.  sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     81480    1.32e+11    4.07e+12   1.01e+09   2.12e+14
     product |     78793    125.6552    13.95636        101        150
  valued_tot |     81510     152.922    585.7047          0   85714.29
quantityd_~t |     81510    .5202694    .7101384          0         60
      strata |     81480    3.830265    1.511715          1          6
-------------+--------------------------------------------------------
    hhweight |     81450    2207.802    1693.745   308.1181   8736.727
    survquar |     80040    2.452024    1.105543          1          4
     survmon |     76740    6.381939    3.384659          1         12
       rural |     81480    .7750368    .4175606          0          1
     reg_tpi |     81480    2.271723    1.217436          0          4
-------------+--------------------------------------------------------
    spdomain |     25561    3.151207    1.263125          1          5
        news |     81240    2.343427    1.111683          1          4
      hhsize |     81420     7.06706    3.584038          1         29
 cons_hh_nom |     81390    14589.07    32266.71          0   874315.5
     _fillin |     81510    .6844559    .4647351          0          1
-------------+--------------------------------------------------------
       share |     79740    .0143853    .0419911          0   .8367343
       popwt |     81420       13754    11235.33   548.9749   104660.2
         cpc |     81330    2239.895     6115.97          0   252488.6

.  codebook hhid;

--------------------------------------------------------------------------------------------------------------------------
hhid                                                                               Unique HH Identifier Across Panel Waves
--------------------------------------------------------------------------------------------------------------------------

                  type:  numeric (double)

                 range:  [1.013e+09,2.115e+14]        units:  1
         unique values:  2716                     missing .:  30/81510

                  mean:   1.3e+11
              std. dev:   4.1e+12

           percentiles:        10%       25%       50%       75%       90%
                           1.1e+09   1.1e+09   3.0e+09   4.0e+09   1.1e+11

.         keep if cpc<=$medcpc;
(39330 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     42180    3.63e+10    1.97e+11   1.01e+09   2.32e+12
     product |     40774    125.6552    13.95645        101        150
  valued_tot |     42180    101.7493    332.7256          0   10285.71
quantityd_~t |     42180    .5284041    .6542123          0   34.28571
      strata |     42180     4.21835    1.303792          1          6
-------------+--------------------------------------------------------
    hhweight |     42180    2123.424    1587.787   308.1181   8736.727
    survquar |     40890    2.363169    1.083888          1          4
     survmon |     39330    6.160183    3.348182          1         12
       rural |     42180    .8776671    .3276737          0          1
     reg_tpi |     42180    2.497866    1.061257          0          4
-------------+--------------------------------------------------------
    spdomain |     11406    3.427407    1.044784          1          5
        news |     41970    2.523231    1.024025          1          4
      hhsize |     42180    7.403983    3.247374          1         29
 cons_hh_nom |     42180    6060.834    3870.438          0    27152.6
     _fillin |     42180    .7273352    .4453351          0          1
-------------+--------------------------------------------------------
       share |     40590    .0166815    .0489232          0   .7619048
       popwt |     42180    14322.62    11055.56   821.0083   104660.2
         cpc |     42180    821.1517    356.4997          0   1412.666

.                 collapse (mean) share (median) medshare=share [aw=popwt] , 
>                         by(reg_tpi product);

.                 egen sumsh=sum(share) , by(reg_tpi);

.                 replace share=share/sumsh;
(138 real changes made)

.                 drop sumsh;

.                 egen sumsh=sum(medshare) , by(reg_tpi);

.                 replace medshare=medshare/sumsh;
(30 real changes made)

.                 drop sumsh;

.                 lab var share "Reg 6: Mean HH share of total consumption";

.                 lab var medshare "Reg 6: Median HH share of total consumption";

.                 sort reg_tpi product;

.                 save "$path/work/tpi_reg_tpi_share.dta", replace;
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_reg_tpi_share.dta not found)
file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/tpi_reg_tpi_share.dta saved

.                 tempfile tempwt6;

.                 save `tempwt6', replace;
(note: file /tmp/St02337.00000g not found)
file /tmp/St02337.00000g saved

. use `uvq', clear;

.         sort reg_tpi product;

. save , replace;
file /tmp/St02337.00000c saved

. use `tempwt6';

.         merge reg_tpi product using `uvq';
variables reg_tpi product do not uniquely identify observations in /tmp/St02337.00000c
(label lbreg already defined)

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         14        2.76        2.76
          3 |        493       97.24      100.00
------------+-----------------------------------
      Total |        507      100.00

.         gen tpi1     =ppkg     *share;
(14 missing values generated)

.         gen tpi1_trim=ppkg_trim*share;
(14 missing values generated)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       502    125.9522    13.95422        101        150
     reg_tpi |       507    2.216963    1.306819          0          4
       share |       507     .037098    .0414645          0   .2004303
    medshare |       507    .0374753    .1036145          0    .632345
    survquar |       493    2.440162    1.105681          1          4
-------------+--------------------------------------------------------
        news |       493    2.348884    1.138741          1          4
  valued_tot |       493     7329.15     9209.42   28.57143   71752.54
quantityd_~t |       493    11.33779    15.80897   .0357143   102.9673
        ppkg |       493    1561.561    1930.723   54.90598      15000
   ppkg_trim |       493    1488.922    1911.178   42.72749      15000
-------------+--------------------------------------------------------
      _merge |       507    2.944773    .3280486          1          3
        tpi1 |       493    66.16811    113.4047   .2575862    867.925
   tpi1_trim |       493    62.60399    109.7662   .2575862   860.1837

. keep if survquar!=.;
(14 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       493    126.0588    13.91052        101        150
     reg_tpi |       493    2.249493    1.286509          0          4
       share |       493    .0381456     .041574   .0001568   .2004303
    medshare |       493    .0385396    .1048826          0    .632345
    survquar |       493    2.440162    1.105681          1          4
-------------+--------------------------------------------------------
        news |       493    2.348884    1.138741          1          4
  valued_tot |       493     7329.15     9209.42   28.57143   71752.54
quantityd_~t |       493    11.33779    15.80897   .0357143   102.9673
        ppkg |       493    1561.561    1930.723   54.90598      15000
   ppkg_trim |       493    1488.922    1911.178   42.72749      15000
-------------+--------------------------------------------------------
      _merge |       493           3           0          3          3
        tpi1 |       493    66.16811    113.4047   .2575862    867.925
   tpi1_trim |       493    62.60399    109.7662   .2575862   860.1837

. list in  1/3;

     +-------------------------------------------------------------------------------------------------------------+
  1. | product | reg_tpi |    share | medshare |    survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     107 | Kampala | .0207437 |        0 |  Oct-Dec 10 | Central | 857.1429 | .2857143 |     3000 |     3000 |
     |-------------------------------------------------------------------------------------------------------------|
     |              _merge              |                  tpi1              |              tpi1_t~m               |
     |                   3              |              62.23116              |              62.23116               |
     +-------------------------------------------------------------------------------------------------------------+

     +-------------------------------------------------------------------------------------------------------------+
  2. | product | reg_tpi |    share | medshare |    survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     108 | Kampala | .0006526 |        0 | Apr-June 11 | Central | 28.57143 | .0357143 | 799.9999 | 799.9999 |
     |-------------------------------------------------------------------------------------------------------------|
     |              _merge              |                  tpi1              |              tpi1_t~m               |
     |                   3              |              .5220856              |              .5220856               |
     +-------------------------------------------------------------------------------------------------------------+

     +-------------------------------------------------------------------------------------------------------------+
  3. | product | reg_tpi |    share | medshare |    survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     110 | Kampala | .1189225 | .1088928 |  Oct-Dec 10 | Central |  3371.58 |  1.68579 |     2000 |     2000 |
     |-------------------------------------------------------------------------------------------------------------|
     |              _merge              |                  tpi1              |              tpi1_t~m               |
     |                   3              |               237.845              |               237.845               |
     +-------------------------------------------------------------------------------------------------------------+

. list in -3/-1;

     +----------------------------------------------------------------------------------------------------------------+
491. | product | reg_tpi |    share | medshare |       survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     150 | Western | .0148618 |  .041664 |    Jan-Marc 11 | Western | 3601.478 | 11.12012 | 323.8705 |  379.402 |
     |----------------------------------------------------------------------------------------------------------------|
     |              _merge               |                  tpi1               |               tpi1_t~m               |
     |                   3               |              4.813293               |                5.63859               |
     +----------------------------------------------------------------------------------------------------------------+

     +----------------------------------------------------------------------------------------------------------------+
492. | product | reg_tpi |    share | medshare |       survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     150 | Western | .0148618 |  .041664 |    Apr-June 11 | Western | 2198.346 | 7.189951 | 305.7527 | 399.3661 |
     |----------------------------------------------------------------------------------------------------------------|
     |              _merge               |                  tpi1               |               tpi1_t~m               |
     |                   3               |               4.54403               |               5.935292               |
     +----------------------------------------------------------------------------------------------------------------+

     +----------------------------------------------------------------------------------------------------------------+
493. | product | reg_tpi |    share | medshare |       survquar |    news | valued~t | quanti~t |     ppkg | ppkg_t~m |
     |     150 | Western | .0148618 |  .041664 | July-Sept 2011 | Western | 1696.156 | 7.857604 | 215.8618 |  445.631 |
     |----------------------------------------------------------------------------------------------------------------|
     |              _merge               |                  tpi1               |               tpi1_t~m               |
     |                   3               |              3.208091               |                6.62287               |
     +----------------------------------------------------------------------------------------------------------------+

.         **************************************************************************;
. * Find TPI level and indexes for non-trimmed and trimmed prices
> **************************************************************************;
. * Not trimmed ;
.         collapse (sum) tpi1 tpi1_trim  , by(reg_tpi survquar);

.                 for num 1/$n_tpi :
>                         sum tpi1 if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1 if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1 if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1 if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1 if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1 if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)

->  sum tpi1 if reg_tpi==5 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==5 & survquar==4 , meanonly

->  global base5=r(mean)

.                 lab var tpi1 "Temporal price index before normalization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi=tpi1/${base`v'} if reg_tpi==`v' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi=tpi1/${base`v'} if reg_tpi==`v' ;
  7.                                         } ;
  8.                                 } ;
(15 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)
(0 real changes made)

.                                                                                                 *gen     tpi=tpi1/$base1
>  if reg_tpi==1;
.                 *replace tpi=tpi1/$base2 if reg_tpi==2;
.                 *replace tpi=tpi1/$base3 if reg_tpi==3;
.                 *replace tpi=tpi1/$base4 if reg_tpi==4;
.                 *replace tpi=tpi1/$base5 if reg_tpi==5;
.                 *replace tpi=tpi1/$base6 if reg_tpi==6;
.                                                                                 lab var tpi "Temporal price index (Q4=1)
> ";

. * Trimmed ;
.                 for num 1/$n_tpi :
>                         sum tpi1_trim if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1_trim if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1_trim if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1_trim if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1_trim if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1_trim if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)

->  sum tpi1_trim if reg_tpi==5 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==5 & survquar==4 , meanonly

->  global base5=r(mean)

.                 lab var tpi1_trim "Six regions: TRIMMED Temporal price index before normalization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi_trim=tpi1_trim/${base`v'} if reg_tpi==`v' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi_trim=tpi1_trim/${base`v'} if reg_tpi==`v' ;
  7.                                         } ;
  8.                                 } ;
(15 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)
(0 real changes made)

.                                                 lab var tpi_trim "TRIMMED Temporal price index (Q4=1)";

.                 sort reg_tpi survquar;

.             drop if reg_tpi<1 | reg_tpi>$n_tpi;
(3 observations deleted)

. gen tpi_diff = tpi - tpi_trim;

. lab var tpi_diff "TPI difference btw trimmed/untrimmed";

. twoway (connected tpi_trim survquar),yline(1) by(, title("TPI: Trimmed"))
> by(reg_tpi) sav("$path/work/reg_tpi-tpi_trim", replace);
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/reg_tpi-tpi_trim.gph not found)
(file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/reg_tpi-tpi_trim.gph saved)

. graph export "$path/work/reg_tpi-tpi_trim.tif", replace;
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/reg_tpi-tpi_trim.tif not found)
(file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/reg_tpi-tpi_trim.tif written in TIFF format)

. list reg_tpi survquar tpi tpi_trim tpi_diff;

     +-------------------------------------------------------------+
     |  reg_tpi         survquar        tpi   tpi_trim    tpi_diff |
     |-------------------------------------------------------------|
  1. |  Central       Oct-Dec 10   .7708836   .7787654   -.0078818 |
  2. |  Central      Jan-Marc 11   .8812565   .8588735    .0223829 |
  3. |  Central      Apr-June 11   .9680914   .9439998    .0240916 |
  4. |  Central   July-Sept 2011          1          1           0 |
  5. |  Eastern       Oct-Dec 10   .6629828   .7730982   -.1101153 |
     |-------------------------------------------------------------|
  6. |  Eastern      Jan-Marc 11   .6986216   .7488575   -.0502359 |
  7. |  Eastern      Apr-June 11   .8588197   .9843472   -.1255275 |
  8. |  Eastern   July-Sept 2011          1          1           0 |
  9. | Northern       Oct-Dec 10   .7757034   .8808464    -.105143 |
 10. | Northern      Jan-Marc 11   .7371657   .8919085   -.1547427 |
     |-------------------------------------------------------------|
 11. | Northern      Apr-June 11   .8267024   .9590539   -.1323515 |
 12. | Northern   July-Sept 2011          1          1           0 |
 13. |  Western       Oct-Dec 10   .7258057   .8402035   -.1143978 |
 14. |  Western      Jan-Marc 11   .8968236   .9428219   -.0459983 |
 15. |  Western      Apr-June 11    1.05824   1.185341   -.1271006 |
     |-------------------------------------------------------------|
 16. |  Western   July-Sept 2011          1          1           0 |
     +-------------------------------------------------------------+

.                 sort reg_tpi survquar;

. keep reg_tpi survquar tpi_trim;

. save "$path/work/temp_index_reg_tpi.dta", replace;
(note: file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/temp_index_reg_tpi.dta not found)
file /home/bjvca/data/data/GAP/Haruna/UNPS_2011/GAPP3//work/temp_index_reg_tpi.dta saved

.                        **************************************************************************
> * 090_temp_index.do     (end)
> **************************************************************************;
. cap log close;
