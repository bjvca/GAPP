{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}log_tot_s
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/log_total.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}20 May 2013, 21:24:12

{com}. log using "$path/rep/000_boom.log"  , name(log_000_boom) replace
{txt}{.-}
      name:  {res}log_000_boom
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/000_boom.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:12

{com}. 
. display "* # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # *"
{res}* # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # *

{com}. display ""
{res}

{com}. display "Generel information:"
{res}Generel information:

{com}. display "   UGANDA HOUSEHOLD BUDGET SURVEY 2009/10"
{res}   UGANDA HOUSEHOLD BUDGET SURVEY 2009/10

{com}. display "   Poverty rate estimation"
{res}   Poverty rate estimation

{com}. display "   Methodology: Iterative procedure and revealed preferences tests"
{res}   Methodology: Iterative procedure and revealed preferences tests

{com}. display ""
{res}

{com}. display "* # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # *"
{res}* # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # *

{com}. 
. 
. **************************************************************************

. * 000_boom.do(start)

. *

. * Reminders:

. *1) Check very top of this file to make sure you are on the right path! 

. *2) GAMS 22.5 must be placed onto the path. See 190_revpref13_m1.bat.

. *   Typically this needs to be edited.

. *   3) In case of implementing a new survey the user must make necessary

. *      changes in 010_initial.do, 020_hhdata.do and 030_rawdata.do.

. *

. * Process:

. * - The do-file prefix indicates first time a do-file is called

. *

. * KS, 2003

. * CA, 2009-2010

. * MAH, Apr. 2012

. **************************************************************************

. 
. clear all

. set more off

. set mem 700m

. 
. noisily display "Start time: " "$S_TIME"
{res}Start time: 21:24:13

{com}. 
. 
. 
. **************************************************************************

. * Macros. Region definitions. Demographic definitions.

. **************************************************************************

. do "$path/new/010_initial.do"
{txt}
{com}. cap log close
{txt}
{com}. log using "$path/rep/010_initial.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/010_initial.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:14
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. ******************************************************************************
> * 010_initial.do                (start)
> ******************************************************************************;
. ******************************************************************************
> * Purpose: Set some globals
> ******************************************************************************;
. ******************************************************************************
> * TPI basket
> ******************************************************************************;
. * Number of items for Uganda i primarily set it to 30 on considering a product for appearing over 1000 times on households menu min was 1085 and max was 6157 however the relevant code in new is atvivated to take care of this automatically;
. global product_tpi_n "30";
{txt}
{com}. * Code choose $product_tpi_n ;
. global product_tpi   "product_tpi==1";
{txt}
{com}. * Initial (arbitrary) quantile defining poor for price index calculations.
> * Mozambique: bottom 60%. Vietnam: bottom 20%. Tanzania: bottom 40% . Uganda: headcount 2009 24.5% ;
. global tpi_bottom "50";
{txt}
{com}.  * Set the number of regions in the TPI calc for Uganda are set to 4 as east central north and east;
. global n_tpi "4";
{txt}
{com}. * To reproduce the mozambique 10 numbers, the following global should be commented out. It controls a line in 140_iterate.do 
> * where observations not measured in kg are dropped. For all other datasets, all observations should be converted to kg's before
> * the toolkit is run. For all other datasets, this line should therefore be included.
> global MZ "*";
. ******************************************************************************
> * Initial (arbitrary) quantile defining the (relatively) poor.
> ******************************************************************************;
. global bottom "50";
{txt}
{com}. ******************************************************************************
> * Number of iterations in 140_iterate.do
> ******************************************************************************;
. global it_n "5";
{txt}
{com}. ******************************************************************************
> * Set the number of regions in the spatial domain;
. ******************************************************************************;
. global n_spdom "5";
{txt}
{com}. ******************* we deleted East urban, North urban and West urban because too few observations were in those spatial domains;
.  ******************************************************************************
> * Revealed preferences choices
> ******************************************************************************;
. * Activate GAMS program according to number of regions in spatial domain;
. *global revpref "190_revpref13_m1.bat";
. *global no_temp_rev " ";
. * k spatial regions and no intertemporal revealed preference condition:
>   Activate the next two lines below;
. global no_temp_rev "*";
{txt}
{com}. global revpref "190_revpref13_r.bat";
{txt}
{com}.  **************************************************************************
> * 010_initial.do                (end)
> **************************************************************************;
. log close;
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/010_initial.log
  {txt}log type:  {res}text
 {txt}closed on:  {res}20 May 2013, 21:24:14
{txt}{.-}

{com}. 
{txt}end of do-file

{com}. 
. *do "C:\user\gapp\z_data_preb/new/100_collect_expen_moz.do"

. *s;

. 
. *do "C:\user\gapp\z_data_preb/new/000_boom.do"

. 
. *global path "C:\user\gapp"

. 
. 
. 
. **************************************************************************;

. **************************************************************************;

. * This is the block of do files to set up the data to get nominal

. * consumption. These DO NOT need to be bootstrapped.

. **************************************************************************;

. **************************************************************************;

. 
. * This code produces some once for all data for the in-folder. Don't

. * run it unless you know what you are doing!!!

. * Produces education expenditure

. *do "$path\new\Create/education_Create.do"

. * Imputation of missing recepts-in-kind. Run the code without this first...

. *do "$path\new\Create/0_code_chain.do"

. * First poverty lines dependent on IAF

. *do "$path\new\Create/povlines_first_iof_Create.do"

. * Match product codes for different surveys

. *do "$path\new\Create/match96_02_Create.do"

. * Basket from previous survey

. *do "$path\new\Create/smallbasket_iof_Create.do"

. * Match product codes between surveys

. *do "$path\new\Create/rev_pref_matchcodes_02-96_iof_Create.do"

. * Update poverty lines

. *do "$path\new\Create/povlines-96-v1-vers7_iof_Create.do"

. * Food share

. *do "$path\new\Create/foodshr96_iof_Create.do"

. 
. *do "$path\new\Create/.do"

. *do "$path\new\Create/.do"

. 
. */

. * This set of files takes the raw data and creates more handy data 

. * sets in the work-folder

. do "$path/new/020_in_2_work_folder.do"
{txt}
{com}. clear all
{txt}
{com}. *global path "C:/Users/Templeton/Desktop/GAPP/GAPP-UGANDA-HARUNA"
. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/020_hhdata.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/020_hhdata.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:15
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 020_hhdata.do         (start)
> *
> * Organize the hhid identifier in the HHData file the same way, and keep
> * only the relevant variables.
> *
> * This file sets:
> * - interview month, quarter and year
> * - regions: make all needed regions. But in the end only the one specified
> *            in initial.do are kept. These are
> *            - rural: 0=urban, 1=rural
> *            - news: speficifying North, East, West, South. But combinations
> *                    are also possible, eg. North-East, Center,...
> *            - reg_tpi: regions with own TPI
> *            - strata: strata regions
> *            - spdomain: spatial domains (regions with own poverty line)
> *            - news_ru_ur: combination of news and rural
> **************************************************************************;
. use "$path/in/hhdata.dta", clear;
{txt}
{com}. *recode spdomain 10=1 11=2 20=3 30=4 40=5 these have been set to five for Uganda to ensure hwe have at least 1000 households per domain;
. tab spdomain, missing;

     {txt}spdomain {c |}      Freq.     Percent        Cum.
{hline 14}{c +}{hline 35}
Central rural {c |}{res}      1,177       17.37       17.37
{txt}Central urban {c |}{res}        809       11.94       29.31
{txt}      Eastern {c |}{res}      1,406       20.75       50.07
{txt}     Northern {c |}{res}      1,956       28.87       78.94
{txt}      Western {c |}{res}      1,427       21.06      100.00
{txt}{hline 14}{c +}{hline 35}
        Total {c |}{res}      6,775      100.00
{txt}
{com}.         sort hhid;
{txt}
{com}.         save "$path/work/hhdata.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/hhdata.dta saved

{com}.         sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 6}strata {c |}{res}      6775    5.551734    2.873672          1         10
{txt}{space 8}mult {c |}{res}      6775    919.0598    636.8381   26.67222   10279.15
{txt}{space 6}region {c |}{res}      6775    2.416827    1.118389          1          4
{txt}{space 7}urban {c |}{res}      6775    .1800738    .3842773          0          1
{txt}{hline 13}{c +}{hline 56}
{space 4}district {c |}{res}      6775    250.5169    112.9571        101        419
{txt}{space 7}rmult {c |}{res}      6775    919.0713    636.8355         27      10279
{txt}{space 6}hhsize {c |}{res}      6775        4.96     2.75857          1         24
{txt}{space 5}welfare {c |}{res}      6775    73089.98    95260.67   2034.431    1932420
{txt}{space 4}hhweight {c |}{res}      6775    4533.332    4304.242         54      92511
{txt}{hline 13}{c +}{hline 56}
{space 6}poor09 {c |}{res}      6775      .23631    .4248461          0          1
{txt}{space 9}day {c |}{res}      6775    14.08576    7.581748          1         31
{txt}{space 7}month {c |}{res}      6775    6.686199    3.405931          1         12
{txt}{space 8}Year {c |}{res}      6775    2009.336    .4722506       2009       2010
{txt}{space 7}h1bq8 {c |}{res}      6775    1.005018    .0706683          1          2
{txt}{hline 13}{c +}{hline 56}
{space 9}psu {c |}{res}      6775     365.894     201.698          1        712
{txt}{space 4}survquar {c |}{res}      6775    2.499336    1.144024          1          4
{txt}{space 5}survmon {c |}{res}      6775    6.713948     3.34507          1         12
{txt}{space 7}rural {c |}{res}      6775    .8199262    .3842773          0          1
{txt}{space 8}news {c |}{res}      6775    2.416827    1.118389          1          4
{txt}{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}      6775           1           0          1          1
{txt}{space 4}spdomain {c |}{res}      6775      3.2431    1.373578          1          5
{txt}{space 5}reg_tpi {c |}{res}      6775    2.416827    1.118389          1          4
{txt}
{com}. use "$path/in/indata.dta", clear;
{txt}
{com}.         *sort hhid;
.         save "$path/work/indata.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/indata.dta saved

{com}.         sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}indid {c |}{res}     35945    2.57e+11    1.10e+11   1.01e+11   4.19e+11
{txt}{space 4}motherhh {c |}{res}     35945    .8787592    .3264114          0          1
{txt}{space 8}hhid {c |}{res}     35945    2.57e+09    1.10e+09   1.01e+09   4.19e+09
{txt}{space 9}sex {c |}{res}     35945     1.50861    .4999328          1          2
{txt}{space 9}age {c |}{res}     35945    18.94194    17.44062          0         98
{txt}
{com}. use "$path/in/calperg.dta", clear;
{txt}
{com}.         *sort hhid;
.         save "$path/work/calperg.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/calperg.dta saved

{com}.         sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}product {c |}{res}        62       130.5    18.04162        100        161
{txt}{space 4}descript {c |}{res}         0
{txt}{space 5}calperg {c |}{res}        62    1.980716    2.136812          0       8.84
{txt}
{com}. use "$path/in/cons_cod.dta", clear;
{txt}
{com}.         *sort hhid;
.         save "$path/work/cons_cod.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_cod.dta saved

{com}.         sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    412045    810.2635    358.1243        100        999
{txt}{space 4}food_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 4}prod_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 4}descript {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{hline 13}{c +}{hline 56}
{space 3}quantityd {c |}{res}     89596     .779464    3.170331          0   364.2857
{txt}{space 1}cod_hh_nom3 {c |}{res}     89596     383.356    648.4919          0      18500
{txt}{space 2}cod_hh_nom {c |}{res}    412045    1602.923    615777.4          0   3.95e+08
{txt}{space 1}cod_hh_nom2 {c |}{res}    252585    2614.436    786487.2   .0027397   3.95e+08
{txt}
{com}. use "$path/in/cons_cod_trans.dta", clear;
{txt}
{com}.         *sort hhid;
.         save "$path/work/cons_cod_trans.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_cod_trans.dta saved

{com}.         sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     89596    2.45e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     89596    131.0155     15.7293        100        161
{txt}{space 7}untcd {c |}{res}     88138    44.41037    30.53397          1         85
{txt}{space 8}unit {c |}{res}     89596           1           0          1          1
{txt}{space 4}food_cat {c |}{res}     89596           1           0          1          1
{txt}{hline 13}{c +}{hline 56}
{space 3}quantityz {c |}{res}     89596     .779464    3.170331          0   364.2857
{txt}{space 6}valuez {c |}{res}     89596     383.356    648.4919          0      18500
{txt}
{com}. /*
> use "$path/in/cons_cod_trans.dta", clear;
>         *sort hhid;
>         sum;
> for var value quantityd cod_hh_nom cod_hh_nom2 cod_hh_nom3: replace X=0 if X==.;
> collapse food_cat prod_cat (sum) value quantityd cod_hh_nom cod_hh_nom2 cod_hh_nom3, by(hhid product descript);
>         save "$path/work/cons_cod.dta", replace;
>         sum;
> */
>  
> **************************************************************************
> * 020_hhdata.do         (end)
> **************************************************************************;
. cap log close;
{txt}
{com}. 
{txt}end of do-file

{com}. 
. /*
{err}unrecognized command:  / invalid command name
{txt}{search r(199):r(199);}

{com}. * All kind of raw expenditure is handled: daily, own and monthly, rent and use value, education etc.

. do "$path/new/030_rawdata.do"
{err}{p 0 4 2}
file /home/bjvca/data/data/GAP/Haruna/new/030_rawdata.do
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. 
. * Data set specific changes to each processed raw data set takes place here

. do "$path/new/040_specifities.do"
{err}{p 0 4 2}
file /home/bjvca/data/data/GAP/Haruna/new/040_specifities.do
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. 
. * These files summarizes and checks the data. But no temporal deflation done here yet

. do "$path/new/050_consump_nom.do"
{err}{p 0 4 2}
file /home/bjvca/data/data/GAP/Haruna/new/050_consump_nom.do
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. 
. * Bring in data on food product's calories per gram

. do "$path/new/060_calperg.do"
{err}{p 0 4 2}
file /home/bjvca/data/data/GAP/Haruna/new/060_calperg.do
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. */

. **********************************************************************;

. **********************************************************************;

. 
. do "$path/new/070_calpp.do"/* Calories per person in spatial domains*/
{txt}
{com}. *global path "C:/Users/Templeton/Desktop/GAPP/GAPP-UGANDA-HARUNA"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/070_calpp.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/070_calpp.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:17
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. *global fert_rate "fert_rate";
. ***********************************************************************
> * 070_calpp.do          (start)
> *
> * Purpose: Determine calories required for each person per domain per day.
> ***********************************************************************;
. /*
> This file uses:
>         work/indata.dta
>         work/hhdata.dta
> 
> This file creates:
>         work/calpp.dta
> */
> 
> *-------------------------------------------------------------------------*
> * Include fertility rates from csv-file
> *-------------------------------------------------------------------------*;
. clear;
{txt}
{com}. insheet sex rural age fert_rate using "$path/in/fert_rate_Uganda.csv";
{txt}(4 vars, 96 obs)

{com}. ***************************************** check for Ugandan fertility rates *************************************
> *************************************************************************************************************;
. sort sex rural age;
{txt}
{com}. tempfile fert_rate;
{txt}
{com}. save `fert_rate';
{txt}file /tmp/St08757.000001 saved

{com}. list;
{txt}
     {c TLC}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c TRC}
     {c |} {res}sex   rural   age   fert_r~e {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
  1. {c |} {res}  2       0    12       .008 {txt}{c |}
  2. {c |} {res}  2       0    13       .008 {txt}{c |}
  3. {c |} {res}  2       0    14       .008 {txt}{c |}
  4. {c |} {res}  2       0    15       .134 {txt}{c |}
  5. {c |} {res}  2       0    16       .134 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
  6. {c |} {res}  2       0    17       .134 {txt}{c |}
  7. {c |} {res}  2       0    18       .134 {txt}{c |}
  8. {c |} {res}  2       0    19       .134 {txt}{c |}
  9. {c |} {res}  2       0    20       .313 {txt}{c |}
 10. {c |} {res}  2       0    21       .313 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 11. {c |} {res}  2       0    22       .313 {txt}{c |}
 12. {c |} {res}  2       0    23       .313 {txt}{c |}
 13. {c |} {res}  2       0    24       .313 {txt}{c |}
 14. {c |} {res}  2       0    25       .291 {txt}{c |}
 15. {c |} {res}  2       0    26       .291 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 16. {c |} {res}  2       0    27       .291 {txt}{c |}
 17. {c |} {res}  2       0    28       .291 {txt}{c |}
 18. {c |} {res}  2       0    29       .291 {txt}{c |}
 19. {c |} {res}  2       0    30       .232 {txt}{c |}
 20. {c |} {res}  2       0    31       .232 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 21. {c |} {res}  2       0    32       .232 {txt}{c |}
 22. {c |} {res}  2       0    33       .232 {txt}{c |}
 23. {c |} {res}  2       0    34       .232 {txt}{c |}
 24. {c |} {res}  2       0    35       .172 {txt}{c |}
 25. {c |} {res}  2       0    36       .172 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 26. {c |} {res}  2       0    37       .172 {txt}{c |}
 27. {c |} {res}  2       0    38       .172 {txt}{c |}
 28. {c |} {res}  2       0    39       .172 {txt}{c |}
 29. {c |} {res}  2       0    40       .074 {txt}{c |}
 30. {c |} {res}  2       0    41       .074 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 31. {c |} {res}  2       0    42       .074 {txt}{c |}
 32. {c |} {res}  2       0    43       .074 {txt}{c |}
 33. {c |} {res}  2       0    44       .074 {txt}{c |}
 34. {c |} {res}  2       0    45       .023 {txt}{c |}
 35. {c |} {res}  2       0    46       .023 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 36. {c |} {res}  2       0    47       .023 {txt}{c |}
 37. {c |} {res}  2       0    48       .023 {txt}{c |}
 38. {c |} {res}  2       0    49       .023 {txt}{c |}
 39. {c |} {res}  2       0    50       .006 {txt}{c |}
 40. {c |} {res}  2       0    51       .006 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 41. {c |} {res}  2       0    52       .006 {txt}{c |}
 42. {c |} {res}  2       0    53       .006 {txt}{c |}
 43. {c |} {res}  2       0    54       .006 {txt}{c |}
 44. {c |} {res}  2       0    55       .006 {txt}{c |}
 45. {c |} {res}  2       0    56       .006 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 46. {c |} {res}  2       0    57       .006 {txt}{c |}
 47. {c |} {res}  2       0    58       .006 {txt}{c |}
 48. {c |} {res}  2       0    59       .006 {txt}{c |}
 49. {c |} {res}  2       1    12       .008 {txt}{c |}
 50. {c |} {res}  2       1    13       .008 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 51. {c |} {res}  2       1    14       .008 {txt}{c |}
 52. {c |} {res}  2       1    15       .134 {txt}{c |}
 53. {c |} {res}  2       1    16       .134 {txt}{c |}
 54. {c |} {res}  2       1    17       .134 {txt}{c |}
 55. {c |} {res}  2       1    18       .134 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 56. {c |} {res}  2       1    19       .134 {txt}{c |}
 57. {c |} {res}  2       1    20       .313 {txt}{c |}
 58. {c |} {res}  2       1    21       .313 {txt}{c |}
 59. {c |} {res}  2       1    22       .313 {txt}{c |}
 60. {c |} {res}  2       1    23       .313 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 61. {c |} {res}  2       1    24       .313 {txt}{c |}
 62. {c |} {res}  2       1    25       .291 {txt}{c |}
 63. {c |} {res}  2       1    26       .291 {txt}{c |}
 64. {c |} {res}  2       1    27       .291 {txt}{c |}
 65. {c |} {res}  2       1    28       .291 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 66. {c |} {res}  2       1    29       .291 {txt}{c |}
 67. {c |} {res}  2       1    30       .232 {txt}{c |}
 68. {c |} {res}  2       1    31       .232 {txt}{c |}
 69. {c |} {res}  2       1    32       .232 {txt}{c |}
 70. {c |} {res}  2       1    33       .232 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 71. {c |} {res}  2       1    34       .232 {txt}{c |}
 72. {c |} {res}  2       1    35       .172 {txt}{c |}
 73. {c |} {res}  2       1    36       .172 {txt}{c |}
 74. {c |} {res}  2       1    37       .172 {txt}{c |}
 75. {c |} {res}  2       1    38       .172 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 76. {c |} {res}  2       1    39       .172 {txt}{c |}
 77. {c |} {res}  2       1    40       .074 {txt}{c |}
 78. {c |} {res}  2       1    41       .074 {txt}{c |}
 79. {c |} {res}  2       1    42       .074 {txt}{c |}
 80. {c |} {res}  2       1    43       .074 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 81. {c |} {res}  2       1    44       .074 {txt}{c |}
 82. {c |} {res}  2       1    45       .023 {txt}{c |}
 83. {c |} {res}  2       1    46       .023 {txt}{c |}
 84. {c |} {res}  2       1    47       .023 {txt}{c |}
 85. {c |} {res}  2       1    48       .023 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 86. {c |} {res}  2       1    49       .023 {txt}{c |}
 87. {c |} {res}  2       1    50       .006 {txt}{c |}
 88. {c |} {res}  2       1    51       .006 {txt}{c |}
 89. {c |} {res}  2       1    52       .006 {txt}{c |}
 90. {c |} {res}  2       1    53       .006 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 91. {c |} {res}  2       1    54       .006 {txt}{c |}
 92. {c |} {res}  2       1    55       .006 {txt}{c |}
 93. {c |} {res}  2       1    56       .006 {txt}{c |}
 94. {c |} {res}  2       1    57       .006 {txt}{c |}
 95. {c |} {res}  2       1    58       .006 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c RT}
 96. {c |} {res}  2       1    59       .006 {txt}{c |}
     {c BLC}{hline 5}{c -}{hline 7}{c -}{hline 5}{c -}{hline 10}{c BRC}

{com}. *-------------------------------------------------------------------------*
> * Now do the calorie needs for individuals
> *-------------------------------------------------------------------------*;
. use "$path/work/indata.dta";
{txt}
{com}. * CA bootstrap modification;
. sort hhid;
{txt}
{com}. merge hhid using "$path/work/hhdata.dta";
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}. tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     35,945      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     35,945      100.00
{txt}
{com}.  drop _m;
{txt}
{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}indid {c |}{res}     35945    2.57e+11    1.10e+11   1.01e+11   4.19e+11
{txt}{space 4}motherhh {c |}{res}     35945    .8787592    .3264114          0          1
{txt}{space 8}hhid {c |}{res}     35945    2.57e+09    1.10e+09   1.01e+09   4.19e+09
{txt}{space 9}sex {c |}{res}     35945     1.50861    .4999328          1          2
{txt}{space 9}age {c |}{res}     35945    18.94194    17.44062          0         98
{txt}{hline 13}{c +}{hline 56}
{space 6}strata {c |}{res}     35945    5.710586    2.766681          1         10
{txt}{space 8}mult {c |}{res}     35945    917.2863    619.3906   26.67222   10279.15
{txt}{space 6}region {c |}{res}     35945    2.480234    1.085821          1          4
{txt}{space 7}urban {c |}{res}     35945    .1471693    .3542795          0          1
{txt}{space 4}district {c |}{res}     35945    257.0191    109.5067        101        419
{txt}{hline 13}{c +}{hline 56}
{space 7}rmult {c |}{res}     35945    917.2973    619.3847         27      10279
{txt}{space 6}hhsize {c |}{res}     35945    6.416497    2.935303          1         24
{txt}{space 5}welfare {c |}{res}     35945    62735.83     78270.9   2034.431    1932420
{txt}{space 4}hhweight {c |}{res}     35945     5917.96    5136.521         54      92511
{txt}{space 6}poor09 {c |}{res}     35945    .2781472    .4480925          0          1
{txt}{hline 13}{c +}{hline 56}
{space 9}day {c |}{res}     35945     14.0508    7.502636          1         31
{txt}{space 7}month {c |}{res}     35945     6.71398    3.387719          1         12
{txt}{space 8}Year {c |}{res}     35945    2009.329    .4700192       2009       2010
{txt}{space 7}h1bq8 {c |}{res}     35945     1.00498     .070393          1          2
{txt}{space 9}psu {c |}{res}     35945    377.7054    193.8014          1        712
{txt}{hline 13}{c +}{hline 56}
{space 4}survquar {c |}{res}     35945    2.484852    1.142574          1          4
{txt}{space 5}survmon {c |}{res}     35945    6.667353    3.350374          1         12
{txt}{space 7}rural {c |}{res}     35945    .8528307    .3542795          0          1
{txt}{space 8}news {c |}{res}     35945    2.480234    1.085821          1          4
{txt}{space 8}bswt {c |}{res}     35945           1           0          1          1
{txt}{hline 13}{c +}{hline 56}
{space 4}spdomain {c |}{res}     35945    3.321575    1.334996          1          5
{txt}{space 5}reg_tpi {c |}{res}     35945    2.480234    1.085821          1          4
{txt}
{com}. * Include fertility rates;
. sort sex rural age;
{txt}
{com}. merge sex rural age using `fert_rate';
{txt}{p 0 4 2}
variable{txt}s{txt} sex
rural
age
do not uniquely identify observations in
the master data
{p_end}

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}indid {c |}{res}     35945    2.57e+11    1.10e+11   1.01e+11   4.19e+11
{txt}{space 4}motherhh {c |}{res}     35945    .8787592    .3264114          0          1
{txt}{space 8}hhid {c |}{res}     35945    2.57e+09    1.10e+09   1.01e+09   4.19e+09
{txt}{space 9}sex {c |}{res}     35945     1.50861    .4999328          1          2
{txt}{space 9}age {c |}{res}     35945    18.94194    17.44062          0         98
{txt}{hline 13}{c +}{hline 56}
{space 6}strata {c |}{res}     35945    5.710586    2.766681          1         10
{txt}{space 8}mult {c |}{res}     35945    917.2863    619.3906   26.67222   10279.15
{txt}{space 6}region {c |}{res}     35945    2.480234    1.085821          1          4
{txt}{space 7}urban {c |}{res}     35945    .1471693    .3542795          0          1
{txt}{space 4}district {c |}{res}     35945    257.0191    109.5067        101        419
{txt}{hline 13}{c +}{hline 56}
{space 7}rmult {c |}{res}     35945    917.2973    619.3847         27      10279
{txt}{space 6}hhsize {c |}{res}     35945    6.416497    2.935303          1         24
{txt}{space 5}welfare {c |}{res}     35945    62735.83     78270.9   2034.431    1932420
{txt}{space 4}hhweight {c |}{res}     35945     5917.96    5136.521         54      92511
{txt}{space 6}poor09 {c |}{res}     35945    .2781472    .4480925          0          1
{txt}{hline 13}{c +}{hline 56}
{space 9}day {c |}{res}     35945     14.0508    7.502636          1         31
{txt}{space 7}month {c |}{res}     35945     6.71398    3.387719          1         12
{txt}{space 8}Year {c |}{res}     35945    2009.329    .4700192       2009       2010
{txt}{space 7}h1bq8 {c |}{res}     35945     1.00498     .070393          1          2
{txt}{space 9}psu {c |}{res}     35945    377.7054    193.8014          1        712
{txt}{hline 13}{c +}{hline 56}
{space 4}survquar {c |}{res}     35945    2.484852    1.142574          1          4
{txt}{space 5}survmon {c |}{res}     35945    6.667353    3.350374          1         12
{txt}{space 7}rural {c |}{res}     35945    .8528307    .3542795          0          1
{txt}{space 8}news {c |}{res}     35945    2.480234    1.085821          1          4
{txt}{space 8}bswt {c |}{res}     35945           1           0          1          1
{txt}{hline 13}{c +}{hline 56}
{space 4}spdomain {c |}{res}     35945    3.321575    1.334996          1          5
{txt}{space 5}reg_tpi {c |}{res}     35945    2.480234    1.085821          1          4
{txt}{space 3}fert_rate {c |}{res}      9790    .1596475    .1158504       .006       .313
{txt}{space 6}_merge {c |}{res}     35945    1.544721    .8903613          1          3
{txt}
{com}. * Do calorie calculations ;
.     gen num=1;
{txt}
{com}.     gen cal = .;
{txt}(35945 missing values generated)

{com}. * Same assumptions about sex/age specific calories need in IAF 1997, IAF 2003 and IOF 2009;
. * Children (no difference between boys and girls)   ;
.      replace cal =  820 if age < 1;
{txt}(1196 real changes made)

{com}. * Add 500 cal per day for mothers in first six months of breast feeding
> * We assume that 60% of children under 1 are under six months old
> * And that all of them breast feed
> * We add these mother requirements of 300 on average to each child under 1 whose mother is alive;
.     replace cal = 1120 if age <  1 & motherhh==1;
{txt}(1168 real changes made)

{com}.     replace cal = 1150 if age >= 1 & age <2;
{txt}(2318 real changes made)

{com}.     replace cal = 1350 if age >= 2 & age <3;
{txt}(1288 real changes made)

{com}.     replace cal = 1550 if age >= 3 & age <5;
{txt}(2746 real changes made)

{com}. * Males ;
.     replace cal = 1850 if age >=  5 & age <7  & sex==1;
{txt}(1272 real changes made)

{com}.     replace cal = 2100 if age >=  7 & age <10 & sex==1;
{txt}(1776 real changes made)

{com}.     replace cal = 2200 if age >= 10 & age <12 & sex==1;
{txt}(1048 real changes made)

{com}.     replace cal = 2400 if age >= 12 & age <14 & sex==1;
{txt}(1122 real changes made)

{com}.     replace cal = 2650 if age >= 14 & age <16 & sex==1;
{txt}(932 real changes made)

{com}.     replace cal = 2850 if age >= 16 & age <18 & sex==1;
{txt}(792 real changes made)

{com}.     replace cal = 3000 if age >= 18 & age <30 & sex==1;
{txt}(3012 real changes made)

{com}.     replace cal = 2900 if age >= 30 & age <60 & sex==1;
{txt}(3276 real changes made)

{com}.     replace cal = 2450 if age>=60 & age~=. & sex==1;
{txt}(669 real changes made)

{com}. * Girls 5-12 years (probability of pregnancy assumed = 0) ;
.     replace cal = 1750 if age >=  5 & age < 7 & sex==2;
{txt}(1202 real changes made)

{com}.     replace cal = 1800 if age >=  7 & age <10 & sex==2;
{txt}(1698 real changes made)

{com}.     replace cal = 1950 if age >= 10 & age <12 & sex==2;
{txt}(1025 real changes made)

{com}. * Women with a correction for pregnancy. We add 285 calories per for the final trimester.
> * To do this we find the probability that rural and urban women are pregnant from
> * live births data in the 1997 census over the past 12 months (no correction for still births).
> * 3/4*probability of birth gives probability of preganancy. Probability of final trimester is one
> * third of that of that or 1/4 of the probability of birth
> 
> * Women urban;
.     replace cal = 2100 + (fert_rate*285)/4 if age >= 12 & age <14 & sex==2 & rural==0;
{txt}(135 real changes made)

{com}.     replace cal = 2150 + (fert_rate*285)/4 if age >= 14 & age <18 & sex==2 & rural==0;
{txt}(267 real changes made)

{com}.     replace cal = 2100 + (fert_rate*285)/4 if age >= 18 & age <30 & sex==2 & rural==0;
{txt}(874 real changes made)

{com}.     replace cal = 2150 + (fert_rate*285)/4 if age >= 30 & age <60 & sex==2 & rural==0;
{txt}(491 real changes made)

{com}. * Women rural;
.     replace cal = 2100 + (fert_rate*285)/4 if age >= 12 & age <14 & sex==2 & rural==1;
{txt}(941 real changes made)

{com}.     replace cal = 2150 + (fert_rate*285)/4 if age >= 14 & age <18 & sex==2 & rural==1;
{txt}(1392 real changes made)

{com}.     replace cal = 2100 + (fert_rate*285)/4 if age >= 18 & age <30 & sex==2 & rural==1;
{txt}(2824 real changes made)

{com}.     replace cal = 2150 + (fert_rate*285)/4 if age >= 30 & age <60 & sex==2 & rural==1;
{txt}(2866 real changes made)

{com}. * Women 60+ are not pregnant ;
.     replace cal = 1950 if age>=60 & age~=. & sex==2;
{txt}(783 real changes made)

{com}.     count if cal ==.;
{res}    0
{txt}
{com}.     *Fill in these two observations for IAF 2002/03:;
.     * 1) this one is a child;
.     *replace cal = 1500 if cal ==. & age==.;
.     * 2) this one is 21 years old;
.     *replace cal = 2500 if cal ==. & b2==.;
.     collapse (sum) cal num (max) psu hhsize hhweight strata rural spdomain, by (hhid);
{txt}
{com}.     gen chk=hhsize - num;
{txt}
{com}.     sum chk;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}chk {c |}{res}      6775   -.3455351    .8928498        -11          0
{txt}
{com}.     drop chk;
{txt}
{com}.     gen calpp = cal / hhsize;
{txt}
{com}.     sort spdomain;
{txt}
{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 9}cal {c |}{res}      6775    11156.05    6182.897       1950   50725.72
{txt}{space 9}num {c |}{res}      6775    5.305535    2.940196          1         24
{txt}{space 9}psu {c |}{res}      6775     365.894     201.698          1        712
{txt}{space 6}hhsize {c |}{res}      6775        4.96     2.75857          1         24
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}      6775    4533.332    4304.242         54      92511
{txt}{space 6}strata {c |}{res}      6775    5.551734    2.873672          1         10
{txt}{space 7}rural {c |}{res}      6775    .8199262    .3842773          0          1
{txt}{space 4}spdomain {c |}{res}      6775      3.2431    1.373578          1          5
{txt}{space 7}calpp {c |}{res}      6775    2347.186    704.3686   1463.578   26456.36
{txt}
{com}. * MAH ;
.  sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 9}cal {c |}{res}      6775    11156.05    6182.897       1950   50725.72
{txt}{space 9}num {c |}{res}      6775    5.305535    2.940196          1         24
{txt}{space 9}psu {c |}{res}      6775     365.894     201.698          1        712
{txt}{space 6}hhsize {c |}{res}      6775        4.96     2.75857          1         24
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}      6775    4533.332    4304.242         54      92511
{txt}{space 6}strata {c |}{res}      6775    5.551734    2.873672          1         10
{txt}{space 7}rural {c |}{res}      6775    .8199262    .3842773          0          1
{txt}{space 4}spdomain {c |}{res}      6775      3.2431    1.373578          1          5
{txt}{space 7}calpp {c |}{res}      6775    2347.186    704.3686   1463.578   26456.36
{txt}
{com}.  codebook hhid;

{txt}{hline}
{res}hhid{right:Household ID}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6775{col 51}{txt}missing .:  {res}0{txt}/{res}6775

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. collapse (mean) calpp[aw=hhsize*hhweight], by (spdomain);
{txt}
{com}. sort spdomain;
{txt}
{com}. save "$path/work/calpp.dta",replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/calpp.dta saved

{com}. ***********************************************************************
> * 070_calpp.do          (end)
> ***********************************************************************;
. log close;
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/070_calpp.log
  {txt}log type:  {res}text
 {txt}closed on:  {res}20 May 2013, 21:24:18
{txt}{.-}

{com}. 
{txt}end of do-file

{com}. do "$path/new/080_conpc.do"/* Nominal food/non-food expenditure */
{txt}
{com}. *global path "C:/Users/Templeton/Desktop/GAPP/GAPP-UGANDA-HARUNA"
. clear all
{txt}
{com}. set mem 100m
{txt}
{com}. 
. clear
{txt}
{com}. cap log close
{txt}
{com}. log using "$path/rep/080_conpc.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/080_conpc.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:18
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. ***************************************************************************
> * 080_conpc.do          (start)
> *
> * Creates a file with per capita nominal consumption divided between food
> * and non-food categories based on the calorie definition of food
> * rather than the COICOP (INE) definition of food. ready for 
> * temporal deflation when necessary
> ****************************************************************************;
. /*
> This file uses:
>         work/hhdata.dta
>         work/consump_nom.dta
>       
> This file creates:
>         work/conpc.dta
> */
> 
> 
> 
> ***************************************************************************
> * Food expenditure
> ****************************************************************************;
. *use "$path/in/cons_cod.dta";
. use "$path/work/cons_cod.dta";
{txt}
{com}.             *sort product;
.             *merge product using "$path/work/food_cat.dta";
.             *tab _m;
.             *drop _m;
.             keep if food_cat==1;
{txt}(322449 observations deleted)

{com}.             collapse (sum) cod_hh_nom, by(hhid);
{txt}
{com}.             rename cod_hh_nom food_hh_nom;
{txt}
{com}.                 sort hhid;
{txt}
{com}.             keep hhid food_hh_nom;
{txt}
{com}.             tempfile foodexp;
{txt}
{com}. save `foodexp';
{txt}file /tmp/St08757.000001 saved

{com}. ***************************************************************************
> * Food expenditure merged with all expenditure
> ****************************************************************************;
. use "$path/work/cons_cod.dta";
{txt}
{com}. *use "$path/in/cons_cod.dta";
. *use "$path/in/cons_cat.dta";
. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    412045    810.2635    358.1243        100        999
{txt}{space 4}food_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 4}prod_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 4}descript {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{hline 13}{c +}{hline 56}
{space 3}quantityd {c |}{res}     89596     .779464    3.170331          0   364.2857
{txt}{space 1}cod_hh_nom3 {c |}{res}     89596     383.356    648.4919          0      18500
{txt}{space 2}cod_hh_nom {c |}{res}    412045    1602.923    615777.4          0   3.95e+08
{txt}{space 1}cod_hh_nom2 {c |}{res}    252585    2614.436    786487.2   .0027397   3.95e+08
{txt}
{com}. collapse (sum) cod_hh_nom, by(hhid);
{txt}
{com}. *gen cons_pc_nom = cons_hh_nom/hhsize;
. rename cod_hh_nom cons_hh_nom;
{txt}
{com}. *keep  hhid cons_pc_nom cons_hh_nom ;
. *keep hhid cod_hh_nom;
. *use "$path/in/cons_cod.dta";
. *use "$path/in/consump_nom.dta";
. *use "$path/work/consump_nom.dta";
. *            keep  hhid cons_hh_nom ;
.             display _N;
{res}6775
{txt}
{com}.             keep  hhid cons_hh_nom ;
{txt}
{com}.             sort hhid;
{txt}
{com}.             merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.             tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.             drop _m;
{txt}
{com}. gen cons_pc_nom = cons_hh_nom/hhsize;
{txt}
{com}.             sort hhid;
{txt}
{com}.             merge hhid using `foodexp';
{txt}
{com}.             tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                 drop if _merge==2;
{txt}(0 observations deleted)

{com}.             replace food_hh_nom=0 if _merge==1 & food_hh_nom==.;
{txt}(0 real changes made)

{com}.             drop _m;
{txt}
{com}.                 gen food_pc_nom=food_hh_nom/hhsize;
{txt}
{com}.                 gen nf_hh_nom=cons_hh_nom-food_hh_nom;
{txt}
{com}.             gen nf_pc_nom=nf_hh_nom/hhsize;
{txt}
{com}.              keep hhid cons_hh_nom food_pc_nom nf_pc_nom cons_pc_nom survquar spdomain news reg_tpi rural hhweight hhsize;
{txt}
{com}.             lab var food_pc_nom "nominal food consumption per capita";
{txt}
{com}.             lab var nf_pc_nom "nominal non-food consumption per capita";
{txt}
{com}. keep hhid cons_hh_nom cons_pc_nom food_pc_nom nf_pc_nom;
{txt}
{com}.             sort hhid;
{txt}
{com}. * MAH ;
.  sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 1}cons_hh_nom {c |}{res}      6775    97487.28     4938495   232.1918   4.06e+08
{txt}{space 1}cons_pc_nom {c |}{res}      6775    20773.97    987396.4   78.55931   8.12e+07
{txt}{space 1}food_pc_nom {c |}{res}      6775    1257.269    1252.965          0   17857.14
{txt}{space 3}nf_pc_nom {c |}{res}      6775     19516.7    987342.9   23.11263   8.12e+07
{txt}
{com}.  codebook hhid;

{txt}{hline}
{res}hhid{right:Household Code}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6775{col 51}{txt}missing .:  {res}0{txt}/{res}6775

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. save "$path/work/conpc.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/conpc.dta saved

{com}. ***************************************************************************
> * 080_conpc.do          (end)
> ****************************************************************************;
. log close;
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/080_conpc.log
  {txt}log type:  {res}text
 {txt}closed on:  {res}20 May 2013, 21:24:19
{txt}{.-}

{com}. 
{txt}end of do-file

{com}. do "$path/new/090_temp_index.do"/* Temporal price index */
{txt}
{com}. *global path "C:/Users/Templeton/Desktop/GAPP/GAPP-UGANDA-HARUNA"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/090_temp_index.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/090_temp_index.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:19
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 090_temp_index.do     (start)
> **************************************************************************;
. *do "$path/new/010_initial.do";
. **************************************************************************
> * Program to compute the temporal price index (intra-survey)
> * 
> * The index is based on 6 regions (North/Center/South by rural/urban) 
> * and four quarters. For IAF 2002/03 (t=t1) it is based on the same 9
> * commodities used for the analysis of the 1996 IAF (t=t0), 
> * except that we have to go to 8 commodities because the 2002-03 survey 
> * does not distinguish between large and small groundnuts, which were 
> * separate items in the old index. For IOF 2008/09 (t=t2) we expand the
> * the food basket to include the 15 most important food products among
> * the poorest.
> *
> * The commodity weights for the items vary by the 6 regions, and are 
> * calculated from the observations in the IAF2002, using the relatively 
> * poor households (below median nominal consumption per capita).
> *
> * The unit values (prices) calculated here are also based on the prices 
> * paid by the relatively poor, using the same definition.
> *
> * K Simler, Sep 2003
> * CA
> * MAH, April 2010
> * URB, Feb 2013 (automatization to any number of n_tpi's)
> **************************************************************************;
. /*
> This file uses:
>         work/own.dta
>         work/receipts.dta
>         work/daily.dta
>         work/hhdata
>         work/cons_cat.dta
> 
> This file creates:
>         work/tpi_unit_val_quarterly.dta
>         work/tpi_unit_val_monthly.dta
>         work/tpi_news_share.dta
>         work/tpi_reg_tpi_share.dta
>         work/temp_index_news.dta
>         work/temp_index_reg_tpi.dta
> */      
> 
> 
> **************************************************************************
> * Either the products used for intertemporal price index is specified
> * explicitly, or they are automatically found as the the n_tpi products
> * with the highest weighted expenditure shares among the $bottom % poorest
> * part of the population
> **************************************************************************;
. * Generating the n_tpi most important food items for the poorest $bottom % ;
. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (start)
> **************************************************************************;
. *------------------------------------------------------------------------*
> * Population weights for each HH
> *------------------------------------------------------------------------*;
. use "$path/work/hhdata.dta", clear;
{txt}
{com}. keep hhid hhweight hhsize;
{txt}
{com}. gen popwt = hhweight*hhsize;
{txt}
{com}. lab var popwt "Population weights = hhsize X hhweight";
{txt}
{com}. sort hhid;
{txt}
{com}. tempfile popwt;
{txt}
{com}. save `popwt', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 6}hhsize {c |}{res}      6775        4.96     2.75857          1         24
{txt}{space 4}hhweight {c |}{res}      6775    4533.332    4304.242         54      92511
{txt}{space 7}popwt {c |}{res}      6775    29614.26    44555.51         62     832599
{txt}
{com}. *------------------------------------------------------------------------*
> * Make list of all consumed products
> *------------------------------------------------------------------------*;
. *use "$path/in/cons_cod.dta", clear;
. *save "$path/work/cons_cod.dta", replace;
. use "$path/work/cons_cod.dta", clear;
{txt}
{com}. keep product descript;
{txt}
{com}. collapse product, by(descript);
{txt}
{com}. sort product;
{txt}
{com}. tempfile descript;
{txt}
{com}. save `descript', replace;
{txt}(note: file /tmp/St08757.000002 not found)
file /tmp/St08757.000002 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}descript {c |}{res}         2         1.5    .7071068          1          2
{txt}{space 5}product {c |}{res}         2    565.0077    613.7578   131.0155        999
{txt}
{com}. *------------------------------------------------------------------------*
> * Find the poorest part of the population
> *------------------------------------------------------------------------*;
. use
> "$path/work/cons_cod.dta", clear;
{txt}
{com}. *use
> *"$path/work/cons_cod.dta", clear;
. ********************************************check the COICOP categories to create the variable prod_cat, for the moment it is equal to food_cat******;
. keep hhid prod_cat product cod_hh_nom;
{txt}
{com}. sort hhid;
{txt}
{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    412045    810.2635    358.1243        100        999
{txt}{space 4}prod_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 2}cod_hh_nom {c |}{res}    412045    1602.923    615777.4          0   3.95e+08
{txt}
{com}. merge hhid using `popwt';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    412045    810.2635    358.1243        100        999
{txt}{space 4}prod_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 2}cod_hh_nom {c |}{res}    412045    1602.923    615777.4          0   3.95e+08
{txt}{space 6}hhsize {c |}{res}    412045    5.313592    2.837438          1         24
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}    412045    4940.193    4557.506         54      92511
{txt}{space 7}popwt {c |}{res}    412045    33954.53     49935.3         62     832599
{txt}{space 6}_merge {c |}{res}    412045           3           0          3          3
{txt}
{com}. drop _merge;
{txt}
{com}. preserve;
{txt}
{com}. collapse (sum) cod_hh_nom (mean) popwt hhweight hhsize, by(hhid);
{txt}
{com}. gen cod_pc_nom = cod_hh_nom/hhsize;
{txt}
{com}.         sum cod_pc_nom [aw=popwt] , detail;

                         {txt}cod_pc_nom
{hline 61}
      Percentiles      Smallest
 1%    {res} 332.3661       78.55931
{txt} 5%    {res} 680.3636       103.0936
{txt}10%    {res} 872.9067       107.7462       {txt}Obs         {res}       6775
{txt}25%    {res} 1328.983       145.4659       {txt}Sum of Wgt. {res}  200636622

{txt}50%    {res} 2175.789                      {txt}Mean          {res} 9412.851
                        {txt}Largest       Std. Dev.     {res}   395673
{txt}75%    {res} 3972.618        1528531
{txt}90%    {res}  9057.59        1552604       {txt}Variance      {res} 1.57e+11
{txt}95%    {res} 17758.21        1790269       {txt}Skewness      {res} 202.1632
{txt}99%    {res} 88724.46       8.12e+07       {txt}Kurtosis      {res} 41456.83
{txt}
{com}.         global medcpc_= r(p$tpi_bottom);
{txt}
{com}.         gen bottom_ = cod_pc_nom <= $medcpc_;
{txt}
{com}. sum [aw=popwt];

{txt}    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 8}hhid {c |}{res}    6775   200636622    2.52e+09   1.10e+09   1.01e+09   4.19e+09
{txt}{space 2}cod_hh_nom {c |}{res}    6775   200636622    67821.64    2005057   232.1918   4.06e+08
{txt}{space 7}popwt {c |}{res}    6775   200636622    96639.42   125478.2         62     832599
{txt}{space 4}hhweight {c |}{res}    6775   200636622    10417.53   10233.19         54      92511
{txt}{space 6}hhsize {c |}{res}    6775   200636622    7.911641   3.294698          1         24
{txt}{hline 13}{c +}{hline 65}
{space 2}cod_pc_nom {c |}{res}    6775   200636622    9412.851     395673   78.55931   8.12e+07
{txt}{space 5}bottom_ {c |}{res}    6775   200636622    .5001342   .5000369          0          1
{txt}
{com}. sum [aw=hhweight];

{txt}    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 8}hhid {c |}{res}    6775    30713326    2.51e+09   1.12e+09   1.01e+09   4.19e+09
{txt}{space 2}cod_hh_nom {c |}{res}    6775    30713326    61490.01    2271154   232.1918   4.06e+08
{txt}{space 7}popwt {c |}{res}    6775    30713326    68053.16   97418.28         62     832599
{txt}{space 4}hhweight {c |}{res}    6775    30713326    8619.458   9115.422         54      92511
{txt}{space 6}hhsize {c |}{res}    6775    30713326    6.532559   3.001711          1         24
{txt}{hline 13}{c +}{hline 65}
{space 2}cod_pc_nom {c |}{res}    6775    30713326    10464.25   451493.4   78.55931   8.12e+07
{txt}{space 5}bottom_ {c |}{res}    6775    30713326    .4751522   .4994191          0          1
{txt}
{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 2}cod_hh_nom {c |}{res}      6775    97487.28     4938495   232.1918   4.06e+08
{txt}{space 7}popwt {c |}{res}      6775    29614.26    44555.51         62     832599
{txt}{space 4}hhweight {c |}{res}      6775    4533.332    4304.242         54      92511
{txt}{space 6}hhsize {c |}{res}      6775        4.96     2.75857          1         24
{txt}{hline 13}{c +}{hline 56}
{space 2}cod_pc_nom {c |}{res}      6775    20773.97    987396.4   78.55931   8.12e+07
{txt}{space 5}bottom_ {c |}{res}      6775    .4529889    .4978218          0          1
{txt}
{com}. keep if bottom_==1;
{txt}(3706 observations deleted)

{com}. keep hhid;
{txt}
{com}. sort hhid;
{txt}
{com}. tempfile hhid;
{txt}
{com}. save `hhid';
{txt}file /tmp/St08757.000004 saved

{com}. restore;
{txt}
{com}. sort hhid;
{txt}
{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    412045    810.2635    358.1243        100        999
{txt}{space 4}prod_cat {c |}{res}    412045    1.782558    .4125064          1          2
{txt}{space 2}cod_hh_nom {c |}{res}    412045    1602.923    615777.4          0   3.95e+08
{txt}{space 6}hhsize {c |}{res}    412045    5.313592    2.837438          1         24
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}    412045    4940.193    4557.506         54      92511
{txt}{space 7}popwt {c |}{res}    412045    33954.53     49935.3         62     832599
{txt}
{com}. merge hhid using `hhid';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}. tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}    239,058       58.02       58.02
{txt}          3 {c |}{res}    172,987       41.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}
{com}. keep if _m==3;
{txt}(239058 observations deleted)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    172987    2.80e+09    9.34e+08   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    172987    827.7079     345.362        100        999
{txt}{space 4}prod_cat {c |}{res}    172987    1.802505    .3981098          1          2
{txt}{space 2}cod_hh_nom {c |}{res}    172987    123.5388    359.1169          0    10958.9
{txt}{space 6}hhsize {c |}{res}    172987    5.986531    2.565258          1         19
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}    172987    5154.068    4379.562        100      60164
{txt}{space 7}popwt {c |}{res}    172987    37036.91    46121.88        100     782132
{txt}{space 6}_merge {c |}{res}    172987           3           0          3          3
{txt}
{com}. *------------------------------------------------------------------------*
> * Keep only food product expenditure by the poor. Calculate food product
> * share of total food expenditure by the poor
> *------------------------------------------------------------------------*;
. keep if prod_cat==1;
{txt}(138823 observations deleted)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     34164    2.78e+09    9.37e+08   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     34164    131.6748    15.79307        100        161
{txt}{space 4}prod_cat {c |}{res}     34164           1           0          1          1
{txt}{space 2}cod_hh_nom {c |}{res}     34164    297.0688    482.2309          0       9000
{txt}{space 6}hhsize {c |}{res}     34164    5.843549    2.501487          1         19
{txt}{hline 13}{c +}{hline 56}
{space 4}hhweight {c |}{res}     34164    5028.222    4166.388        100      60164
{txt}{space 7}popwt {c |}{res}     34164    35157.19    43014.83        100     782132
{txt}{space 6}_merge {c |}{res}     34164           3           0          3          3
{txt}
{com}. sort product;
{txt}
{com}. *preserve;
. collapse (sum) cod_hh_nom [aw=hhweight], by(product);
{txt}
{com}. sort cod;
{txt}
{com}. egen total=sum(cod_hh_nom);
{txt}
{com}. gen sh=100*cod_hh_nom/total;
{txt}
{com}. *------------------------------------------------------------------------*
> * Include product labels
> *------------------------------------------------------------------------*;
. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}product {c |}{res}        62       130.5    18.04162        100        161
{txt}{space 2}cod_hh_nom {c |}{res}        62    189847.5      266511   1752.996    1123210
{txt}{space 7}total {c |}{res}        62    1.18e+07           0   1.18e+07   1.18e+07
{txt}{space 10}sh {c |}{res}        62    1.612903     2.26422   .0148931   9.542551
{txt}
{com}. sort product;
{txt}
{com}. merge product using `descript';
{txt}
{com}. tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}         62       96.88       96.88
{txt}          2 {c |}{res}          2        3.12      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}         64      100.00
{txt}
{com}. keep if _merge==1 | _merge==3;
{txt}(2 observations deleted)

{com}. drop _merge;
{txt}
{com}. sort sh;
{txt}
{com}. *list;
. list in -$product_tpi_n/-1;
{txt}
     {c TLC}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product   cod_hh~m      total         sh   descript {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 33. {c |} {res}    144   99121.64   1.18e+07    .842116          . {txt}{c |}
 34. {c |} {res}    135   105400.2   1.18e+07   .8954576          . {txt}{c |}
 35. {c |} {res}    134   106540.9   1.18e+07   .9051483          . {txt}{c |}
 36. {c |} {res}    111     121988   1.18e+07   1.036384          . {txt}{c |}
 37. {c |} {res}    150   123190.6   1.18e+07   1.046601          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 38. {c |} {res}    146   124427.5   1.18e+07   1.057109          . {txt}{c |}
 39. {c |} {res}    132   131131.7   1.18e+07   1.114067          . {txt}{c |}
 40. {c |} {res}    110   147314.5   1.18e+07   1.251552          . {txt}{c |}
 41. {c |} {res}    138   178601.8   1.18e+07   1.517362          . {txt}{c |}
 42. {c |} {res}    136   180527.9   1.18e+07   1.533726          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 43. {c |} {res}    115   185082.7   1.18e+07   1.572422          . {txt}{c |}
 44. {c |} {res}    122   188205.1   1.18e+07    1.59895          . {txt}{c |}
 45. {c |} {res}    121   209109.2   1.18e+07   1.776546          . {txt}{c |}
 46. {c |} {res}    112   211035.4   1.18e+07   1.792911          . {txt}{c |}
 47. {c |} {res}    139   220556.4   1.18e+07   1.873799          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 48. {c |} {res}    153   222373.6   1.18e+07   1.889238          . {txt}{c |}
 49. {c |} {res}    125   230312.1   1.18e+07   1.956682          . {txt}{c |}
 50. {c |} {res}    123   230714.2   1.18e+07   1.960098          . {txt}{c |}
 51. {c |} {res}    127   234920.9   1.18e+07   1.995837          . {txt}{c |}
 52. {c |} {res}    140   251058.4   1.18e+07   2.132938          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 53. {c |} {res}    103   316957.7   1.18e+07   2.692804          . {txt}{c |}
 54. {c |} {res}    104   335649.7   1.18e+07   2.851607          . {txt}{c |}
 55. {c |} {res}    147   418515.3   1.18e+07   3.555615          . {txt}{c |}
 56. {c |} {res}    117   440335.5   1.18e+07   3.740995          . {txt}{c |}
 57. {c |} {res}    116   479750.5   1.18e+07   4.075856          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 58. {c |} {res}    107   720970.3   1.18e+07   6.125207          . {txt}{c |}
 59. {c |} {res}    141   940596.5   1.18e+07   7.991104          . {txt}{c |}
 60. {c |} {res}    108    1056863   1.18e+07   8.978882          . {txt}{c |}
 61. {c |} {res}    105    1108255   1.18e+07   9.415496          . {txt}{c |}
 62. {c |} {res}    113    1123210   1.18e+07   9.542551          . {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}. list product descript in -$product_tpi_n/-1;
{txt}
     {c TLC}{hline 9}{c -}{hline 10}{c TRC}
     {c |} {res}product   descript {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 33. {c |} {res}    144          . {txt}{c |}
 34. {c |} {res}    135          . {txt}{c |}
 35. {c |} {res}    134          . {txt}{c |}
 36. {c |} {res}    111          . {txt}{c |}
 37. {c |} {res}    150          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 38. {c |} {res}    146          . {txt}{c |}
 39. {c |} {res}    132          . {txt}{c |}
 40. {c |} {res}    110          . {txt}{c |}
 41. {c |} {res}    138          . {txt}{c |}
 42. {c |} {res}    136          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 43. {c |} {res}    115          . {txt}{c |}
 44. {c |} {res}    122          . {txt}{c |}
 45. {c |} {res}    121          . {txt}{c |}
 46. {c |} {res}    112          . {txt}{c |}
 47. {c |} {res}    139          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 48. {c |} {res}    153          . {txt}{c |}
 49. {c |} {res}    125          . {txt}{c |}
 50. {c |} {res}    123          . {txt}{c |}
 51. {c |} {res}    127          . {txt}{c |}
 52. {c |} {res}    140          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 53. {c |} {res}    103          . {txt}{c |}
 54. {c |} {res}    104          . {txt}{c |}
 55. {c |} {res}    147          . {txt}{c |}
 56. {c |} {res}    117          . {txt}{c |}
 57. {c |} {res}    116          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 58. {c |} {res}    107          . {txt}{c |}
 59. {c |} {res}    141          . {txt}{c |}
 60. {c |} {res}    108          . {txt}{c |}
 61. {c |} {res}    105          . {txt}{c |}
 62. {c |} {res}    113          . {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 10}{c BRC}

{com}. *restore;
. *------------------------------------------------------------------------*
> * Keep the required number of most important food products
> *------------------------------------------------------------------------*;
. keep in -$product_tpi_n/-1;
{txt}(32 observations deleted)

{com}. list;
{txt}
     {c TLC}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product   cod_hh~m      total         sh   descript {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
  1. {c |} {res}    144   99121.64   1.18e+07    .842116          . {txt}{c |}
  2. {c |} {res}    135   105400.2   1.18e+07   .8954576          . {txt}{c |}
  3. {c |} {res}    134   106540.9   1.18e+07   .9051483          . {txt}{c |}
  4. {c |} {res}    111     121988   1.18e+07   1.036384          . {txt}{c |}
  5. {c |} {res}    150   123190.6   1.18e+07   1.046601          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
  6. {c |} {res}    146   124427.5   1.18e+07   1.057109          . {txt}{c |}
  7. {c |} {res}    132   131131.7   1.18e+07   1.114067          . {txt}{c |}
  8. {c |} {res}    110   147314.5   1.18e+07   1.251552          . {txt}{c |}
  9. {c |} {res}    138   178601.8   1.18e+07   1.517362          . {txt}{c |}
 10. {c |} {res}    136   180527.9   1.18e+07   1.533726          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 11. {c |} {res}    115   185082.7   1.18e+07   1.572422          . {txt}{c |}
 12. {c |} {res}    122   188205.1   1.18e+07    1.59895          . {txt}{c |}
 13. {c |} {res}    121   209109.2   1.18e+07   1.776546          . {txt}{c |}
 14. {c |} {res}    112   211035.4   1.18e+07   1.792911          . {txt}{c |}
 15. {c |} {res}    139   220556.4   1.18e+07   1.873799          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 16. {c |} {res}    153   222373.6   1.18e+07   1.889238          . {txt}{c |}
 17. {c |} {res}    125   230312.1   1.18e+07   1.956682          . {txt}{c |}
 18. {c |} {res}    123   230714.2   1.18e+07   1.960098          . {txt}{c |}
 19. {c |} {res}    127   234920.9   1.18e+07   1.995837          . {txt}{c |}
 20. {c |} {res}    140   251058.4   1.18e+07   2.132938          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 21. {c |} {res}    103   316957.7   1.18e+07   2.692804          . {txt}{c |}
 22. {c |} {res}    104   335649.7   1.18e+07   2.851607          . {txt}{c |}
 23. {c |} {res}    147   418515.3   1.18e+07   3.555615          . {txt}{c |}
 24. {c |} {res}    117   440335.5   1.18e+07   3.740995          . {txt}{c |}
 25. {c |} {res}    116   479750.5   1.18e+07   4.075856          . {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 26. {c |} {res}    107   720970.3   1.18e+07   6.125207          . {txt}{c |}
 27. {c |} {res}    141   940596.5   1.18e+07   7.991104          . {txt}{c |}
 28. {c |} {res}    108    1056863   1.18e+07   8.978882          . {txt}{c |}
 29. {c |} {res}    105    1108255   1.18e+07   9.415496          . {txt}{c |}
 30. {c |} {res}    113    1123210   1.18e+07   9.542551          . {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}. gen product_tpi=1;
{txt}
{com}. keep product product_tpi;
{txt}
{com}. list;
{txt}
     {c TLC}{hline 9}{c -}{hline 10}{c TRC}
     {c |} {res}product   produc~i {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
  1. {c |} {res}    144          1 {txt}{c |}
  2. {c |} {res}    135          1 {txt}{c |}
  3. {c |} {res}    134          1 {txt}{c |}
  4. {c |} {res}    111          1 {txt}{c |}
  5. {c |} {res}    150          1 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
  6. {c |} {res}    146          1 {txt}{c |}
  7. {c |} {res}    132          1 {txt}{c |}
  8. {c |} {res}    110          1 {txt}{c |}
  9. {c |} {res}    138          1 {txt}{c |}
 10. {c |} {res}    136          1 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 11. {c |} {res}    115          1 {txt}{c |}
 12. {c |} {res}    122          1 {txt}{c |}
 13. {c |} {res}    121          1 {txt}{c |}
 14. {c |} {res}    112          1 {txt}{c |}
 15. {c |} {res}    139          1 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 16. {c |} {res}    153          1 {txt}{c |}
 17. {c |} {res}    125          1 {txt}{c |}
 18. {c |} {res}    123          1 {txt}{c |}
 19. {c |} {res}    127          1 {txt}{c |}
 20. {c |} {res}    140          1 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 21. {c |} {res}    103          1 {txt}{c |}
 22. {c |} {res}    104          1 {txt}{c |}
 23. {c |} {res}    147          1 {txt}{c |}
 24. {c |} {res}    117          1 {txt}{c |}
 25. {c |} {res}    116          1 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c RT}
 26. {c |} {res}    107          1 {txt}{c |}
 27. {c |} {res}    141          1 {txt}{c |}
 28. {c |} {res}    108          1 {txt}{c |}
 29. {c |} {res}    105          1 {txt}{c |}
 30. {c |} {res}    113          1 {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 10}{c BRC}

{com}. sort product;
{txt}
{com}. tempfile product_tpi;
{txt}
{com}. save `product_tpi', replace;
{txt}(note: file /tmp/St08757.000005 not found)
file /tmp/St08757.000005 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}product {c |}{res}        30       125.8    15.33848        103        153
{txt}{space 1}product_tpi {c |}{res}        30           1           0          1          1
{txt}
{com}. clear;
{txt}
{com}. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (end)
> **************************************************************************;
. **************************************************************************;
. * First, need to calculate the average prices for the food items, by 
> * strata and quarter. For this, we are using the "unit values"
> * (value/quantity) for the observations in the consumption questionnaires,
> * including daily, own and receipts-in-kind.
> *
> * The unit values are constructed as sum(value)/sum(quantity), which effectively
> * weights them by the quantity and value of the transaction. Sampling
> * weights are also used.
> *
> * Get the own consumption file, and limit analysis to the observations
> * in KGs where both value and quantity are available.
> **************************************************************************;
. use "$path/work/cons_cod.dta";
{txt}
{com}. *use "$path/work/cons_cod.dta";
. keep if prod_cat==1;
{txt}(322449 observations deleted)

{com}. drop if quantityd==0 | quantityd==.;
{txt}(4392 observations deleted)

{com}. *keep if quantityd!=. & cod_hh_nom2!=.;
. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     85204    2.44e+09    1.14e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     85204    131.0922    15.78502        100        161
{txt}{space 4}food_cat {c |}{res}     85204           1           0          1          1
{txt}{space 4}prod_cat {c |}{res}     85204           1           0          1          1
{txt}{space 4}descript {c |}{res}     85204           1           0          1          1
{txt}{hline 13}{c +}{hline 56}
{space 3}quantityd {c |}{res}     85204     .819643    3.245947   .0000286   364.2857
{txt}{space 1}cod_hh_nom3 {c |}{res}     85204    403.1168    658.9792          0      18500
{txt}{space 2}cod_hh_nom {c |}{res}     85204    403.1168    658.9792          0      18500
{txt}{space 1}cod_hh_nom2 {c |}{res}     84857    404.7653    659.8198   7.142857      18500
{txt}
{com}. sort product;
{txt}
{com}. merge product using `product_tpi';
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

{com}. tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}     20,706       24.30       24.30
{txt}          3 {c |}{res}     64,498       75.70      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}
{com}. drop _merge;
{txt}
{com}. keep if $product_tpi;
{txt}(20706 observations deleted)

{com}. *        replace valued_ac=0 if valued_ac==.;
. *        replace quantityd_ac=0 if quantityd_ac==.;
.         gen valued_tot=cod_hh_nom2;
{txt}
{com}.         gen quantityd_tot=quantityd;
{txt}
{com}. *               replace quantityd_tot=0 if (valued_tot>0 & valued_tot<.) & quantityd_tot==.;
.         keep if quantityd_tot!=. & valued_tot!=.;
{txt}(0 observations deleted)

{com}.                 collapse (sum) valued_tot quantityd_tot, by(hhid product);
{txt}
{com}.                 sort hhid;
{txt}
{com}. tempfile acredd;
{txt}
{com}. save `acredd' , replace;
{txt}(note: file /tmp/St08757.000006 not found)
file /tmp/St08757.000006 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     64498    2.46e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     64498    129.0995    15.11495        103        153
{txt}{space 2}valued_tot {c |}{res}     64498    414.0745    612.4144   7.142857      12000
{txt}quantityd_~t {c |}{res}     64498    .9246654    3.490713   .0000286   364.2857
{txt}
{com}. /*
> **************************************************************************;
> * Create a data set with an empty 1 observation. Used to avoid empty data
> * sets when the survey do not have the Mozambican set up
> **************************************************************************;
> use "$path/work/own.dta";
> 
> preserve;
> keep in 1;
> drop unit valued quantityd;
> gen unit=2;
> gen valued=0;
> gen quantityd=0;
> tempfile 1obs;
> save `1obs';
> restore;
> 
> **************************************************************************;
> * Own consumption
> **************************************************************************;
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_ac;
>         rename quantityd quantityd_ac;
>         compress;
>         sort hhid product;
>         tempfile ac;
> save `ac', replace;
> 
> **************************************************************************;
> * Now do a similar thing with receipts-in-kind file.
> **************************************************************************;
> use "$path/work/receipts.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> 
> 
> keep if $product_tpi;
> append using `1obs';
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_re;
>         rename quantityd quantityd_re;
>         compress;
>         sort hhid product;
>         tempfile re;
> save `re', replace;
> 
> **************************************************************************;
> * And also with the daily expenditure file.
> **************************************************************************;
> use "$path/work/daily.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> *rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> *rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         collapse (sum) value quantity days , 
>                 by(hhid product unit);
> 
>         gen valued=value/7 if days<=7;
>         replace valued=value/days if days>7 & days<.;
>         gen quantityd=quantity/7 if days<=7;
>         replace quantityd=quantity/days if days>7 & days<.;
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
> 
>         rename valued valued_dd;
>         rename quantityd quantityd_dd;
>         compress;
>         sort hhid product;
>         tempfile dd;
> save `dd', replace;
> 
> 
> 
> 
> **************************************************************************;
> * Merge the three components (own, daily, receipts) together at the HH/product level, 
> * then aggregate to the regional level, using the sample weights (hhweight).
> * We DON'T want to weight by "hhsize" because the quantity and value are
> * already for the household (i.e., other things equal, larger households
> * are buying larger quantities, and therefore already getting more weight).
> * Then calculate sum(val)/sum(quantity) to get the quantity weighted mean
> * unit value in each strata in each quarter.
> **************************************************************************;
> use `ac';
>         sort hhid product;
>         merge hhid product using `re';
>         tab _m;
>         drop _m;
>         
>         sort hhid product;
>         merge hhid product using `dd';
>         tab _m;
>         drop _m;
>         
>         replace valued_ac=0 if valued_ac==.;
>         replace valued_re=0 if valued_re==.;
>         replace valued_dd=0 if valued_dd==.;
>         replace quantityd_ac=0 if quantityd_ac==.;
>         replace quantityd_re=0 if quantityd_re==.;
>         replace quantityd_dd=0 if quantityd_dd==.;
> 
>         gen valued_tot=valued_ac+valued_re+valued_dd;
>         gen quantityd_tot=quantityd_ac+quantityd_re+quantityd_dd;
> 
>         sort hhid;
> 
>         tempfile acredd;
> save `acredd' , replace;
> */
> 
> 
> 
> use "$path/work/hhdata.dta";
{txt}
{com}.         keep strata hhid hhweight hhsize rural survmon survquar news spdomain reg_tpi;
{txt}
{com}.         sort hhid;
{txt}
{com}.         tempfile hhd;
{txt}
{com}. save `hhd' , replace;
{txt}(note: file /tmp/St08757.000007 not found)
file /tmp/St08757.000007 saved

{com}. use `acredd', clear;
{txt}
{com}.         merge hhid using `hhd';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}        202        0.31        0.31
{txt}          3 {c |}{res}     64,498       99.69      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     64,700      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.                 tab survquar , miss;

 {txt}Sequential {c |}
     Survey {c |}
    Quarter {c |}
    May-Jun {c |}
      09=1) {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
 May-Jul 09 {c |}{res}     16,601       25.66       25.66
{txt}Sept-Oct 09 {c |}{res}     16,573       25.62       51.27
{txt}Nov09-Jan10 {c |}{res}     14,223       21.98       73.26
{txt} Feb-Apr 10 {c |}{res}     17,303       26.74      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     64,700      100.00
{txt}
{com}.                 tab survmon survquar, miss;

{txt}Sequential {c |}
    Survey {c |}
Month (May {c |}   Sequential Survey Quarter May-Jun 09=1)
   2009=1) {c |} May-Jul 0  Sept-Oct   Nov09-Jan  Feb-Apr 1 {c |}     Total
{hline 11}{c +}{hline 44}{c +}{hline 10}
    May 09 {c |}{res}       349          0          0          0 {txt}{c |}{res}       349 
{txt}    Jun 09 {c |}{res}    11,802          0          0          0 {txt}{c |}{res}    11,802 
{txt}    Jul 09 {c |}{res}     4,450          0          0          0 {txt}{c |}{res}     4,450 
{txt}    Sep 09 {c |}{res}         0      5,857          0          0 {txt}{c |}{res}     5,857 
{txt}    Oct 09 {c |}{res}         0     10,716          0          0 {txt}{c |}{res}    10,716 
{txt}    Nov 09 {c |}{res}         0          0      5,975          0 {txt}{c |}{res}     5,975 
{txt}    Dec 09 {c |}{res}         0          0      4,057          0 {txt}{c |}{res}     4,057 
{txt}    Jan 10 {c |}{res}         0          0      4,191          0 {txt}{c |}{res}     4,191 
{txt}    Feb 10 {c |}{res}         0          0          0      4,120 {txt}{c |}{res}     4,120 
{txt}    Mar 10 {c |}{res}         0          0          0      8,611 {txt}{c |}{res}     8,611 
{txt}    Apr 10 {c |}{res}         0          0          0      4,572 {txt}{c |}{res}     4,572 
{txt}{hline 11}{c +}{hline 44}{c +}{hline 10}
     Total {c |}{res}    16,601     16,573     14,223     17,303 {txt}{c |}{res}    64,700 

{txt}
{com}.         compress;
{txt}product was {res}float{txt} now {res}int
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}
{com}.         sort hhid;
{txt}
{com}. save `acredd', replace;
{txt}file /tmp/St08757.000006 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     64700    2.46e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     64498    129.0995    15.11495        103        153
{txt}{space 2}valued_tot {c |}{res}     64498    414.0745    612.4144   7.142857      12000
{txt}quantityd_~t {c |}{res}     64498    .9246654    3.490713   .0000286   364.2857
{txt}{space 6}strata {c |}{res}     64700    5.438037    2.881366          1         10
{txt}{hline 13}{c +}{hline 56}
{space 6}hhsize {c |}{res}     64700     5.22847    2.743992          1         24
{txt}{space 4}hhweight {c |}{res}     64700    4927.102    4386.038         54      92511
{txt}{space 4}survquar {c |}{res}     64700    2.498114    1.139322          1          4
{txt}{space 5}survmon {c |}{res}     64700    6.702767    3.329485          1         12
{txt}{space 7}rural {c |}{res}     64700    .8056105     .395733          0          1
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}     64700    2.369042    1.117935          1          4
{txt}{space 4}spdomain {c |}{res}     64700    3.190804    1.372694          1          5
{txt}{space 5}reg_tpi {c |}{res}     64700    2.369042    1.117935          1          4
{txt}
{com}. **************************************************************************;
. * Need to merge with the file that has nominal consumption per household,
> * and compute nominal consumption per capita from that, so that we can
> * choose the relatively poor (i.e., below median nominal consumption per
> * capita).
> **************************************************************************;
. use "$path/work/conpc.dta", clear;
{txt}
{com}. keep hhid cons_hh_nom;
{txt}
{com}. *use "$path/in/cons_cat.dta" ;
. *save "$path/work/cons_cat.dta", replace ;
. *use "$path/work/cons_cat.dta" ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;
{txt}
{com}.         merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.           tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.  drop _m;
{txt}
{com}.         collapse (mean) cons_hh_nom hhsize hhweight , by(hhid);
{txt}
{com}.         gen cpc=cons_hh_nom/hhsize;
{txt}
{com}.         sum cpc [aw=hhsize*hhweight] , detail;

                             {txt}cpc
{hline 61}
      Percentiles      Smallest
 1%    {res} 332.3661       78.55931
{txt} 5%    {res} 680.3636       103.0936
{txt}10%    {res} 872.9067       107.7462       {txt}Obs         {res}       6775
{txt}25%    {res} 1328.983       145.4659       {txt}Sum of Wgt. {res}  200636622

{txt}50%    {res} 2175.789                      {txt}Mean          {res} 9412.851
                        {txt}Largest       Std. Dev.     {res}   395673
{txt}75%    {res} 3972.618        1528531
{txt}90%    {res}  9057.59        1552604       {txt}Variance      {res} 1.57e+11
{txt}95%    {res} 17758.21        1790269       {txt}Skewness      {res} 202.1632
{txt}99%    {res} 88724.46       8.12e+07       {txt}Kurtosis      {res} 41456.83
{txt}
{com}.         global medcpc=r(p$tpi_bottom);
{txt}
{com}.         gen bottom_tpi=cpc<=$medcpc;
{txt}
{com}.         keep hhid bottom_tpi;
{txt}
{com}.         sort hhid;
{txt}
{com}.         tempfile bottom_tpi;
{txt}
{com}. save `bottom_tpi', replace;
{txt}(note: file /tmp/St08757.000008 not found)
file /tmp/St08757.000008 saved

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 2}bottom_tpi {c |}{res}      6775    .4529889    .4978218          0          1
{txt}
{com}. use `acredd' ;
{txt}
{com}.         merge hhid using `bottom_tpi';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     64,700      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     64,700      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         keep if bottom_tpi;
{txt}(39509 observations deleted)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     25191    2.77e+09    9.53e+08   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     25141    129.6397    15.32622        103        153
{txt}{space 2}valued_tot {c |}{res}     25141    354.9813    519.5628   7.142857       9000
{txt}quantityd_~t {c |}{res}     25141    .9126146    3.510942   .0000429        362
{txt}{space 6}strata {c |}{res}     25191    6.263388    2.358967          1         10
{txt}{hline 13}{c +}{hline 56}
{space 6}hhsize {c |}{res}     25191    5.936326     2.49084          1         19
{txt}{space 4}hhweight {c |}{res}     25191     5268.78    4202.887        100      60164
{txt}{space 4}survquar {c |}{res}     25191    2.534318    1.160623          1          4
{txt}{space 5}survmon {c |}{res}     25191    6.790203    3.435276          1         12
{txt}{space 7}rural {c |}{res}     25191    .9387877    .2397242          0          1
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}     25191    2.666548    .9498125          1          4
{txt}{space 4}spdomain {c |}{res}     25191    3.547457    1.184909          1          5
{txt}{space 5}reg_tpi {c |}{res}     25191    2.666548    .9498125          1          4
{txt}{space 2}bottom_tpi {c |}{res}     25191           1           0          1          1
{txt}
{com}. * Drop one HH with extremely high quantity and low value in IAF 2002/03 (t=t1) ;
. *        drop if hhid==263001;
.         preserve;
{txt}
{com}.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survmon);
{txt}
{com}.                         drop if product==.;
{txt}(22 observations deleted)

{com}.                         gen ppkg=valued_tot/quantityd_tot;
{txt}
{com}.                         lab var ppkg "Unit value per kg";
{txt}
{com}.                         sort reg_tpi product ;
{txt}
{com}.                         compress;
{txt}
{com}.                         tempfile uvm;
{txt}
{com}.                 save `uvm', replace;
{txt}(note: file /tmp/St08757.00000a not found)
file /tmp/St08757.00000a saved

{com}.                 save "$path/work/tpi_unit_val_monthly.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/tpi_unit_val_monthly.dta saved

{com}.         restore;
{txt}
{com}.         preserve;
{txt}
{com}.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survquar);
{txt}
{com}.                         drop if product==.;
{txt}(13 observations deleted)

{com}.                         gen ppkg=valued_tot/quantityd_tot;
{txt}
{com}.                         sort reg_tpi product survquar;
{txt}
{com}.                         list in  1/3;
{txt}
     {c TLC}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product      survquar   news   reg_tpi   valued~t   quanti~t       ppkg {txt}{c |}
     {c LT}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
  1. {c |} {res}    103    May-Jul 09      1   central   22568.77   73.73573   306.0764 {txt}{c |}
  2. {c |} {res}    103   Sept-Oct 09      1   central   14153.36   46.40452   304.9995 {txt}{c |}
  3. {c |} {res}    103   Nov09-Jan10      1   central   6368.062   18.81594   338.4398 {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}.                         list in -3/-1;
{txt}
     {c TLC}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product      survquar   news   reg_tpi   valued~t   quanti~t       ppkg {txt}{c |}
     {c LT}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
469. {c |} {res}    153   Sept-Oct 09      4   western   5314.159   5.482946    969.216 {txt}{c |}
470. {c |} {res}    153   Nov09-Jan10      4   western   7463.587   5.877618   1269.832 {txt}{c |}
471. {c |} {res}    153    Feb-Apr 10      4   western   4601.457    3.04152   1512.881 {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 13}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}.                         tempfile uvq;
{txt}
{com}.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/tpi_unit_val_quarterly.dta saved

{com}.                 save `uvq', replace;
{txt}(note: file /tmp/St08757.00000c not found)
file /tmp/St08757.00000c saved

{com}.         restore;
{txt}
{com}.         **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each reg_tpi & product combination. This should eliminate outliers that
> * may have an undue influence on the price calculation. Then use sample
> * weighting PLUS quantity weighting on those HH-level observations.
> **************************************************************************;
.         preserve;
{txt}
{com}.                 gen hhppkg=valued_tot/quantityd_tot;
{txt}(50 missing values generated)

{com}.                 egen lower5=pctile(hhppkg), p(5) by(reg_tpi product);
{txt}(50 missing values generated)

{com}.                 egen upper5=pctile(hhppkg), p(95) by(reg_tpi product);
{txt}(50 missing values generated)

{com}.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
{txt}(1523 observations deleted)

{com}.                                 gen hhqtywt=hhweight*quantityd_tot;
{txt}(50 missing values generated)

{com}.                                 collapse (sum) valued_tot quantityd_tot [aw=hhqtywt] , 
>                                 by(reg_tpi news product survquar);
{txt}
{com}.                         drop if product==.;
{txt}(0 observations deleted)

{com}.                         gen ppkg_trim=valued_tot/quantityd_tot;
{txt}
{com}.                         lab var ppkg_trim "90% trimmed unit value per kg";
{txt}
{com}.                         sort reg_tpi product survquar;
{txt}
{com}.                         list , nol;
{txt}
     {c TLC}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product   survquar   news   reg_tpi   valued~t   quanti~t   ppkg_t~m {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
  1. {c |} {res}    103          1      1         1   28319.06   96.17417    294.456 {txt}{c |}
  2. {c |} {res}    103          2      1         1   18820.04    63.6893   295.4977 {txt}{c |}
  3. {c |} {res}    103          3      1         1   9132.665   27.16821   336.1527 {txt}{c |}
  4. {c |} {res}    103          4      1         1   27228.33    88.0705   309.1652 {txt}{c |}
  5. {c |} {res}    104          1      1         1   42474.56   71.73248   592.1246 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
  6. {c |} {res}    104          2      1         1   17802.97   23.25988   765.3936 {txt}{c |}
  7. {c |} {res}    104          3      1         1   31911.45   52.31848   609.9461 {txt}{c |}
  8. {c |} {res}    104          4      1         1   9015.529   25.42311   354.6194 {txt}{c |}
  9. {c |} {res}    105          1      1         1   91509.81   395.6744   231.2755 {txt}{c |}
 10. {c |} {res}    105          2      1         1   57368.14   241.7264   237.3268 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 11. {c |} {res}    105          3      1         1   145358.1   1071.283    135.686 {txt}{c |}
 12. {c |} {res}    105          4      1         1   114331.1   759.7541   150.4843 {txt}{c |}
 13. {c |} {res}    107          1      1         1   85844.55   873.0867   98.32306 {txt}{c |}
 14. {c |} {res}    107          2      1         1   32172.96   369.5086   87.06957 {txt}{c |}
 15. {c |} {res}    107          3      1         1   23106.83   195.9678   117.9113 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 16. {c |} {res}    107          4      1         1    30158.9   322.1287   93.62376 {txt}{c |}
 17. {c |} {res}    108          1      1         1    35842.4   134.7221   266.0469 {txt}{c |}
 18. {c |} {res}    108          2      1         1   14800.12   15.20498   973.3733 {txt}{c |}
 19. {c |} {res}    108          3      1         1   22291.46   24.94331   893.6847 {txt}{c |}
 20. {c |} {res}    108          4      1         1   5728.396   5.748081   996.5754 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 21. {c |} {res}    110          1      1         1   1176.227   .5762593   2041.141 {txt}{c |}
 22. {c |} {res}    110          2      1         1   5593.003   2.517993   2221.215 {txt}{c |}
 23. {c |} {res}    110          3      1         1   18867.22   7.993233   2360.399 {txt}{c |}
 24. {c |} {res}    110          4      1         1   2869.241   1.241045   2311.956 {txt}{c |}
 25. {c |} {res}    111          1      1         1   3402.353   25.50123   133.4192 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 26. {c |} {res}    111          2      1         1   3343.013   24.67649   135.4736 {txt}{c |}
 27. {c |} {res}    111          3      1         1   1217.548   2.841784   428.4451 {txt}{c |}
 28. {c |} {res}    111          4      1         1   175.5897   .3993383   439.7016 {txt}{c |}
 29. {c |} {res}    112          1      1         1   54937.46   98.82606   555.9005 {txt}{c |}
 30. {c |} {res}    112          3      1         1   40349.24   79.76717   505.8376 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 31. {c |} {res}    112          4      1         1   2237.044   10.65908   209.8721 {txt}{c |}
 32. {c |} {res}    113          1      1         1   91826.66    75.2524   1220.249 {txt}{c |}
 33. {c |} {res}    113          2      1         1   124001.4   97.77476   1268.236 {txt}{c |}
 34. {c |} {res}    113          3      1         1   62127.95   50.07518   1240.693 {txt}{c |}
 35. {c |} {res}    113          4      1         1   87345.91   77.05343   1133.576 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 36. {c |} {res}    115          1      1         1   1518.848   .8935708   1699.751 {txt}{c |}
 37. {c |} {res}    115          2      1         1   3328.816   2.611885   1274.488 {txt}{c |}
 38. {c |} {res}    115          3      1         1   28.57143   .1428571        200 {txt}{c |}
 39. {c |} {res}    115          4      1         1   1200.586   1.701867   705.4523 {txt}{c |}
 40. {c |} {res}    116          1      1         1   114.2857   .2857143        400 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 41. {c |} {res}    116          2      1         1   42.85714   .0357143       1200 {txt}{c |}
 42. {c |} {res}    116          3      1         1   142.8571   .1428571       1000 {txt}{c |}
 43. {c |} {res}    116          4      1         1   1382.168   1.373979    1005.96 {txt}{c |}
 44. {c |} {res}    117          1      1         1   15414.56   3.561197   4328.479 {txt}{c |}
 45. {c |} {res}    117          2      1         1    8197.15    2.04051   4017.206 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 46. {c |} {res}    117          3      1         1   27218.37   6.048779   4499.812 {txt}{c |}
 47. {c |} {res}    117          4      1         1   12511.55   3.448729   3627.873 {txt}{c |}
 48. {c |} {res}    121          1      1         1   6508.427   1.734276   3752.822 {txt}{c |}
 49. {c |} {res}    121          2      1         1   5008.327   1.492481   3355.704 {txt}{c |}
 50. {c |} {res}    121          4      1         1   3631.933   .9492712   3826.022 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 51. {c |} {res}    122          1      1         1   10816.58   16.32208    662.696 {txt}{c |}
 52. {c |} {res}    122          2      1         1   3159.173    6.19246   510.1645 {txt}{c |}
 53. {c |} {res}    122          3      1         1   5295.555   17.52378   302.1925 {txt}{c |}
 54. {c |} {res}    122          4      1         1    5019.82   10.92361   459.5386 {txt}{c |}
 55. {c |} {res}    123          1      1         1   5117.439   84.14975   60.81348 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 56. {c |} {res}    123          2      1         1   8558.404   44.09394   194.0948 {txt}{c |}
 57. {c |} {res}    123          3      1         1   6036.032   18.57097   325.0252 {txt}{c |}
 58. {c |} {res}    123          4      1         1   7414.212   53.56753   138.4087 {txt}{c |}
 59. {c |} {res}    125          1      1         1   24705.94   393.7206   62.74994 {txt}{c |}
 60. {c |} {res}    125          2      1         1   11200.71   136.2267   82.22111 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 61. {c |} {res}    125          3      1         1   8734.345   121.0963   72.12728 {txt}{c |}
 62. {c |} {res}    125          4      1         1    28546.5   303.3625    94.1003 {txt}{c |}
 63. {c |} {res}    127          1      1         1    9833.11   9.506735   1034.331 {txt}{c |}
 64. {c |} {res}    127          2      1         1   7060.237   10.01646   704.8632 {txt}{c |}
 65. {c |} {res}    127          3      1         1   9604.674   12.31256    780.071 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 66. {c |} {res}    127          4      1         1   7881.445    10.9077   722.5579 {txt}{c |}
 67. {c |} {res}    132          1      1         1   4637.907   19.87585   233.3438 {txt}{c |}
 68. {c |} {res}    132          3      1         1   26934.47    38.9853   690.8878 {txt}{c |}
 69. {c |} {res}    132          4      1         1   2211.141   4.191291    527.556 {txt}{c |}
 70. {c |} {res}    134          1      1         1   13692.47   9.186242   1490.541 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 71. {c |} {res}    134          2      1         1   964.9387   1.593603   605.5074 {txt}{c |}
 72. {c |} {res}    134          3      1         1   11726.47   9.067169   1293.289 {txt}{c |}
 73. {c |} {res}    134          4      1         1   26690.89   38.11727    700.231 {txt}{c |}
 74. {c |} {res}    135          1      1         1   4433.286   5.108597    867.809 {txt}{c |}
 75. {c |} {res}    135          2      1         1   3970.859   4.653355   853.3323 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 76. {c |} {res}    135          3      1         1    4599.86   4.966232   926.2273 {txt}{c |}
 77. {c |} {res}    135          4      1         1    4121.24   4.529818   909.8026 {txt}{c |}
 78. {c |} {res}    136          1      1         1   11089.32   10.39678   1066.611 {txt}{c |}
 79. {c |} {res}    136          2      1         1   8012.356   9.043825   885.9477 {txt}{c |}
 80. {c |} {res}    136          3      1         1   8389.277   7.701906   1089.247 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 81. {c |} {res}    136          4      1         1    8934.01   9.289546   961.7273 {txt}{c |}
 82. {c |} {res}    138          1      1         1   7491.664   18.84441   397.5536 {txt}{c |}
 83. {c |} {res}    138          2      1         1   15068.07   25.19876   597.9689 {txt}{c |}
 84. {c |} {res}    138          3      1         1   8172.348   20.14011   405.7747 {txt}{c |}
 85. {c |} {res}    138          4      1         1   13097.63   33.96951   385.5702 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 86. {c |} {res}    139          1      1         1       3476   3.943987   881.3417 {txt}{c |}
 87. {c |} {res}    139          2      1         1   3700.988   3.970271   932.1752 {txt}{c |}
 88. {c |} {res}    139          3      1         1   4573.743   5.607473   815.6514 {txt}{c |}
 89. {c |} {res}    139          4      1         1   5718.579   10.81455   528.7859 {txt}{c |}
 90. {c |} {res}    140          1      1         1   168173.8   312.1417    538.774 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 91. {c |} {res}    140          2      1         1   14004.16   9.738918   1437.959 {txt}{c |}
 92. {c |} {res}    140          3      1         1   13425.82    12.5723    1067.89 {txt}{c |}
 93. {c |} {res}    140          4      1         1        750         .5       1500 {txt}{c |}
 94. {c |} {res}    141          1      1         1    73760.3    50.9324     1448.2 {txt}{c |}
 95. {c |} {res}    141          2      1         1   12806.28    7.15612   1789.557 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
 96. {c |} {res}    141          3      1         1   62646.22   41.02652   1526.969 {txt}{c |}
 97. {c |} {res}    141          4      1         1   36183.02   27.68363   1307.019 {txt}{c |}
 98. {c |} {res}    144          1      1         1   20654.94   13.06472   1580.971 {txt}{c |}
 99. {c |} {res}    144          2      1         1   10780.17   5.483299   1966.001 {txt}{c |}
100. {c |} {res}    144          3      1         1   10939.78   5.735506   1907.378 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
101. {c |} {res}    144          4      1         1   9941.407   4.711683   2109.948 {txt}{c |}
102. {c |} {res}    146          4      1         1   214.2857   .0714286       3000 {txt}{c |}
103. {c |} {res}    147          1      1         1   54118.57   24.23457   2233.114 {txt}{c |}
104. {c |} {res}    147          2      1         1    17767.9   7.739445   2295.758 {txt}{c |}
105. {c |} {res}    147          3      1         1   26837.26   11.40099    2353.94 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
106. {c |} {res}    147          4      1         1   22323.89   9.559492   2335.259 {txt}{c |}
107. {c |} {res}    150          1      1         1   5876.163   6.474012   907.6541 {txt}{c |}
108. {c |} {res}    150          2      1         1   3132.376   3.729236   839.9513 {txt}{c |}
109. {c |} {res}    150          3      1         1   4308.097   4.897028   879.7371 {txt}{c |}
110. {c |} {res}    150          4      1         1   3766.077   4.729587   796.2802 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
111. {c |} {res}    153          1      1         1   4290.671   2.800241   1532.251 {txt}{c |}
112. {c |} {res}    153          2      1         1   4229.531   2.279642   1855.349 {txt}{c |}
113. {c |} {res}    153          3      1         1   2714.002    2.30214   1178.904 {txt}{c |}
114. {c |} {res}    153          4      1         1    4017.72   4.906215   818.9043 {txt}{c |}
115. {c |} {res}    103          1      2         2   15216.61   42.38829   358.9814 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
116. {c |} {res}    103          2      2         2   10384.88   29.72081   349.4143 {txt}{c |}
117. {c |} {res}    103          3      2         2   2621.611   8.571429   305.8545 {txt}{c |}
118. {c |} {res}    103          4      2         2   11809.92   38.17354   309.3746 {txt}{c |}
119. {c |} {res}    104          1      2         2   2169.555   5.613356   386.4987 {txt}{c |}
120. {c |} {res}    104          2      2         2   4216.845   5.868171    718.596 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
121. {c |} {res}    104          3      2         2   2266.713   3.726532   608.2634 {txt}{c |}
122. {c |} {res}    104          4      2         2    711.778   1.071429   664.3262 {txt}{c |}
123. {c |} {res}    105          1      2         2   110893.2   530.7202   208.9486 {txt}{c |}
124. {c |} {res}    105          2      2         2     227212     834.56   272.2536 {txt}{c |}
125. {c |} {res}    105          3      2         2   240318.4   771.1798   311.6244 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
126. {c |} {res}    105          4      2         2   170147.4   843.8369   201.6354 {txt}{c |}
127. {c |} {res}    107          1      2         2   111622.5   1423.144   78.43377 {txt}{c |}
128. {c |} {res}    107          2      2         2   80616.85   1267.057   63.62529 {txt}{c |}
129. {c |} {res}    107          3      2         2   83343.61   920.6839   90.52359 {txt}{c |}
130. {c |} {res}    107          4      2         2   42145.69   585.6392   71.96529 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
131. {c |} {res}    108          1      2         2   223255.7   294.0954   759.1269 {txt}{c |}
132. {c |} {res}    108          2      2         2   165368.5   210.7026    784.843 {txt}{c |}
133. {c |} {res}    108          3      2         2   126050.7   153.0366   823.6641 {txt}{c |}
134. {c |} {res}    108          4      2         2   77268.72   103.1481   749.1049 {txt}{c |}
135. {c |} {res}    110          1      2         2   7299.184   3.796218   1922.752 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
136. {c |} {res}    110          2      2         2   30868.41   16.72343   1845.818 {txt}{c |}
137. {c |} {res}    110          3      2         2   24572.78   13.49839   1820.422 {txt}{c |}
138. {c |} {res}    110          4      2         2   25752.53   16.41511    1568.83 {txt}{c |}
139. {c |} {res}    111          1      2         2   5156.575   12.73581   404.8879 {txt}{c |}
140. {c |} {res}    111          2      2         2    1678.64   3.114843   538.9163 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
141. {c |} {res}    111          3      2         2   466.2857   .6234571   747.9034 {txt}{c |}
142. {c |} {res}    111          4      2         2   121.1439   .2783106   435.2829 {txt}{c |}
143. {c |} {res}    112          1      2         2   45076.43   133.5258   337.5859 {txt}{c |}
144. {c |} {res}    112          2      2         2   22184.91   52.55546   422.1238 {txt}{c |}
145. {c |} {res}    112          3      2         2   37000.18   92.94242   398.0979 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
146. {c |} {res}    112          4      2         2   7385.586   14.44048   511.4503 {txt}{c |}
147. {c |} {res}    113          1      2         2   112812.5   107.5083   1049.338 {txt}{c |}
148. {c |} {res}    113          2      2         2     257837   246.4263   1046.305 {txt}{c |}
149. {c |} {res}    113          3      2         2   143475.6   134.1408   1069.589 {txt}{c |}
150. {c |} {res}    113          4      2         2   111106.9   141.3594   785.9888 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
151. {c |} {res}    115          1      2         2   19434.97   19.97643   972.8948 {txt}{c |}
152. {c |} {res}    115          2      2         2   35465.11   41.97821   844.8458 {txt}{c |}
153. {c |} {res}    115          3      2         2   13514.25   13.92657   970.3928 {txt}{c |}
154. {c |} {res}    115          4      2         2   49660.45   54.77277   906.6632 {txt}{c |}
155. {c |} {res}    116          1      2         2   67574.73   158.8968   425.2742 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
156. {c |} {res}    116          2      2         2   50211.55    115.254     435.66 {txt}{c |}
157. {c |} {res}    116          3      2         2    9590.41   14.60383   656.7053 {txt}{c |}
158. {c |} {res}    116          4      2         2   25656.21   59.25055   433.0121 {txt}{c |}
159. {c |} {res}    117          1      2         2   22650.82   5.262053   4304.559 {txt}{c |}
160. {c |} {res}    117          2      2         2    58746.1   14.44641   4066.485 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
161. {c |} {res}    117          3      2         2   39753.66   9.453981   4204.965 {txt}{c |}
162. {c |} {res}    117          4      2         2   46207.79   11.27829   4097.056 {txt}{c |}
163. {c |} {res}    121          1      2         2   12499.42   3.396334    3680.27 {txt}{c |}
164. {c |} {res}    121          2      2         2   23643.57   6.528268   3621.721 {txt}{c |}
165. {c |} {res}    121          3      2         2   20979.36   5.958847   3520.708 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
166. {c |} {res}    121          4      2         2   13772.91     3.4066   4043.007 {txt}{c |}
167. {c |} {res}    122          1      2         2   32499.62   79.55261   408.5299 {txt}{c |}
168. {c |} {res}    122          2      2         2   61292.71   112.0372   547.0744 {txt}{c |}
169. {c |} {res}    122          3      2         2   20158.22   36.54114   551.6583 {txt}{c |}
170. {c |} {res}    122          4      2         2   16276.52   22.32409   729.1013 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
171. {c |} {res}    123          1      2         2    19677.4   111.2016   176.9525 {txt}{c |}
172. {c |} {res}    123          2      2         2   23213.51   106.9577   217.0345 {txt}{c |}
173. {c |} {res}    123          3      2         2   35242.69   115.5208   305.0765 {txt}{c |}
174. {c |} {res}    123          4      2         2   12075.58    39.7925   303.4638 {txt}{c |}
175. {c |} {res}    125          1      2         2   12538.33   158.3562   79.17799 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
176. {c |} {res}    125          2      2         2    30960.9   465.6374   66.49143 {txt}{c |}
177. {c |} {res}    125          3      2         2   21628.59   306.5145     70.563 {txt}{c |}
178. {c |} {res}    125          4      2         2   24096.16   288.1129   83.63444 {txt}{c |}
179. {c |} {res}    127          1      2         2   17128.75   22.78219   751.8484 {txt}{c |}
180. {c |} {res}    127          2      2         2   17629.16    29.5287   597.0177 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
181. {c |} {res}    127          3      2         2   16981.87   28.49795   595.8978 {txt}{c |}
182. {c |} {res}    127          4      2         2   13846.96   19.14888   723.1213 {txt}{c |}
183. {c |} {res}    132          1      2         2   52177.05   261.1627   199.7875 {txt}{c |}
184. {c |} {res}    132          2      2         2   2185.163   5.114283   427.2667 {txt}{c |}
185. {c |} {res}    132          3      2         2   39936.03   278.7449   143.2709 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
186. {c |} {res}    132          4      2         2   125.2474   .2788458   449.1638 {txt}{c |}
187. {c |} {res}    134          1      2         2   4247.295   8.619919   492.7303 {txt}{c |}
188. {c |} {res}    134          2      2         2   12888.27   8.629192   1493.567 {txt}{c |}
189. {c |} {res}    134          3      2         2   28927.07   14.32467   2019.388 {txt}{c |}
190. {c |} {res}    134          4      2         2   20125.43   20.83256   966.0563 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
191. {c |} {res}    135          1      2         2   11339.17   9.458533   1198.829 {txt}{c |}
192. {c |} {res}    135          2      2         2   9263.429   9.030714   1025.769 {txt}{c |}
193. {c |} {res}    135          3      2         2   12212.55   14.15807   862.5856 {txt}{c |}
194. {c |} {res}    135          4      2         2   10055.97   11.68062   860.9108 {txt}{c |}
195. {c |} {res}    136          1      2         2    26096.8   35.97607   725.3934 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
196. {c |} {res}    136          2      2         2   14422.53   12.03719   1198.164 {txt}{c |}
197. {c |} {res}    136          3      2         2   18357.02   21.10697   869.7134 {txt}{c |}
198. {c |} {res}    136          4      2         2   14203.28   16.61354   854.9216 {txt}{c |}
199. {c |} {res}    138          1      2         2   29689.15   98.11337   302.6005 {txt}{c |}
200. {c |} {res}    138          2      2         2   26584.42   54.17285   490.7333 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
201. {c |} {res}    138          3      2         2   36372.89   158.2122   229.8994 {txt}{c |}
202. {c |} {res}    138          4      2         2   22069.24   57.12804   386.3119 {txt}{c |}
203. {c |} {res}    139          1      2         2   11446.45    24.3234   470.5941 {txt}{c |}
204. {c |} {res}    139          2      2         2   27988.11    53.0225   527.8535 {txt}{c |}
205. {c |} {res}    139          3      2         2   16856.17   46.92006   359.2529 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
206. {c |} {res}    139          4      2         2    14821.7   25.02959   592.1671 {txt}{c |}
207. {c |} {res}    140          1      2         2   37986.05   29.46379   1289.245 {txt}{c |}
208. {c |} {res}    140          2      2         2   45309.99   40.97656   1105.754 {txt}{c |}
209. {c |} {res}    140          3      2         2   9400.593    7.53642   1247.355 {txt}{c |}
210. {c |} {res}    140          4      2         2   1474.728   .6486086    2273.68 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
211. {c |} {res}    141          1      2         2   45619.38   29.55759   1543.407 {txt}{c |}
212. {c |} {res}    141          2      2         2   42371.15   28.91936   1465.149 {txt}{c |}
213. {c |} {res}    141          3      2         2   24229.99   19.20201   1261.847 {txt}{c |}
214. {c |} {res}    141          4      2         2   43447.75   20.69524   2099.408 {txt}{c |}
215. {c |} {res}    144          1      2         2   5355.409   3.689301   1451.605 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
216. {c |} {res}    144          2      2         2   24721.29   14.33309    1724.77 {txt}{c |}
217. {c |} {res}    144          3      2         2   4501.591   6.699664    671.913 {txt}{c |}
218. {c |} {res}    144          4      2         2   12032.57   7.974338   1508.911 {txt}{c |}
219. {c |} {res}    146          1      2         2   754.1312   .2596703   2904.188 {txt}{c |}
220. {c |} {res}    146          2      2         2   619.2248   .2120636   2919.996 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
221. {c |} {res}    146          3      2         2    1618.65   .6900292    2345.77 {txt}{c |}
222. {c |} {res}    146          4      2         2   5278.437    1.85763    2841.49 {txt}{c |}
223. {c |} {res}    147          1      2         2   59120.19   27.67904   2135.919 {txt}{c |}
224. {c |} {res}    147          2      2         2   47470.97   21.53229   2204.641 {txt}{c |}
225. {c |} {res}    147          3      2         2      38467   16.56121   2322.717 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
226. {c |} {res}    147          4      2         2   68759.17   30.41655   2260.584 {txt}{c |}
227. {c |} {res}    150          1      2         2   10445.67    12.0583   866.2632 {txt}{c |}
228. {c |} {res}    150          2      2         2   10261.31   12.67841   809.3533 {txt}{c |}
229. {c |} {res}    150          3      2         2   5396.923   7.937652   679.9142 {txt}{c |}
230. {c |} {res}    150          4      2         2   7639.327   10.35384   737.8252 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
231. {c |} {res}    153          1      2         2   19452.29   43.12555   451.0619 {txt}{c |}
232. {c |} {res}    153          2      2         2   24716.01   57.57064   429.3162 {txt}{c |}
233. {c |} {res}    153          3      2         2   15118.67   30.78195   491.1536 {txt}{c |}
234. {c |} {res}    153          4      2         2   20709.89   73.44278   281.9867 {txt}{c |}
235. {c |} {res}    103          1      3         3   1387.982   4.285715   323.8625 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
236. {c |} {res}    103          2      3         3   1714.286   4.285715        400 {txt}{c |}
237. {c |} {res}    103          3      3         3   10114.38   37.68812   268.3706 {txt}{c |}
238. {c |} {res}    104          1      3         3   931.9478   1.071429   869.8179 {txt}{c |}
239. {c |} {res}    104          2      3         3   3589.251   3.157794   1136.632 {txt}{c |}
240. {c |} {res}    104          3      3         3   571.4286   .7142857        800 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
241. {c |} {res}    104          4      3         3   7284.352    16.7008   436.1679 {txt}{c |}
242. {c |} {res}    105          1      3         3   28746.72   59.90147   479.9001 {txt}{c |}
243. {c |} {res}    105          2      3         3   155633.5   411.9799   377.7697 {txt}{c |}
244. {c |} {res}    105          3      3         3   143629.8   355.1062   404.4698 {txt}{c |}
245. {c |} {res}    105          4      3         3   177375.9   461.8986   384.0148 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
246. {c |} {res}    107          1      3         3   147889.6   2164.835   68.31451 {txt}{c |}
247. {c |} {res}    107          2      3         3   73678.71   1128.811   65.27107 {txt}{c |}
248. {c |} {res}    107          3      3         3   41353.67   743.4236   55.62598 {txt}{c |}
249. {c |} {res}    107          4      3         3   200328.1   3359.779   59.62537 {txt}{c |}
250. {c |} {res}    108          1      3         3     113069   110.3901   1024.267 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
251. {c |} {res}    108          2      3         3     100464   232.1916   432.6772 {txt}{c |}
252. {c |} {res}    108          3      3         3   108203.3   140.4258   770.5372 {txt}{c |}
253. {c |} {res}    108          4      3         3   251788.9   366.0768   687.8033 {txt}{c |}
254. {c |} {res}    110          1      3         3   9286.859   6.080191   1527.396 {txt}{c |}
255. {c |} {res}    110          2      3         3   6789.116   3.327785   2040.131 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
256. {c |} {res}    110          3      3         3   18846.88   13.94177   1351.828 {txt}{c |}
257. {c |} {res}    110          4      3         3   13260.97   7.929799   1672.297 {txt}{c |}
258. {c |} {res}    111          1      3         3   8425.183   13.90304   605.9957 {txt}{c |}
259. {c |} {res}    111          2      3         3   19999.65    34.8276   574.2471 {txt}{c |}
260. {c |} {res}    111          3      3         3   12932.28   32.49667   397.9571 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
261. {c |} {res}    111          4      3         3    74265.2   184.2691   403.0258 {txt}{c |}
262. {c |} {res}    112          1      3         3   22654.14   41.01744   552.3052 {txt}{c |}
263. {c |} {res}    112          2      3         3   41719.16   184.4563   226.1737 {txt}{c |}
264. {c |} {res}    112          3      3         3    45883.2   203.6514   225.3026 {txt}{c |}
265. {c |} {res}    112          4      3         3   4329.857   15.61369   277.3116 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
266. {c |} {res}    113          1      3         3   74056.14   55.14548   1342.923 {txt}{c |}
267. {c |} {res}    113          2      3         3   119602.9   113.5709   1053.112 {txt}{c |}
268. {c |} {res}    113          3      3         3   50177.28   47.17356   1063.674 {txt}{c |}
269. {c |} {res}    113          4      3         3   153256.8   277.4742   552.3282 {txt}{c |}
270. {c |} {res}    115          1      3         3   14774.37   20.98848   703.9272 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
271. {c |} {res}    115          2      3         3   27111.39   27.85835   973.1874 {txt}{c |}
272. {c |} {res}    115          3      3         3   14039.14   19.95473   703.5495 {txt}{c |}
273. {c |} {res}    115          4      3         3   12562.43   23.81582   527.4825 {txt}{c |}
274. {c |} {res}    116          1      3         3   122448.6   201.3366   608.1783 {txt}{c |}
275. {c |} {res}    116          2      3         3   42876.34   95.12967   450.7147 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
276. {c |} {res}    116          3      3         3   122266.5   226.4491   539.9292 {txt}{c |}
277. {c |} {res}    116          4      3         3   283037.1   631.8442   447.9539 {txt}{c |}
278. {c |} {res}    117          1      3         3   43657.85   10.51257   4152.919 {txt}{c |}
279. {c |} {res}    117          2      3         3   87249.14   20.52166   4251.563 {txt}{c |}
280. {c |} {res}    117          3      3         3    42356.1   9.925028   4267.605 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
281. {c |} {res}    117          4      3         3   81555.37   20.36307   4005.062 {txt}{c |}
282. {c |} {res}    121          1      3         3   31442.08    8.80898   3569.322 {txt}{c |}
283. {c |} {res}    121          2      3         3    35765.8   9.510342   3760.727 {txt}{c |}
284. {c |} {res}    121          3      3         3   26259.72   7.667777   3424.685 {txt}{c |}
285. {c |} {res}    121          4      3         3   33287.89   9.537955   3490.045 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
286. {c |} {res}    122          1      3         3    10485.9   15.70707   667.5914 {txt}{c |}
287. {c |} {res}    122          2      3         3   15755.77   11.15259   1412.745 {txt}{c |}
288. {c |} {res}    122          3      3         3   10803.96   10.27337   1051.647 {txt}{c |}
289. {c |} {res}    122          4      3         3   17753.62   11.72752   1513.843 {txt}{c |}
290. {c |} {res}    123          1      3         3   39847.85   172.9701   230.3741 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
291. {c |} {res}    123          2      3         3   30541.64   40.93434   746.1128 {txt}{c |}
292. {c |} {res}    123          3      3         3   40856.48   82.57945   494.7536 {txt}{c |}
293. {c |} {res}    123          4      3         3   60931.27   99.12797   614.6729 {txt}{c |}
294. {c |} {res}    125          1      3         3   27347.45   347.2096   78.76351 {txt}{c |}
295. {c |} {res}    125          2      3         3   43603.09   587.6797   74.19534 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
296. {c |} {res}    125          3      3         3   11449.98   179.5487    63.7709 {txt}{c |}
297. {c |} {res}    125          4      3         3   43612.75   567.5557   76.84313 {txt}{c |}
298. {c |} {res}    127          1      3         3   41507.15   20.58854   2016.032 {txt}{c |}
299. {c |} {res}    127          2      3         3   41261.23    36.2179    1139.25 {txt}{c |}
300. {c |} {res}    127          3      3         3   29846.15   22.77964   1310.211 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
301. {c |} {res}    127          4      3         3   52372.55   38.43873   1362.494 {txt}{c |}
302. {c |} {res}    132          1      3         3   69618.35    194.335    358.239 {txt}{c |}
303. {c |} {res}    132          2      3         3   4247.604   11.38729   373.0126 {txt}{c |}
304. {c |} {res}    132          3      3         3   36323.39   151.5706   239.6466 {txt}{c |}
305. {c |} {res}    132          4      3         3   9845.334   42.35199   232.4645 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
306. {c |} {res}    134          1      3         3   226.1483   .4329502   522.3425 {txt}{c |}
307. {c |} {res}    134          2      3         3   3777.494   5.581423   676.7977 {txt}{c |}
308. {c |} {res}    134          3      3         3   6024.475   10.85671   554.9078 {txt}{c |}
309. {c |} {res}    134          4      3         3   3220.782   12.58312   255.9605 {txt}{c |}
310. {c |} {res}    135          1      3         3    15791.4   15.02537   1050.983 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
311. {c |} {res}    135          2      3         3   17092.08   13.83624   1235.312 {txt}{c |}
312. {c |} {res}    135          3      3         3   15412.83   17.05641   903.6389 {txt}{c |}
313. {c |} {res}    135          4      3         3   19741.75   18.72595   1054.246 {txt}{c |}
314. {c |} {res}    136          1      3         3   27161.05   22.55727   1204.093 {txt}{c |}
315. {c |} {res}    136          2      3         3   27567.78   27.45323   1004.173 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
316. {c |} {res}    136          3      3         3   24370.93    21.2866   1144.895 {txt}{c |}
317. {c |} {res}    136          4      3         3   37997.42   31.00012   1225.718 {txt}{c |}
318. {c |} {res}    138          1      3         3   7517.192   25.25612   297.6385 {txt}{c |}
319. {c |} {res}    138          2      3         3    8390.02   36.32424   230.9758 {txt}{c |}
320. {c |} {res}    138          3      3         3   8580.868   26.03578   329.5798 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
321. {c |} {res}    138          4      3         3   13508.13   39.13418   345.1747 {txt}{c |}
322. {c |} {res}    139          1      3         3   31819.69    72.6815   437.7962 {txt}{c |}
323. {c |} {res}    139          2      3         3   48745.03   122.7206   397.2032 {txt}{c |}
324. {c |} {res}    139          3      3         3   44232.68   120.0055   368.5887 {txt}{c |}
325. {c |} {res}    139          4      3         3   56073.72   143.0364   392.0241 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
326. {c |} {res}    140          1      3         3   23070.64   22.02973   1047.251 {txt}{c |}
327. {c |} {res}    140          2      3         3    23208.8   24.12267   962.1154 {txt}{c |}
328. {c |} {res}    140          3      3         3   3949.273   7.958361    496.242 {txt}{c |}
329. {c |} {res}    140          4      3         3   1342.447   1.883322    712.808 {txt}{c |}
330. {c |} {res}    141          1      3         3   162506.6   80.52101   2018.189 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
331. {c |} {res}    141          2      3         3   97560.73   46.33667   2105.476 {txt}{c |}
332. {c |} {res}    141          3      3         3   95006.45    51.9903   1827.388 {txt}{c |}
333. {c |} {res}    141          4      3         3   259997.5   109.5022   2374.358 {txt}{c |}
334. {c |} {res}    144          1      3         3   950.9478   .5687545   1671.983 {txt}{c |}
335. {c |} {res}    144          2      3         3   1471.617    1.79836   818.3105 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
336. {c |} {res}    144          3      3         3   398.8015   .4059347   982.4277 {txt}{c |}
337. {c |} {res}    144          4      3         3   368.4885   .5390197   683.6272 {txt}{c |}
338. {c |} {res}    146          1      3         3   38172.13   20.75864   1838.855 {txt}{c |}
339. {c |} {res}    146          2      3         3   16585.22   7.283366   2277.137 {txt}{c |}
340. {c |} {res}    146          3      3         3   64970.83     36.736   1768.588 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
341. {c |} {res}    146          4      3         3   79873.26   43.25926   1846.385 {txt}{c |}
342. {c |} {res}    147          1      3         3   36311.64   16.23056   2237.239 {txt}{c |}
343. {c |} {res}    147          2      3         3   57144.58   25.95222   2201.915 {txt}{c |}
344. {c |} {res}    147          3      3         3   38348.62   15.83702   2421.454 {txt}{c |}
345. {c |} {res}    147          4      3         3   67064.92    27.9402   2400.302 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
346. {c |} {res}    150          1      3         3   15631.93   17.57875   889.2512 {txt}{c |}
347. {c |} {res}    150          2      3         3   13207.61   20.86431   633.0241 {txt}{c |}
348. {c |} {res}    150          3      3         3   10061.31   14.58039   690.0574 {txt}{c |}
349. {c |} {res}    150          4      3         3    22565.6   34.05179   662.6846 {txt}{c |}
350. {c |} {res}    153          1      3         3   24801.75   38.12256   650.5792 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
351. {c |} {res}    153          2      3         3   30626.28   58.13491   526.8139 {txt}{c |}
352. {c |} {res}    153          3      3         3   52033.58   99.52981   522.7939 {txt}{c |}
353. {c |} {res}    153          4      3         3   58707.19   120.4651   487.3379 {txt}{c |}
354. {c |} {res}    103          1      4         4   44778.51   163.7554   273.4475 {txt}{c |}
355. {c |} {res}    103          2      4         4   72394.29   233.4372   310.1232 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
356. {c |} {res}    103          3      4         4   31806.17   97.61178   325.8436 {txt}{c |}
357. {c |} {res}    103          4      4         4   112989.5    364.812   309.7197 {txt}{c |}
358. {c |} {res}    104          1      4         4   143081.3   185.6128   770.8592 {txt}{c |}
359. {c |} {res}    104          2      4         4     112974   150.3383    751.465 {txt}{c |}
360. {c |} {res}    104          3      4         4   30398.32   27.86736   1090.822 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
361. {c |} {res}    104          4      4         4   46275.97   50.80224   910.9042 {txt}{c |}
362. {c |} {res}    105          1      4         4   96406.96   562.4341   171.4102 {txt}{c |}
363. {c |} {res}    105          2      4         4   83866.33   347.3599   241.4393 {txt}{c |}
364. {c |} {res}    105          3      4         4   107863.9   586.1739   184.0134 {txt}{c |}
365. {c |} {res}    105          4      4         4   131065.8    532.648   246.0645 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
366. {c |} {res}    107          1      4         4   93749.12   1092.712   85.79494 {txt}{c |}
367. {c |} {res}    107          2      4         4   69811.16   822.3728   84.88992 {txt}{c |}
368. {c |} {res}    107          3      4         4   34417.14   494.0651   69.66113 {txt}{c |}
369. {c |} {res}    107          4      4         4   38149.64   296.9164   128.4861 {txt}{c |}
370. {c |} {res}    108          1      4         4   86082.59   385.6029   223.2415 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
371. {c |} {res}    108          2      4         4   42465.75   73.28425   579.4662 {txt}{c |}
372. {c |} {res}    108          3      4         4   32316.56   61.21784   527.8944 {txt}{c |}
373. {c |} {res}    108          4      4         4   10573.29    14.5281   727.7824 {txt}{c |}
374. {c |} {res}    110          1      4         4   4015.797   1.636912   2453.276 {txt}{c |}
375. {c |} {res}    110          2      4         4   16251.96   7.634207   2128.834 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
376. {c |} {res}    110          3      4         4   10666.53   6.484197   1645.003 {txt}{c |}
377. {c |} {res}    110          4      4         4    4796.62   2.295554   2089.526 {txt}{c |}
378. {c |} {res}    111          1      4         4   2465.844   18.86201   130.7307 {txt}{c |}
379. {c |} {res}    111          2      4         4   1035.008   7.225212   143.2495 {txt}{c |}
380. {c |} {res}    111          3      4         4   7125.177    9.82826   724.9684 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
381. {c |} {res}    111          4      4         4   1657.598   4.905898   337.8786 {txt}{c |}
382. {c |} {res}    112          1      4         4   20939.39   64.61612   324.0583 {txt}{c |}
383. {c |} {res}    112          3      4         4   19449.36   54.15615   359.1347 {txt}{c |}
384. {c |} {res}    112          4      4         4   1521.461   5.172967   294.1176 {txt}{c |}
385. {c |} {res}    113          1      4         4   96491.34   83.23969   1159.199 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
386. {c |} {res}    113          2      4         4     120858   137.8231   876.9068 {txt}{c |}
387. {c |} {res}    113          3      4         4   173842.9   215.9366   805.0648 {txt}{c |}
388. {c |} {res}    113          4      4         4   58064.97   79.76872   727.9165 {txt}{c |}
389. {c |} {res}    115          1      4         4   26144.83   31.59779   827.4258 {txt}{c |}
390. {c |} {res}    115          2      4         4   22317.84   19.73202   1131.047 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
391. {c |} {res}    115          3      4         4   9727.324   7.141075   1362.165 {txt}{c |}
392. {c |} {res}    115          4      4         4    34347.8   46.46784   739.1735 {txt}{c |}
393. {c |} {res}    116          1      4         4   1022.575   1.225386   834.4922 {txt}{c |}
394. {c |} {res}    116          2      4         4   3224.496   4.713887   684.0418 {txt}{c |}
395. {c |} {res}    116          3      4         4   1939.862   3.350982   578.8937 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
396. {c |} {res}    116          4      4         4    1677.04   2.376296   705.7369 {txt}{c |}
397. {c |} {res}    117          1      4         4   22788.04   5.596151   4072.092 {txt}{c |}
398. {c |} {res}    117          2      4         4   28219.85   6.708414   4206.635 {txt}{c |}
399. {c |} {res}    117          3      4         4   6515.356   1.589221   4099.716 {txt}{c |}
400. {c |} {res}    117          4      4         4   19084.52   4.996784   3819.361 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
401. {c |} {res}    121          1      4         4   9506.152   2.144086   4433.661 {txt}{c |}
402. {c |} {res}    121          2      4         4   2545.664   .7354029   3461.592 {txt}{c |}
403. {c |} {res}    121          3      4         4   3440.366   1.025229   3355.705 {txt}{c |}
404. {c |} {res}    121          4      4         4   10969.24   1.889215   5806.243 {txt}{c |}
405. {c |} {res}    122          1      4         4   7543.381   34.67682   217.5338 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
406. {c |} {res}    122          2      4         4   16984.08   35.93871   472.5845 {txt}{c |}
407. {c |} {res}    122          3      4         4   4973.746   4.258996   1167.821 {txt}{c |}
408. {c |} {res}    122          4      4         4   2293.254   13.89412   165.0521 {txt}{c |}
409. {c |} {res}    123          1      4         4   13946.75   19.09676   730.3201 {txt}{c |}
410. {c |} {res}    123          2      4         4      25811   112.3558   229.7255 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
411. {c |} {res}    123          3      4         4   3401.328   22.35786   152.1312 {txt}{c |}
412. {c |} {res}    123          4      4         4   4187.914   3.498721   1196.984 {txt}{c |}
413. {c |} {res}    125          1      4         4    14303.9   179.4714   79.70015 {txt}{c |}
414. {c |} {res}    125          2      4         4    28040.2   299.4866   93.62756 {txt}{c |}
415. {c |} {res}    125          3      4         4    15624.2   224.3097   69.65456 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
416. {c |} {res}    125          4      4         4   39501.82   386.4713   102.2115 {txt}{c |}
417. {c |} {res}    127          1      4         4   8198.837   7.288663   1124.875 {txt}{c |}
418. {c |} {res}    127          2      4         4    5140.67   6.138281   837.4772 {txt}{c |}
419. {c |} {res}    127          3      4         4   8321.004   7.638924    1089.29 {txt}{c |}
420. {c |} {res}    127          4      4         4    11049.9   8.131307   1358.933 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
421. {c |} {res}    132          1      4         4   8482.452   27.64563   306.8279 {txt}{c |}
422. {c |} {res}    132          2      4         4   343.0752   1.622746   211.4165 {txt}{c |}
423. {c |} {res}    132          3      4         4   10468.88   85.30911    122.717 {txt}{c |}
424. {c |} {res}    132          4      4         4   138.2127   .1351429   1022.715 {txt}{c |}
425. {c |} {res}    134          1      4         4   13566.83   55.77483   243.2429 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
426. {c |} {res}    134          2      4         4    5540.52   12.37251   447.8089 {txt}{c |}
427. {c |} {res}    134          3      4         4   6380.269    20.4565   311.8944 {txt}{c |}
428. {c |} {res}    134          4      4         4   12849.99   29.43739   436.5194 {txt}{c |}
429. {c |} {res}    135          1      4         4   9021.512   9.537058   945.9429 {txt}{c |}
430. {c |} {res}    135          2      4         4   6989.515   8.334769   838.5972 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
431. {c |} {res}    135          3      4         4   6851.791   9.282655   738.1284 {txt}{c |}
432. {c |} {res}    135          4      4         4   4478.166   5.208365   859.8027 {txt}{c |}
433. {c |} {res}    136          1      4         4   29115.45   42.13629   690.9827 {txt}{c |}
434. {c |} {res}    136          2      4         4   14724.25   21.98266    669.812 {txt}{c |}
435. {c |} {res}    136          3      4         4   6854.008   9.076604   755.1291 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
436. {c |} {res}    136          4      4         4   10318.45   14.21089   726.0944 {txt}{c |}
437. {c |} {res}    138          1      4         4   13605.12    42.2637   321.9104 {txt}{c |}
438. {c |} {res}    138          2      4         4   20574.62   60.11374   342.2616 {txt}{c |}
439. {c |} {res}    138          3      4         4   6603.742   22.51565   293.2956 {txt}{c |}
440. {c |} {res}    138          4      4         4   9442.738   37.26974    253.362 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
441. {c |} {res}    139          1      4         4     3450.8    8.37726   411.9247 {txt}{c |}
442. {c |} {res}    139          2      4         4   6588.885   12.10739   544.2037 {txt}{c |}
443. {c |} {res}    139          3      4         4   3331.356   9.478369   351.4693 {txt}{c |}
444. {c |} {res}    139          4      4         4    1748.56   4.230788   413.2941 {txt}{c |}
445. {c |} {res}    140          1      4         4   92135.84   118.7114   776.1332 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
446. {c |} {res}    140          2      4         4   17408.64   14.46378   1203.602 {txt}{c |}
447. {c |} {res}    140          3      4         4   28858.82   70.10011   411.6801 {txt}{c |}
448. {c |} {res}    140          4      4         4   6416.295   4.845619   1324.143 {txt}{c |}
449. {c |} {res}    141          1      4         4   148954.6   101.4302   1468.544 {txt}{c |}
450. {c |} {res}    141          2      4         4   96470.34   59.77904   1613.782 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
451. {c |} {res}    141          3      4         4    75222.7   47.38911   1587.341 {txt}{c |}
452. {c |} {res}    141          4      4         4   60408.31   32.24249   1873.562 {txt}{c |}
453. {c |} {res}    144          1      4         4    9599.84   5.089246   1886.299 {txt}{c |}
454. {c |} {res}    144          2      4         4   23574.73   11.40373   2067.282 {txt}{c |}
455. {c |} {res}    144          3      4         4   6155.921   3.236373   1902.104 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
456. {c |} {res}    144          4      4         4    11948.2   6.174718   1935.019 {txt}{c |}
457. {c |} {res}    146          1      4         4   470.6587   .2591018   1816.501 {txt}{c |}
458. {c |} {res}    146          4      4         4        200         .1       2000 {txt}{c |}
459. {c |} {res}    147          1      4         4   23547.74   10.45022   2253.324 {txt}{c |}
460. {c |} {res}    147          2      4         4   22270.22   9.571515   2326.718 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
461. {c |} {res}    147          3      4         4   9586.356   4.335199   2211.284 {txt}{c |}
462. {c |} {res}    147          4      4         4   10944.31   4.637684   2359.865 {txt}{c |}
463. {c |} {res}    150          1      4         4   12032.84   12.49234   963.2169 {txt}{c |}
464. {c |} {res}    150          2      4         4   10442.45   10.91711   956.5212 {txt}{c |}
465. {c |} {res}    150          3      4         4   5452.328   5.802804   939.6024 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c RT}
466. {c |} {res}    150          4      4         4   5798.997    6.31094     918.88 {txt}{c |}
467. {c |} {res}    153          1      4         4   17942.73   17.95513   999.3094 {txt}{c |}
468. {c |} {res}    153          2      4         4    8706.94    11.6054    750.249 {txt}{c |}
469. {c |} {res}    153          3      4         4   19314.54   16.82786   1147.771 {txt}{c |}
470. {c |} {res}    153          4      4         4   6548.263   5.328297    1228.96 {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 10}{c -}{hline 6}{c -}{hline 9}{c -}{hline 10}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}.                         tempfile uvq2;
{txt}
{com}.                         keep reg_tpi product survquar ppkg_trim;
{txt}
{com}.                 save `uvq2', replace;
{txt}(note: file /tmp/St08757.00000e not found)
file /tmp/St08757.00000e saved

{com}.                                 use `uvq' ;
{txt}
{com}.                         merge reg_tpi product survquar using `uvq2';
{txt}(label REG_TPI already defined)
(label lsurvquar already defined)

{com}.                         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}          1        0.21        0.21
{txt}          3 {c |}{res}        470       99.79      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        471      100.00
{txt}
{com}.                         drop _merge;
{txt}
{com}.                 save `uvq', replace;
{txt}file /tmp/St08757.00000c saved

{com}.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/tpi_unit_val_quarterly.dta saved

{com}.         restore;
{txt}
{com}. **************************************************************************;
. * Now calculate the weights for the temporal price index. The weights
> * will be based on the bottom 50% of the national nominal consumption
> * per capita (see below). We let the weights vary by strata (3 regions X rural/urban).
> *
> * First, make a small file that has the total nominal HH daily consumption,
> * to use as our denominator. We cannot simply use the `bottom_tpi' file that
> * was created earlier because we will need some other variables from
> * the cons_cat.dta file.
> **************************************************************************;
. use "$path/work/conpc.dta", clear;
{txt}
{com}. keep hhid cons_hh_nom;
{txt}
{com}. *use "$path/in/cons_cat.dta", clear ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;
{txt}
{com}.         merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.           tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         collapse (mean) cons_hh_nom hhsize strata hhweight rural news survquar reg_tpi,
>                 by(hhid);
{txt}
{com}.         lab var cons_hh_nom "Nominal daily HH consumption";
{txt}
{com}.         rename hhsize   cc_hhs;
{txt}
{com}.         rename strata   cc_reg;
{txt}
{com}.         rename hhweight cc_hhw;
{txt}
{com}.         rename rural    cc_rur;
{txt}
{com}.         rename news     cc_news;
{txt}
{com}.         rename survquar cc_qua;
{txt}
{com}.         rename reg_tpi  cc_reg_tpi;
{txt}
{com}.         sort hhid;
{txt}
{com}.         tempfile thhcons;
{txt}
{com}. save `thhcons', replace;
{txt}(note: file /tmp/St08757.00000f not found)
file /tmp/St08757.00000f saved

{com}. **************************************************************************;
. * Merge the file with consumption on the food products with HH consumption file,
> * then use "fillin" to take care of cases where a household did not
> * consume all n_tpi commodities. Note that we need to do the merge
> * first because there are some households that are not in `acredd' at
> * all, because they did not consume *any* of the n_tpi items. Then replace
> * missing values in the "filled in" observations with the relevant values 
> * for that household.
> **************************************************************************;
. use `acredd';
{txt}
{com}.         cap drop _merge;
{txt}
{com}.         drop if product==.;
{txt}(202 observations deleted)

{com}.         merge hhid using `thhcons';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}        202        0.31        0.31
{txt}          3 {c |}{res}     64,498       99.69      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     64,700      100.00
{txt}
{com}.         for var valued_tot quantityd_tot : replace X=0 if _merge==2;

{res}->  replace valued_tot=0 if _merge==2
{txt}(202 real changes made)

{res}->  replace quantityd_tot=0 if _merge==2
{txt}(202 real changes made)

{com}.                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 valued_tot quantityd_tot : replace X=0 if _merge==2;
>                                 */
> 
>         replace hhsize  =cc_hhs     if _merge==2;
{txt}(202 real changes made)

{com}.         replace strata  =cc_reg     if _merge==2;
{txt}(202 real changes made)

{com}.         replace hhweight=cc_hhw     if _merge==2;
{txt}(202 real changes made)

{com}.         replace rural   =cc_rur     if _merge==2;
{txt}(202 real changes made)

{com}.         replace news    =cc_news        if _merge==2;
{txt}(202 real changes made)

{com}.         replace survquar=cc_qua     if _merge==2;
{txt}(202 real changes made)

{com}.         replace reg_tpi =cc_reg_tpi     if _merge==2;
{txt}(202 real changes made)

{com}.         drop _merge cc_* ;
{txt}
{com}.                 fillin hhid product;
{txt}
{com}.         replace valued_tot=0 if _fillin;
{txt}(145325 real changes made)

{com}.                 for var quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;

{res}->  egen tmp=mean(quantityd_tot), by(hhid)

->  replace quantityd_tot=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(strata), by(hhid)

->  replace strata=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(rural), by(hhid)

->  replace rural=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(hhweight), by(hhid)

->  replace hhweight=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(hhsize), by(hhid)

->  replace hhsize=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(survquar), by(hhid)

->  replace survquar=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(survmon), by(hhid)
{txt}(6262 missing values generated)

{res}->  replace survmon=tmp if _fillin
{txt}(139265 real changes made)

{res}->  drop tmp

->  egen tmp=mean(news), by(hhid)

->  replace news=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(reg_tpi), by(hhid)

->  replace reg_tpi=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp

->  egen tmp=mean(cons_hh_nom), by(hhid)

->  replace cons_hh_nom=tmp if _fillin
{txt}(145325 real changes made)

{res}->  drop tmp
{txt}
{com}.                                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;
>                                 */
> 
> **************************************************************************;
. * Now calculate the shares, and then the mean shares in each strata, 
> * using hhweight*hhsize weighting. 
> * Note that we are not doing quantity weighting now for the shares.
> **************************************************************************;
.         gen share = valued_tot/cons_hh_nom ;
{txt}
{com}.         gen popwt = hhsize*hhweight;
{txt}
{com}.         lab var share "HH share in total consumption";
{txt}
{com}.         lab var popwt "Population weight: hhsize*hhweight";
{txt}
{com}. **************************************************************************;
. * Select the bottom 50% (weighted) of the distribution of nominal per 
> * capita consumption.
> **************************************************************************;
.         gen cpc=cons_hh_nom/hhsize;
{txt}
{com}.         sum cpc [aw=hhweight] , detail;

                             {txt}cpc
{hline 61}
      Percentiles      Smallest
 1%    {res} 341.2898       78.55931
{txt} 5%    {res} 695.3857       78.55931
{txt}10%    {res} 897.8539       78.55931       {txt}Obs         {res}     210025
{txt}25%    {res} 1376.486       78.55932       {txt}Sum of Wgt. {res}  952113106

{txt}50%    {res} 2259.297                      {txt}Mean          {res} 10464.25
                        {txt}Largest       Std. Dev.     {res} 451461.1
{txt}75%    {res} 4217.707       8.12e+07
{txt}90%    {res} 9842.668       8.12e+07       {txt}Variance      {res} 2.04e+11
{txt}95%    {res} 19766.71       8.12e+07       {txt}Skewness      {res} 177.7597
{txt}99%    {res} 111655.2       8.12e+07       {txt}Kurtosis      {res} 31946.76
{txt}
{com}.         global medcpc=r(p$tpi_bottom);
{txt}
{com}. * MAH ;
.  sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}    210025    2.51e+09    1.13e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}    203250       125.8    15.08071        103        153
{txt}{space 2}valued_tot {c |}{res}    210025    127.1609    389.4357          0      12000
{txt}quantityd_~t {c |}{res}    210025    .9033642    2.185615          0   364.2857
{txt}{space 6}strata {c |}{res}    210025    5.551734    2.873466          1         10
{txt}{hline 13}{c +}{hline 56}
{space 6}hhsize {c |}{res}    210025        4.96    2.758373          1         24
{txt}{space 4}hhweight {c |}{res}    210025    4533.332    4303.934         54      92511
{txt}{space 4}survquar {c |}{res}    210025    2.499336    1.143942          1          4
{txt}{space 5}survmon {c |}{res}    203763    6.716111     3.34998          1         12
{txt}{space 7}rural {c |}{res}    210025    .8199262    .3842498          0          1
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}    210025    2.416827    1.118309          1          4
{txt}{space 4}spdomain {c |}{res}     64498    3.192533    1.372672          1          5
{txt}{space 5}reg_tpi {c |}{res}    210025    2.416827    1.118309          1          4
{txt}{space 1}cons_hh_nom {c |}{res}    210025    97487.28     4938143   232.1918   4.06e+08
{txt}{space 5}_fillin {c |}{res}    210025    .6919414     .461692          0          1
{txt}{hline 13}{c +}{hline 56}
{space 7}share {c |}{res}    210025    .0103685     .032847          0   .7534428
{txt}{space 7}popwt {c |}{res}    210025    29614.26    44552.33         62     832599
{txt}{space 9}cpc {c |}{res}    210025    20773.97    987325.8   78.55931   8.12e+07
{txt}
{com}.  codebook hhid;

{txt}{hline}
{res}hhid{right:Household Code}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6775{col 51}{txt}missing .:  {res}0{txt}/{res}210025

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}.         keep if cpc<=$medcpc;
{txt}(110577 observations deleted)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     99448    2.81e+09    9.50e+08   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     96240       125.8    15.08075        103        153
{txt}{space 2}valued_tot {c |}{res}     99448    96.24925    315.9299          0       9000
{txt}quantityd_~t {c |}{res}     99448    .9090605    2.100712          0        362
{txt}{space 6}strata {c |}{res}     99448    6.332606    2.333367          1         10
{txt}{hline 13}{c +}{hline 56}
{space 6}hhsize {c |}{res}     99448    5.628741    2.566755          1         24
{txt}{space 4}hhweight {c |}{res}     99448    4789.738    4259.467        100      60164
{txt}{space 4}survquar {c |}{res}     99448    2.546135    1.163023          1          4
{txt}{space 5}survmon {c |}{res}     97743    6.831272    3.451656          1         12
{txt}{space 7}rural {c |}{res}     99448    .9466958    .2246406          0          1
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}     99448    2.703865    .9462982          1          4
{txt}{space 4}spdomain {c |}{res}     26606    3.523942    1.209066          1          5
{txt}{space 5}reg_tpi {c |}{res}     99448    2.703865    .9462982          1          4
{txt}{space 1}cons_hh_nom {c |}{res}     99448    7198.385     4750.92   232.1918   53180.82
{txt}{space 5}_fillin {c |}{res}     99448    .7319101    .4429669          0          1
{txt}{hline 13}{c +}{hline 56}
{space 7}share {c |}{res}     99448    .0133103    .0409993          0   .7534428
{txt}{space 7}popwt {c |}{res}     99448    33070.38    43850.92        100     782132
{txt}{space 9}cpc {c |}{res}     99448    1292.952    550.5045   78.55931   2259.297
{txt}
{com}.                 collapse (mean) share (median) medshare=share [aw=popwt] , 
>                         by(reg_tpi product);
{txt}
{com}.                 egen sumsh=sum(share) , by(reg_tpi);
{txt}
{com}.                 replace share=share/sumsh;
{txt}(120 real changes made)

{com}.                 drop sumsh;
{txt}
{com}.                 egen sumsh=sum(medshare) , by(reg_tpi);
{txt}
{com}.                 replace medshare=medshare/sumsh;
{txt}(28 real changes made)

{com}.                 drop sumsh;
{txt}
{com}.                 lab var share "Reg 6: Mean HH share of total consumption";
{txt}
{com}.                 lab var medshare "Reg 6: Median HH share of total consumption";
{txt}
{com}.                 sort reg_tpi product;
{txt}
{com}.                 save "$path/work/tpi_reg_tpi_share.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/tpi_reg_tpi_share.dta saved

{com}.                 tempfile tempwt6;
{txt}
{com}.                 save `tempwt6', replace;
{txt}(note: file /tmp/St08757.00000g not found)
file /tmp/St08757.00000g saved

{com}. use `uvq', clear;
{txt}
{com}.         sort reg_tpi product;
{txt}
{com}. save , replace;
{txt}file /tmp/St08757.00000c saved

{com}. use `tempwt6';
{txt}
{com}.         merge reg_tpi product using `uvq';
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
product
do not uniquely identify observations in
/tmp/St08757.00000c
{p_end}
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}          4        0.84        0.84
{txt}          3 {c |}{res}        471       99.16      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        475      100.00
{txt}
{com}.         gen tpi1     =ppkg     *share;
{txt}(4 missing values generated)

{com}.         gen tpi1_trim=ppkg_trim*share;
{txt}(5 missing values generated)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}product {c |}{res}       471    125.6603    15.04204        103        153
{txt}{space 5}reg_tpi {c |}{res}       475    2.505263    1.112583          1          4
{txt}{space 7}share {c |}{res}       475    .0335842    .0367138          0   .1819817
{txt}{space 4}medshare {c |}{res}       475    .0336842    .0913578          0   .5798738
{txt}{space 4}survquar {c |}{res}       471    2.501062    1.123965          1          4
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}       471    2.505308    1.112537          1          4
{txt}{space 2}valued_tot {c |}{res}       471    21193.69    27475.86   28.57143   199196.3
{txt}quantityd_~t {c |}{res}       471    54.68244    140.8014   .0357143   1910.384
{txt}{space 8}ppkg {c |}{res}       471    1127.104    1007.942   59.80142   6462.813
{txt}{space 3}ppkg_trim {c |}{res}       470    1053.438    1001.878   55.62598   5806.243
{txt}{hline 13}{c +}{hline 56}
{space 6}_merge {c |}{res}       475    2.983158    .1829509          1          3
{txt}{space 8}tpi1 {c |}{res}       471    34.50446    46.32655   .2712167   247.7789
{txt}{space 3}tpi1_trim {c |}{res}       470    32.84739    46.08033    .350742   268.3489
{txt}
{com}. keep if survquar!=.;
{txt}(4 observations deleted)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}product {c |}{res}       471    125.6603    15.04204        103        153
{txt}{space 5}reg_tpi {c |}{res}       471    2.505308    1.112537          1          4
{txt}{space 7}share {c |}{res}       471    .0338694    .0367382   .0002537   .1819817
{txt}{space 4}medshare {c |}{res}       471    .0339703    .0916926          0   .5798738
{txt}{space 4}survquar {c |}{res}       471    2.501062    1.123965          1          4
{txt}{hline 13}{c +}{hline 56}
{space 8}news {c |}{res}       471    2.505308    1.112537          1          4
{txt}{space 2}valued_tot {c |}{res}       471    21193.69    27475.86   28.57143   199196.3
{txt}quantityd_~t {c |}{res}       471    54.68244    140.8014   .0357143   1910.384
{txt}{space 8}ppkg {c |}{res}       471    1127.104    1007.942   59.80142   6462.813
{txt}{space 3}ppkg_trim {c |}{res}       470    1053.438    1001.878   55.62598   5806.243
{txt}{hline 13}{c +}{hline 56}
{space 6}_merge {c |}{res}       471           3           0          3          3
{txt}{space 8}tpi1 {c |}{res}       471    34.50446    46.32655   .2712167   247.7789
{txt}{space 3}tpi1_trim {c |}{res}       470    32.84739    46.08033    .350742   268.3489
{txt}
{com}. list in  1/3;

     {txt}{c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 12}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
  1. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}   survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    103 {txt}{c |} {res}central {txt}{c |} {res}.0509605 {txt}{c |} {res}       0 {txt}{c |} {res}May-Jul 09 {txt}{c |} {res}   1 {txt}{c |} {res}22568.77 {txt}{c |} {res}73.73573 {txt}{c |} {res}306.0764 {txt}{c |} {res} 294.456 {txt}{c |} {res}     3 {txt}{c |} {res}15.59781 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 12}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                          tpi1_t~m                                                           {c |}
     {c |}                                                          {res}15.00562                                                           {txt}{c |}
     {c BLC}{hline 125}{c BRC}

     {c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 12}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
  2. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}   survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    104 {txt}{c |} {res}central {txt}{c |} {res}.0534631 {txt}{c |} {res}       0 {txt}{c |} {res}May-Jul 09 {txt}{c |} {res}   1 {txt}{c |} {res}31972.39 {txt}{c |} {res}51.59874 {txt}{c |} {res} 619.635 {txt}{c |} {res}592.1246 {txt}{c |} {res}     3 {txt}{c |} {res}33.12761 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 12}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                          tpi1_t~m                                                           {c |}
     {c |}                                                          {res}31.65682                                                           {txt}{c |}
     {c BLC}{hline 125}{c BRC}

     {c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 12}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
  3. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}   survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    105 {txt}{c |} {res}central {txt}{c |} {res}.1667069 {txt}{c |} {res}.3076816 {txt}{c |} {res}May-Jul 09 {txt}{c |} {res}   1 {txt}{c |} {res}51399.64 {txt}{c |} {res}228.2883 {txt}{c |} {res}225.1523 {txt}{c |} {res}231.2755 {txt}{c |} {res}     3 {txt}{c |} {res}37.53444 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 12}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                          tpi1_t~m                                                           {c |}
     {c |}                                                          {res}38.55523                                                           {txt}{c |}
     {c BLC}{hline 125}{c BRC}

{com}. list in -3/-1;

     {txt}{c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 13}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
469. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}    survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    153 {txt}{c |} {res}western {txt}{c |} {res}.0100717 {txt}{c |} {res}       0 {txt}{c |} {res}Sept-Oct 09 {txt}{c |} {res}   4 {txt}{c |} {res}5314.159 {txt}{c |} {res}5.482946 {txt}{c |} {res} 969.216 {txt}{c |} {res} 750.249 {txt}{c |} {res}     3 {txt}{c |} {res}9.761698 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 13}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                           tpi1_t~m                                                           {c |}
     {c |}                                                           {res}7.556318                                                           {txt}{c |}
     {c BLC}{hline 126}{c BRC}

     {c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 13}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
470. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}    survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    153 {txt}{c |} {res}western {txt}{c |} {res}.0100717 {txt}{c |} {res}       0 {txt}{c |} {res}Nov09-Jan10 {txt}{c |} {res}   4 {txt}{c |} {res}7463.587 {txt}{c |} {res}5.877618 {txt}{c |} {res}1269.832 {txt}{c |} {res}1147.771 {txt}{c |} {res}     3 {txt}{c |} {res}12.78943 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 13}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                           tpi1_t~m                                                           {c |}
     {c |}                                                           {res}11.56006                                                           {txt}{c |}
     {c BLC}{hline 126}{c BRC}

     {c TLC}{hline 9}{c TT}{hline 9}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 13}{c TT}{hline 6}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 10}{c TT}{hline 8}{c TT}{hline 10}{c TRC}
471. {c |} product {c |} reg_tpi {c |}    share {c |} medshare {c |}    survquar {c |} news {c |} valued~t {c |} quanti~t {c |}     ppkg {c |} ppkg_t~m {c |} _merge {c |}     tpi1 {c |}
     {c |} {res}    153 {txt}{c |} {res}western {txt}{c |} {res}.0100717 {txt}{c |} {res}       0 {txt}{c |} {res} Feb-Apr 10 {txt}{c |} {res}   4 {txt}{c |} {res}4601.457 {txt}{c |} {res} 3.04152 {txt}{c |} {res}1512.881 {txt}{c |} {res} 1228.96 {txt}{c |} {res}     3 {txt}{c |} {res}15.23735 {txt}{c |}
     {c LT}{hline 9}{c BT}{hline 9}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 13}{c BT}{hline 6}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 10}{c BT}{hline 8}{c BT}{hline 10}{c RT}
     {c |}                                                           tpi1_t~m                                                           {c |}
     {c |}                                                           {res}12.37777                                                           {txt}{c |}
     {c BLC}{hline 126}{c BRC}

{com}.         **************************************************************************;
. * Find TPI level and indexes for non-trimmed and trimmed prices
> **************************************************************************;
. * Not trimmed ;
.         collapse (sum) tpi1 tpi1_trim  , by(reg_tpi survquar);
{txt}
{com}.                 for num 1/$n_tpi :
>                         sum tpi1 if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1 if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

{res}->  sum tpi1 if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1 if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1 if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1 if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)
{txt}
{com}.                 lab var tpi1 "Temporal price index before normalization";
{txt}
{com}.                                 foreach v of numlist 1/$n_tpi {c -(} ;
{txt}  2{com}.                                         if `v'==1 {c -(} ;
{txt}  3{com}.                                                 gen tpi=tpi1/${c -(}base`v'{c )-} if reg_tpi==`v' ;
{txt}  4{com}.                                         {c )-} ;
{txt}  5{com}.                                         if `v'>1 {c -(} ;
{txt}  6{com}.                                                 replace tpi=tpi1/${c -(}base`v'{c )-} if reg_tpi==`v' ;
{txt}  7{com}.                                         {c )-} ;
{txt}  8{com}.                                 {c )-} ;
{txt}(12 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)

{com}.                                                                                                 *gen     tpi=tpi1/$base1 if reg_tpi==1;
.                 *replace tpi=tpi1/$base2 if reg_tpi==2;
.                 *replace tpi=tpi1/$base3 if reg_tpi==3;
.                 *replace tpi=tpi1/$base4 if reg_tpi==4;
.                 *replace tpi=tpi1/$base5 if reg_tpi==5;
.                 *replace tpi=tpi1/$base6 if reg_tpi==6;
.                                                                                 lab var tpi "Temporal price index (Q4=1)";
{txt}
{com}. * Trimmed ;
.                 for num 1/$n_tpi :
>                         sum tpi1_trim if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1_trim if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

{res}->  sum tpi1_trim if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1_trim if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1_trim if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1_trim if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)
{txt}
{com}.                 lab var tpi1_trim "Six regions: TRIMMED Temporal price index before normalization";
{txt}
{com}.                                 foreach v of numlist 1/$n_tpi {c -(} ;
{txt}  2{com}.                                         if `v'==1 {c -(} ;
{txt}  3{com}.                                                 gen tpi_trim=tpi1_trim/${c -(}base`v'{c )-} if reg_tpi==`v' ;
{txt}  4{com}.                                         {c )-} ;
{txt}  5{com}.                                         if `v'>1 {c -(} ;
{txt}  6{com}.                                                 replace tpi_trim=tpi1_trim/${c -(}base`v'{c )-} if reg_tpi==`v' ;
{txt}  7{com}.                                         {c )-} ;
{txt}  8{com}.                                 {c )-} ;
{txt}(12 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)

{com}.                                                 lab var tpi_trim "TRIMMED Temporal price index (Q4=1)";
{txt}
{com}.                 sort reg_tpi survquar;
{txt}
{com}.             drop if reg_tpi<1 | reg_tpi>$n_tpi;
{txt}(0 observations deleted)

{com}. gen tpi_diff = tpi - tpi_trim;
{txt}
{com}. lab var tpi_diff "TPI difference btw trimmed/untrimmed";
{txt}
{com}. twoway (connected tpi_trim survquar),yline(1) by(, title("TPI: Trimmed"))
> by(reg_tpi) sav("$path/work/reg_tpi-tpi_trim", replace);
{res}{txt}(file /home/bjvca/data/data/GAP/Haruna/work/reg_tpi-tpi_trim.gph saved)

{com}. graph export "$path/work/reg_tpi-tpi_trim.tif", replace;
{txt}(file /home/bjvca/data/data/GAP/Haruna/work/reg_tpi-tpi_trim.tif written in TIFF format)

{com}. list reg_tpi survquar tpi tpi_trim tpi_diff;
{txt}
     {c TLC}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c TRC}
     {c |} {res} reg_tpi      survquar        tpi   tpi_trim    tpi_diff {txt}{c |}
     {c LT}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c RT}
  1. {c |} {res} central    May-Jul 09   .9610949   1.046651   -.0855564 {txt}{c |}
  2. {c |} {res} central   Sept-Oct 09   1.117613    1.10406    .0135525 {txt}{c |}
  3. {c |} {res} central   Nov09-Jan10   1.034917   1.067385   -.0324682 {txt}{c |}
  4. {c |} {res} central    Feb-Apr 10          1          1           0 {txt}{c |}
  5. {c |} {res} eastern    May-Jul 09   .9949143   .9680884    .0268258 {txt}{c |}
     {c LT}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c RT}
  6. {c |} {res} eastern   Sept-Oct 09   1.025408   .9960075    .0294009 {txt}{c |}
  7. {c |} {res} eastern   Nov09-Jan10   1.026251   1.000233    .0260181 {txt}{c |}
  8. {c |} {res} eastern    Feb-Apr 10          1          1           0 {txt}{c |}
  9. {c |} {res}northern    May-Jul 09   1.105406   1.093589    .0118167 {txt}{c |}
 10. {c |} {res}northern   Sept-Oct 09   1.063388   1.007026    .0563623 {txt}{c |}
     {c LT}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c RT}
 11. {c |} {res}northern   Nov09-Jan10   1.012043   .9794412    .0326017 {txt}{c |}
 12. {c |} {res}northern    Feb-Apr 10          1          1           0 {txt}{c |}
 13. {c |} {res} western    May-Jul 09   .8150058   .8786221   -.0636163 {txt}{c |}
 14. {c |} {res} western   Sept-Oct 09   .9502742    .913422    .0368521 {txt}{c |}
 15. {c |} {res} western   Nov09-Jan10   .9036754   .9031824     .000493 {txt}{c |}
     {c LT}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c RT}
 16. {c |} {res} western    Feb-Apr 10          1          1           0 {txt}{c |}
     {c BLC}{hline 10}{c -}{hline 13}{c -}{hline 10}{c -}{hline 10}{c -}{hline 11}{c BRC}

{com}.                 sort reg_tpi survquar;
{txt}
{com}. keep reg_tpi survquar tpi_trim;
{txt}
{com}. save "$path/work/temp_index_reg_tpi.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/temp_index_reg_tpi.dta saved

{com}.                        **************************************************************************
> * 090_temp_index.do     (end)
> **************************************************************************;
. cap log close;
{txt}
{com}. 
{txt}end of do-file

{com}. 
. do "$path/new/100_food_basket_flex.do"/* Flexible food basket */
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/100_food_basket_flex.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/100_food_basket_flex.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:46
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 100_food_basket_flex.do     (start)
> *
> * This file is to get the data from the cons_cod.dta in work and then 
> * to create the do file with the 90% of the consumption expenditures 
> * using a flexible basket of goods.
> *
> * NOTE: we actually keep goods representing 95% of expenditure
> * in order to facilitate dropping of some goods (such as rats) where
> * quantity and nutrition information is unknown.
> *
> * We base our basket on the bottom 60 percent of consumption per capita
> * (weighted by hhweight*hhsize). We use the TEMPORALLY-ADJUSTED
> * NOMINAL consumption because we don't have a spatial adjustment yet.
> *
> * (Then we iterate this process to arrive at a final food bundle in later code)
> **************************************************************************;
. *CA modified to bring in hhdata into bootstrap;
. /*
> This file uses:
>                 work/cons_cod.dta
>                 work/hhdata.dta
>                 work/products.dta
>                 work/consump_nom.dta
>                 work/temp_index_reg_tpi.dta
>                 work/food_cat.dta
> 
> This file creates:
>                 work/food_basket_flex.dta
>                 work/codes_food_basket_flex.dta
> */
> 
> 
> 
> *do "$path/new/010_initial.do";
. **************************************************************************;
. * First, make a small temp file that has the temporally adjusted 
> * nominal consumption per capita, using work/consump_nom and 
> * work/temp_index_reg_tpi.dta. Make a dummy variable indicating
> * whether they are in the bottom 60%.
> **************************************************************************;
. use "$path/work/conpc.dta", clear;
{txt}
{com}. *use "$path/work/consump_nom.dta", clear;
. *CA modified to merge in work/hhdata.dta for bootstrap;
.         sort hhid;
{txt}
{com}.         merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.         tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _m;
{txt}
{com}.         keep hhid hhweight hhsize cons_pc_nom reg_tpi rural survquar;
{txt}
{com}.         sort reg_tpi survquar;
{txt}
{com}.         cap drop _merge;
{txt}
{com}.         merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         sort hhid;
{txt}
{com}.         merge hhid using "$path/work/conpc.dta";
{txt}
{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.                 gen food_pc_tpi  = food_pc_nom /tpi_trim;
{txt}
{com}.         lab var food_pc_tpi "Temp-adjusted per capita food consumption/day";
{txt}
{com}.         gen cons_pc_tpi = food_pc_tpi + nf_pc_nom;
{txt}
{com}.         lab var cons_pc_tpi "Temp adjusted total consumption/day";
{txt}
{com}.         gen one=1;
{txt}
{com}.         tempfile contpi;
{txt}
{com}.         save `contpi', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}.         collapse (p$bottom) one cons_pc_tpi [aw=hhsize*hhweight] ;
{txt}
{com}.         rename cons_pc_tpi pctile_60;
{txt}
{com}.         tempfile 60pct;
{txt}
{com}.         sort one;
{txt}
{com}.         save `60pct', replace;
{txt}(note: file /tmp/St08757.000002 not found)
file /tmp/St08757.000002 saved

{com}.                 use `contpi';
{txt}
{com}.                 sort one;
{txt}
{com}.                 merge one using `60pct';
{txt}{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

{com}.                 tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                 drop _merge;
{txt}
{com}.                 drop one;
{txt}
{com}.                         gen bottom_basket=cons_pc_tpi< pctile_60;
{txt}
{com}.                 tab bottom_basket [aw=hhsize*hhweight];

{txt}bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,389.0032       50.02       50.02
{txt}          1 {c |}{res} 3,385.9968       49.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                 lab var bottom_basket "=1 if in bottom 60% of PCE";
{txt}
{com}.                                 sort hhid;
{txt}
{com}. save `contpi' , replace;
{txt}file /tmp/St08757.000001 saved

{com}. **************************************************************************;
. * Next, need to keep only the food products in order to calculate the 
> * food poverty line, and then calculate the food expenses by code.
> **************************************************************************;
. use "$path/work/cons_cod.dta";
{txt}
{com}. /*
>         sort product;
>         merge product using "$path/work/food_cat.dta";
>         tab _merge;
>         keep if _merge==3;
>         drop _merge;
> */
>         
>         keep if food_cat;
{txt}(0 observations deleted)

{com}.         codebook hhid;

{txt}{hline}
{res}hhid{right:Household Code}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6775{col 51}{txt}missing .:  {res}0{txt}/{res}412045

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}.         sort hhid;
{txt}
{com}. **************************************************************************;
. * Next, merge in the consumption information, and select those in bottom
> * 60% of nominal distribution, after making temporal adjustment. 
> **************************************************************************;
.         merge hhid using `contpi';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}
{com}.         keep if _merge==3;
{txt}(0 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         keep if bottom_basket==1;
{txt}(239752 observations deleted)

{com}.      **************************************************************************;
. * Calculate food shares. Since we're only doing shares here, we can
> * work with the expenditures without doing temporal adjustment.
> **************************************************************************;
.           gen  food_expenditure= cod_hh_nom3;
{txt}(138314 missing values generated)

{com}.                             *gen  food_expenditure= own_valued + daily_valued + monthly_valued + educ_valued;
.           egen tot_food_expen= sum (food_expen), by (hhid) ;
{txt}
{com}.           count if food_expenditure==.;
{res}138314
{txt}
{com}.           count if tot_food_expen==.;
{res}    0
{txt}
{com}.                     gen food_share= food_expenditure/tot_food_expen;
{txt}(138407 missing values generated)

{com}.           count if food_share==.;
{res}138407
{txt}
{com}.           drop if food_share==.;
{txt}(138407 observations deleted)

{com}.           sort hhid product;
{txt}
{com}.                         tempfile food_basket_flex;
{txt}
{com}. save `food_basket_flex', replace;
{txt}(note: file /tmp/St08757.000003 not found)
file /tmp/St08757.000003 saved

{com}. ********************************************************************************;
. * Now prepare to get the variable spdomain to the using dataset, and then find the 
> * total shares by each product in order to select the most important goods in the 
> * basket.
> ********************************************************************************;
.                 preserve;
{txt}
{com}.                 use "$path/work/hhdata.dta", clear;
{txt}
{com}.                         keep hhid spdomain;
{txt}
{com}.                         sort hhid;
{txt}
{com}.                         tempfile spdomain;
{txt}
{com}.                 save `spdomain' , replace;
{txt}(note: file /tmp/St08757.000005 not found)
file /tmp/St08757.000005 saved

{com}.                 restore;
{txt}
{com}.                            collapse (mean) hhweight, by (hhid);
{txt}
{com}.            sort hhid ;
{txt}
{com}.             merge hhid using `spdomain';
{txt}
{com}.            tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}      3,743       55.25       55.25
{txt}          3 {c |}{res}      3,032       44.75      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.            drop if _m==2;
{txt}(3743 observations deleted)

{com}.            drop _merge;
{txt}
{com}.             collapse (sum) hhweight , by(spdomain);
{txt}
{com}.            rename hhweight tothhweight;
{txt}
{com}.            tempfile tothhweight;
{txt}
{com}. save `tothhweight';
{txt}file /tmp/St08757.000006 saved

{com}. use `food_basket_flex';
{txt}
{com}.           sort hhid;
{txt}
{com}.           merge hhid using `spdomain';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.           tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}      3,743        9.95        9.95
{txt}          3 {c |}{res}     33,886       90.05      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     37,629      100.00
{txt}
{com}.           sort _m;
{txt}
{com}.           drop if _m==2;
{txt}(3743 observations deleted)

{com}.           drop _m;
{txt}
{com}.           sort spdomain;
{txt}
{com}.             merge spdomain using `tothhweight';
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

{com}.           tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     33,886      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     33,886      100.00
{txt}
{com}.           drop _merge;
{txt}
{com}.             sort spdomain product;
{txt}
{com}.             gen f_share_w=(food_share*hhweight)/tothhweight;
{txt}
{com}.                                                 *drop descript;
.                         *gen descript = 0;
.             collapse (sum) f_share_w, by(spdomain product descript);
{txt}
{com}.                      sort spdomain f_share_w;
{txt}
{com}.           by spdomain: gen cumshr= sum(f_share_w);
{txt}
{com}.                     count if cumshr<=.075;
{res}  147
{txt}
{com}.           drop if cumshr<=.075;
{txt}(147 observations deleted)

{com}.             lab var f_share_w "average food share for the 13 regions";
{txt}
{com}. save "$path/work/food_basket_flex.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/food_basket_flex.dta saved

{com}. * List first spatial region to get an idea about contents;
. list product spdomain f_share_w cumshr if spdomain==1;
{txt}
     {c TLC}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}product        spdomain   f_shar~w     cumshr {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
  1. {c |} {res}    121   Central rural   .0060495   .0769353 {txt}{c |}
  2. {c |} {res}    161   Central rural    .006548   .0834833 {txt}{c |}
  3. {c |} {res}    118   Central rural   .0074476   .0909309 {txt}{c |}
  4. {c |} {res}    153   Central rural    .007626   .0985568 {txt}{c |}
  5. {c |} {res}    110   Central rural   .0076997   .1062565 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
  6. {c |} {res}    101   Central rural    .007712   .1139685 {txt}{c |}
  7. {c |} {res}    139   Central rural   .0080001   .1219687 {txt}{c |}
  8. {c |} {res}    132   Central rural   .0098923    .131861 {txt}{c |}
  9. {c |} {res}    135   Central rural    .010128   .1419889 {txt}{c |}
 10. {c |} {res}    102   Central rural   .0106084   .1525973 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
 11. {c |} {res}    150   Central rural   .0113215   .1639188 {txt}{c |}
 12. {c |} {res}    157   Central rural   .0118126   .1757314 {txt}{c |}
 13. {c |} {res}    122   Central rural   .0133725   .1891038 {txt}{c |}
 14. {c |} {res}    134   Central rural   .0159897   .2050935 {txt}{c |}
 15. {c |} {res}    127   Central rural   .0177276   .2228211 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
 16. {c |} {res}    123   Central rural   .0188926   .2417137 {txt}{c |}
 17. {c |} {res}    144   Central rural   .0190514    .260765 {txt}{c |}
 18. {c |} {res}    136   Central rural   .0203985   .2811636 {txt}{c |}
 19. {c |} {res}    125   Central rural   .0212192   .3023828 {txt}{c |}
 20. {c |} {res}    108   Central rural   .0228924   .3252752 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
 21. {c |} {res}    117   Central rural   .0238915   .3491666 {txt}{c |}
 22. {c |} {res}    138   Central rural   .0249537   .3741204 {txt}{c |}
 23. {c |} {res}    140   Central rural   .0251346    .399255 {txt}{c |}
 24. {c |} {res}    112   Central rural   .0291353   .4283902 {txt}{c |}
 25. {c |} {res}    147   Central rural   .0475669   .4759572 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
 26. {c |} {res}    103   Central rural    .051256   .5272132 {txt}{c |}
 27. {c |} {res}    104   Central rural   .0526724   .5798857 {txt}{c |}
 28. {c |} {res}    141   Central rural   .0697135   .6495991 {txt}{c |}
 29. {c |} {res}    107   Central rural    .075817   .7254161 {txt}{c |}
 30. {c |} {res}    113   Central rural   .1309045   .8563206 {txt}{c |}
     {c LT}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c RT}
 31. {c |} {res}    105   Central rural   .1436794          1 {txt}{c |}
     {c BLC}{hline 9}{c -}{hline 15}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}.                     gen numreg=1;
{txt}
{com}.           collapse (sum) numreg cumshr, by (product descript);
{txt}
{com}.                           keep product descript numreg;
{txt}
{com}.           display _N;
{res}46
{txt}
{com}.                     lab var numreg "number of goods in the basket";
{txt}
{com}. /*
>           merge product using "$path/work/products.dta";
>             tab _merge;
>           keep if _merge==3;
> */
>           keep product descript numreg;
{txt}
{com}.             sort product;
{txt}
{com}.                display _N;
{res}46
{txt}
{com}.   save "$path/work/codes_food_basket_flex.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex.dta saved

{com}. **************************************************************************
> * 100_food_basket_flex.do     (end)
> **************************************************************************;
. cap log close;
{txt}
{com}. 
{txt}end of do-file

{com}. do "$path/new/110_price_unit_flex.do"/* Flexible basket: Prices */
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/110_price_unit_flex.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/110_price_unit_flex.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:47
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. ****************************************************************************************
> * 110_price_unit_flex.do                (start)
> *
> * Purpose: This do file creates a price_unit_flex database with the unit prices of the
> * goods of the flexible food basket in order to determine the poverty lines per spatial
> * domain. It uses the files work/daily.dta and work/own.dta file and draw unit prices
> * by: sum of values and quantity
> ****************************************************************************************;
. *CA modified to bring in work/hhdata.dta for bootstrap
> *CA check for price calcs conditional on number of observations;
. /*
> This file uses:
>         work/daily.dta
>         work/own.dta
>         work/hhdata.dta
>         work/consump_nom.dta
>         work/codes_food_basket_flex.dta
>         work/temp_index_reg_tpi.dta
>           new/conversions.do
> 
> This file creates:
>         work/price_unit_flex.dta
>         work/bottom_basket.dta
> */
> 
> 
> 
> 
> *do "$path/new/010_initial.do";
. **************************************************************************************
> * Create sorted data set with daily and own and the matched codes
> **************************************************************************************;
. use "$path/work/cons_cod_trans.dta", clear;
{txt}
{com}. *use "$path/in/cons_cod_trans.dta", clear;
. *save "$path/work/cons_cod_trans.dta", replace;
. *drop if quantityd==0 ;
. keep hhid product food_cat valuez quantityz unit;
{txt}
{com}. rename valuez    value;
{txt}
{com}. rename quantityz quantity;
{txt}
{com}. drop if quantity==0 ;
{txt}(4392 observations deleted)

{com}. *drop count;
.         sort product;
{txt}
{com}.         gen count=1;
{txt}
{com}.                 tempfile dd_acsort;
{txt}
{com}. save `dd_acsort', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}. /*
> use "$path/work/daily.dta";
> tempfile dd_acsort;
>         drop days;
>         sort product;
>         tempfile dd_acsort;
> save `dd_acsort', replace;
> 
> use "$path/work/own.dta";
>         keep hhid product valued quantityd unit;
>         rename valued value;
>         rename quantityd quantity;
> 
>         *CHECK THE ZEROS IN quantity FOR NOW DELETE;
>         drop if quantity==0;
> 
>         append using `dd_acsort';
> 
> *CA modified to merge in work/hhdata.dta for bootstrap;
>         sort hhid;
>       merge hhid using "$path/work/hhdata.dta";
>       tab _m;
> 
> * Drop observations if non existent in HH data set;
> drop if _m!=3;
> drop _m;
> 
> 
>         sort product;
>         gen count=1;
> 
> 
> save `dd_acsort', replace;
> */
> 
> 
> **************************************************************************************;
. * Merge the flexible food basket codes with the daily and own data sets
> * Drop all codes not a part of the flexible food basket
> **************************************************************************************;
.         merge product using "$path/work/codes_food_basket_flex.dta";
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}     10,257       12.04       12.04
{txt}          3 {c |}{res}     74,947       87.96      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}
{com}.         drop if _merge~=3;
{txt}(10257 observations deleted)

{com}.         drop _merge;
{txt}
{com}. **************************************************************************************;
. * Drop observations where product code or quantity or value information is unavailable
> **************************************************************************************;
.                                 codebook hhid;

{txt}{hline}
{res}hhid{right:household id}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6749{col 51}{txt}missing .:  {res}0{txt}/{res}74947

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. *        drop if product==. | value==. | quantity==.  ;
.                                 codebook hhid;

{txt}{hline}
{res}hhid{right:household id}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6749{col 51}{txt}missing .:  {res}0{txt}/{res}74947

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. **************************************************************************************;
. * Convert non-KG quantities (units and liters) to kilograms;
. **************************************************************************************;
. *do "$path/new/110a_conversions.do"
> 
> ********************************************************************
> * There remain a few difficult to interpret observations such as liters
> * of fish and liters of pasta. These are dropped
> ********************************************************************;
. *        drop if unit~=2;
. ********************************************************************
> * Merge in labels for the 13 spatial domains
> ********************************************************************;
.         preserve;
{txt}
{com}.                 use "$path/work/hhdata.dta", clear;
{txt}
{com}.                                                                         keep hhid spdomain reg_tpi survquar;
{txt}
{com}.                         sort hhid;
{txt}
{com}.                         tempfile spdomainreg_tpi;
{txt}
{com}.                 save `spdomainreg_tpi', replace;
{txt}(note: file /tmp/St08757.000003 not found)
file /tmp/St08757.000003 saved

{com}.                                 codebook hhid;

{txt}{hline}
{res}hhid{right:Household ID}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6775{col 51}{txt}missing .:  {res}0{txt}/{res}6775

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}.         restore;
{txt}
{com}.                 sort hhid;
{txt}
{com}.         merge hhid using `spdomainreg_tpi';
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         26        0.03        0.03
{txt}          3 {c |}{res}     74,947       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     74,973      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         drop if product==.;
{txt}(26 observations deleted)

{com}. codebook hhid;

{txt}{hline}
{res}hhid{right:household id}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6749{col 51}{txt}missing .:  {res}0{txt}/{res}74947

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. tab spd;

     {txt}spdomain {c |}      Freq.     Percent        Cum.
{hline 14}{c +}{hline 35}
Central rural {c |}{res}     13,071       17.44       17.44
{txt}Central urban {c |}{res}      9,948       13.27       30.71
{txt}      Eastern {c |}{res}     16,789       22.40       53.11
{txt}     Northern {c |}{res}     19,525       26.05       79.17
{txt}      Western {c |}{res}     15,614       20.83      100.00
{txt}{hline 14}{c +}{hline 35}
        Total {c |}{res}     74,947      100.00
{txt}
{com}. sum if spd>=3;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     51928    3.08e+09    7.88e+08   2.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     51928    129.9682    15.72746        101        161
{txt}{space 8}unit {c |}{res}     51928           1           0          1          1
{txt}{space 4}food_cat {c |}{res}     51928           1           0          1          1
{txt}{space 4}quantity {c |}{res}     51928    .9546697      3.8786   .0000286   364.2857
{txt}{hline 13}{c +}{hline 56}
{space 7}value {c |}{res}     51928    408.2792    636.9622          0      18500
{txt}{space 7}count {c |}{res}     51928           1           0          1          1
{txt}{space 4}descript {c |}{res}     51928           1           0          1          1
{txt}{space 6}numreg {c |}{res}     51928    4.064917    1.391233          1          5
{txt}{space 4}survquar {c |}{res}     51928    2.474811    1.138045          1          4
{txt}{hline 13}{c +}{hline 56}
{space 4}spdomain {c |}{res}     51928    3.977373    .7896193          3          5
{txt}{space 5}reg_tpi {c |}{res}     51928    2.977373    .7896193          2          4
{txt}
{com}. table spdomain, content(mean quantity count quantity count hhid) row missing;

{txt}{hline 14}{c TT}{hline 47}
     spdomain {c |} mean(quantity)     N(quantity)         N(hhid)
{hline 14}{c +}{hline 47}
Central rural {c |}       {res}.9857018          13,071          13,071
{txt}Central urban {c |}       {res}.6279621           9,948           9,948
      {txt}Eastern {c |}       {res}.9517529          16,789          16,789
     {txt}Northern {c |}       {res}.8059911          19,525          19,525
      {txt}Western {c |}       {res}1.143726          15,614          15,614
              {txt}{c |} 
        Total {c |}       {res}.9167167          74,947          74,947
{txt}{hline 14}{c BT}{hline 47}

{com}.         drop if product==. | value==. | quantity==.  ;
{txt}(0 observations deleted)

{com}. codebook hhid;

{txt}{hline}
{res}hhid{right:household id}
{txt}{hline}

{col 19}type:  numeric ({res}double{txt})

{col 18}range:  [{res}1.013e+09{txt},{res}4.193e+09{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}6749{col 51}{txt}missing .:  {res}0{txt}/{res}74947

{txt}{col 19}mean:{res}{col 26} 2.5e+09
{txt}{col 15}std. dev:{res}{col 26} 1.1e+09

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} 1.0e+09{col 37} 1.1e+09{col 47} 2.2e+09{col 57} 3.2e+09{col 67} 4.1e+09
{txt}
{com}. tab spd;

     {txt}spdomain {c |}      Freq.     Percent        Cum.
{hline 14}{c +}{hline 35}
Central rural {c |}{res}     13,071       17.44       17.44
{txt}Central urban {c |}{res}      9,948       13.27       30.71
{txt}      Eastern {c |}{res}     16,789       22.40       53.11
{txt}     Northern {c |}{res}     19,525       26.05       79.17
{txt}      Western {c |}{res}     15,614       20.83      100.00
{txt}{hline 14}{c +}{hline 35}
        Total {c |}{res}     74,947      100.00
{txt}
{com}. ********************************************************************
> * Merge in temporal price index to convert nominal value to real
> ********************************************************************;
.         sort reg_tpi survquar;
{txt}
{com}.         merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     74,947      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     74,947      100.00
{txt}
{com}.         drop if _merge ~= 3;
{txt}(0 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         gen value_r=value/tpi_trim;
{txt}
{com}. **************************************************************************;
. * Identify relatively poor households, based on nominal temporally adjusted
> * consumption per capita. Only work with these households for the price
> * calculations.
> **************************************************************************;
.                 preserve;
{txt}
{com}.                         use "$path/work/conpc.dta", clear;
{txt}
{com}. *                       use "$path/work/consump_nom.dta", clear;
. *CA modified to merge in work/hhdata.dta for bootstrap;
.         sort hhid;
{txt}
{com}.       merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.       tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.       drop _m;
{txt}
{com}. *CA modified to keep bswt;
.                                 keep hhid hhweight hhsize cons_pc_nom bswt ;
{txt}
{com}.                                 sort hhid;
{txt}
{com}.                                 merge hhid using `spdomainreg_tpi';
{txt}(label REG_TPI already defined)
(label spdomain_original already defined)
(label lsurvquar already defined)

{com}.                                 tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                                 drop _merge;
{txt}
{com}.                                 sort reg_tpi survquar;
{txt}
{com}.                                 cap drop _merge;
{txt}
{com}.                                 merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.                                 tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                                 drop _merge;
{txt}
{com}.                                 sort hhid;
{txt}
{com}.                                 merge hhid using "$path/work/conpc.dta";
{txt}
{com}.                                 tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                                 drop _merge;
{txt}
{com}.                                 gen food_pc_tpi  = food_pc_nom /tpi_trim;
{txt}
{com}.                                 lab var food_pc_tpi "Temp-adjusted per capita food consumption/day";
{txt}
{com}.                                                                 * Non-food not TPI adjusted ;
.                                 gen cons_pc_tpi = food_pc_tpi + nf_pc_nom;
{txt}
{com}.                                 lab var cons_pc_tpi "Temp adjusted total consumption/day";
{txt}
{com}.                                 gen one=1;
{txt}
{com}.                                 tempfile contpi;
{txt}
{com}.                                 save `contpi', replace;
{txt}(note: file /tmp/St08757.000005 not found)
file /tmp/St08757.000005 saved

{com}.                                 collapse (p$bottom) one cons_pc_tpi [aw=hhsize*hhweight], by(spdomain) ;
{txt}
{com}.                                 rename cons_pc_tpi pctile_60;
{txt}
{com}.                                 tempfile 60pct;
{txt}
{com}.                                 sort spdomain;
{txt}
{com}.                                 save `60pct', replace;
{txt}(note: file /tmp/St08757.000006 not found)
file /tmp/St08757.000006 saved

{com}.                                 use `contpi';
{txt}
{com}.                                         sort spdomain;
{txt}
{com}.                                         merge spdomain using `60pct';
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

{com}.                                         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.                                         drop _merge;
{txt}
{com}.                                         drop one;
{txt}
{com}.                                         sort spdomain;
{txt}
{com}.                                         gen bottom_basket=cons_pc_tpi< pctile_60;
{txt}
{com}.                                         by spdomain: tab bottom_basket [aw=hhsize*hhweight];

{txt}{hline}
-> spdomain = Central rural

bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 589.176912       50.06       50.06
{txt}          1 {c |}{res} 587.823088       49.94      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,177      100.00

{txt}{hline}
-> spdomain = Central urban

bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 406.951036       50.30       50.30
{txt}          1 {c |}{res} 402.048964       49.70      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        809      100.00

{txt}{hline}
-> spdomain = Eastern

bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 703.240117       50.02       50.02
{txt}          1 {c |}{res} 702.759883       49.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,406      100.00

{txt}{hline}
-> spdomain = Northern

bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 978.760844       50.04       50.04
{txt}          1 {c |}{res} 977.239156       49.96      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,956      100.00

{txt}{hline}
-> spdomain = Western

bottom_bask {c |}
         et {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res}715.0311988       50.11       50.11
{txt}          1 {c |}{res}711.9688012       49.89      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,427      100.00

{txt}
{com}.                                         lab var bottom_basket "=1 if in bottom (60%) of PCE";
{txt}
{com}.                                         sort hhid;
{txt}
{com}.                                                                 save "$path/work/bottom_basket.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/bottom_basket.dta saved

{com}.         restore;
{txt}
{com}.         sort hhid;
{txt}
{com}.         merge hhid using "$path/work/bottom_basket.dta";
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         26        0.03        0.03
{txt}          3 {c |}{res}     74,947       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     74,973      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.                         * Only keep price observations for the poor ;
.         keep if bottom_basket==1;
{txt}(45902 observations deleted)

{com}.         **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * for each spdomain & product combination. This should eliminate outliers
> * that may have an undue influence on the price calculation. 
> **************************************************************************;
.                 gen hhppkg=value_r/quantity;
{txt}(14 missing values generated)

{com}.                 egen lower5=pctile(hhppkg), p(5) by(spdomain product);
{txt}(14 missing values generated)

{com}.                 egen upper5=pctile(hhppkg), p(95) by(spdomain product);
{txt}(14 missing values generated)

{com}. sum;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}hhid {c |}{res}     29071    2.44e+09    1.15e+09   1.01e+09   4.19e+09
{txt}{space 5}product {c |}{res}     29057    130.5176    16.07088        101        161
{txt}{space 8}unit {c |}{res}     29057           1           0          1          1
{txt}{space 4}food_cat {c |}{res}     29057           1           0          1          1
{txt}{space 4}quantity {c |}{res}     29057    .8570309    3.462921   .0000429        362
{txt}{hline 13}{c +}{hline 56}
{space 7}value {c |}{res}     29057    351.5211    534.4361          0      10000
{txt}{space 7}count {c |}{res}     29057           1           0          1          1
{txt}{space 4}descript {c |}{res}     29057           1           0          1          1
{txt}{space 6}numreg {c |}{res}     29057    4.110163    1.354909          1          5
{txt}{space 4}survquar {c |}{res}     29071    2.509477    1.165275          1          4
{txt}{hline 13}{c +}{hline 56}
{space 4}spdomain {c |}{res}     29071    3.172681    1.381274          1          5
{txt}{space 5}reg_tpi {c |}{res}     29071    2.346875    1.137897          1          4
{txt}{space 4}tpi_trim {c |}{res}     29071    1.000643    .0596867   .8786221    1.10406
{txt}{space 5}value_r {c |}{res}     29057    352.4999    534.7941          0      10000
{txt}{space 1}cons_pc_nom {c |}{res}     29071    1756.513    1229.111   78.55931   7061.716
{txt}{hline 13}{c +}{hline 56}
{space 6}hhsize {c |}{res}     29071    5.675587    2.610486          1         24
{txt}{space 4}hhweight {c |}{res}     29071    5149.055     4177.34        100      60164
{txt}{space 8}bswt {c |}{res}     29071           1           0          1          1
{txt}{space 1}cons_hh_nom {c |}{res}     29071    9209.621     7254.92   232.1918   99494.44
{txt}{space 1}food_pc_nom {c |}{res}     29071    789.8243    521.1919          0   6142.857
{txt}{hline 13}{c +}{hline 56}
{space 3}nf_pc_nom {c |}{res}     29071    966.6887     878.426   23.11263   6683.425
{txt}{space 1}food_pc_tpi {c |}{res}     29071    785.9901    498.6363          0   5755.051
{txt}{space 1}cons_pc_tpi {c |}{res}     29071    1752.679    1203.454    82.2244   6956.404
{txt}{space 3}pctile_60 {c |}{res}     29071    2792.462    1838.096   1361.078   7042.306
{txt}bottom_bas~t {c |}{res}     29071           1           0          1          1
{txt}{hline 13}{c +}{hline 56}
{space 6}hhppkg {c |}{res}     29057    1484.291    7516.652          0   999766.7
{txt}{space 6}lower5 {c |}{res}     29057    553.0804    591.1659          0    4777.14
{txt}{space 6}upper5 {c |}{res}     29057    2569.181    2090.952          0   12912.04
{txt}
{com}. describe;

{txt}Contains data from {res}/tmp/St08757.000001
{txt}  obs:{res}        29,071                          
{txt} vars:{res}            28                          20 May 2013 21:24
{txt} size:{res}     3,721,088                          
{txt}{hline}
              storage  display     value
variable name   type   format      label      variable label
{hline}
{p 0 48}{res}{bind:hhid           }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}household id{p_end}
{p 0 48}{bind:product        }{txt}{bind: float  }{bind:{txt}%10.0g     }{space 1}{bind:HS10A2   }{bind:  }{res}{res}Food product code: numerical{p_end}
{p 0 48}{bind:unit           }{txt}{bind: float  }{bind:{txt}%10.0g     }{space 1}{bind:         }{bind:  }{res}{res}set equal to one since all observations are converted into kg{p_end}
{p 0 48}{bind:food_cat       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}food category equals 1, if product is food and 0 if non food{p_end}
{p 0 48}{bind:quantity       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}daily quantity consumed in Kgs per household{p_end}
{p 0 48}{bind:value          }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}daily value of consumption in UGX per per household{p_end}
{p 0 48}{bind:count          }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:descript       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:descrip  }{bind:  }{res}{res}product description including product code but equals 2 for all non-foods{p_end}
{p 0 48}{bind:numreg         }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}number of goods in the basket{p_end}
{p 0 48}{bind:survquar       }{txt}{bind: float  }{bind:{txt}%11.0g     }{space 1}{txt}lsurvquar{p_end}
{p 0 48}{space 44}{bind:  }{res}{res}Sequential Survey Quarter May-Jun 09=1){p_end}
{p 0 48}{bind:spdomain       }{txt}{bind: float  }{bind:{txt}%13.0g     }{space 1}{txt}spdomain_original{p_end}
{p 0 48}{space 44}{bind:  }{res}{res}{p_end}
{p 0 48}{bind:reg_tpi        }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:REG_TPI  }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:tpi_trim       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}TRIMMED Temporal price index (Q4=1){p_end}
{p 0 48}{bind:value_r        }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:cons_pc_nom    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:hhsize         }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Household Size{p_end}
{p 0 48}{bind:hhweight       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Household sample weight{p_end}
{p 0 48}{bind:bswt           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:cons_hh_nom    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}(sum) cod_hh_nom{p_end}
{p 0 48}{bind:food_pc_nom    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}nominal food consumption per capita{p_end}
{p 0 48}{bind:nf_pc_nom      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}nominal non-food consumption per capita{p_end}
{p 0 48}{bind:food_pc_tpi    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Temp-adjusted per capita food consumption/day{p_end}
{p 0 48}{bind:cons_pc_tpi    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Temp adjusted total consumption/day{p_end}
{p 0 48}{bind:pctile_60      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}(p 50) cons_pc_tpi{p_end}
{p 0 48}{bind:bottom_basket  }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}=1 if in bottom (60%) of PCE{p_end}
{p 0 48}{bind:hhppkg         }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:lower5         }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:upper5         }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{txt}{hline}
Sorted by:  
{res}     Note:  dataset has changed since last saved
{txt}
{com}. keep if hhppkg-lower5>=0 & hhppkg-upper5<=0;
{txt}(2191 observations deleted)

{com}. *********************************************************************
> * Note that we do prices in three ways. First, by summing quantity and value 
> * This average price price_unitw is thus quantity/value weighted. Second, we
> * calculate the price and take simple means for a transaction weighted
> * price, price_unitt. Last we take the median, price_unitm. But in the end
> * we only use price_unitw
> *********************************************************************;
.         gen price_unitt=value_r/(quantity*1000);
{txt}
{com}.         gen price_unitm=price_unitt;
{txt}
{com}.                 *CA modified to count the boot sample weight bswt;
.         collapse (sum) quantity value_r count bswt 
>                  (mean) price_unitt 
>                  (median) price_unitm [aw=hhweight], by(spdomain product);
{txt}
{com}.         *Generate weighted price per gram ;
.         gen price_unitw=value_r/(quantity*1000);
{txt}
{com}.         drop value_r quantity;
{txt}
{com}.         sort spdomain product;
{txt}
{com}.         lab var price_unitt "simple average of calculated prices - transaction weighted";
{txt}
{com}.         lab var price_unitm "median of prices";
{txt}
{com}.         lab var price_unitw "value share weighted mean prices";
{txt}
{com}. * Get an idea of the difference between the price measures;
.         gen ratiotw=price_unitt/price_unitw;
{txt}(1 missing value generated)

{com}.         gen ratiomw=price_unitm/price_unitw;
{txt}(1 missing value generated)

{com}.         sum ratiotw ratiomw;

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}ratiotw {c |}{res}       228    1.236146    .3923979   .9125085   3.455606
{txt}{space 5}ratiomw {c |}{res}       228    1.092891    .3736973   .2803857   3.641136
{txt}
{com}.         sort product;
{txt}
{com}.         merge product using "$path/work/codes_food_basket_flex.dta";
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        229      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        229      100.00
{txt}
{com}.         count if _merge~=3;
{res}    0
{txt}
{com}.         drop if _merge~=3;
{txt}(0 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         sort product spdomain;
{txt}
{com}. save "$path/work/price_unit_flex.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex.dta saved

{com}. ****************************************************************************************
> * 110_price_unit_flex.do                (end)
> ****************************************************************************************;
. cap log close;
{txt}
{com}. 
{txt}end of do-file

{com}. do "$path/new/120_povline_food_flex_original.do"/* Flexible basket: Poverty line */
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/120_povline_food_flex.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/120_povline_food_flex.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:50
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 120_povline_food_flex.do      (start)
> *
> * Use the file with the food basket (food_basket_flex), which is in shares. 
> * Then merge it with the prices file, and then with the calories file.
> * Along the way, drop those observations where we have no price information
> * or no calorie information.
> **************************************************************************;
. /*
> This file uses:
>         work/food_basket_flex.dta
>         work/price_unit_flex.dta
>         work/calperg.dta
>         work/calpp.dta
> 
> This file creates:
>         work/povline_flex.dta
> */
> 
> 
> * start with the quantity information;
. use "$path/work/food_basket_flex.dta";
{txt}
{com}.         sort product spdomain;
{txt}
{com}.         * merge in price information;
.         merge product spdomain using "$path/work/price_unit_flex.dta";
{txt}(label spdomain_original already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         84       36.68       36.68
{txt}          3 {c |}{res}        145       63.32      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        229      100.00
{txt}
{com}.         list product spdomain descript if _merge==1;
{txt}
{com}.         drop if _merge ~=3;
{txt}(84 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         sort product;
{txt}
{com}.         * merge in information on calories per gram;
.         merge product using "$path/work/calperg.dta";
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         16        9.94        9.94
{txt}          3 {c |}{res}        145       90.06      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        161      100.00
{txt}
{com}.         * This tells where we are lacking calorie info or are lacking quantity info due to 
>         * missing price info above;
.         list product spdomain descript if _merge==1;
{txt}
{com}.         drop if _merge~=3;
{txt}(16 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         sort spdomain f_share_w;
{txt}
{com}.                 * CA modified to handle bootstrap counting;
.         * determine if any quantity has fewer than 10 price observations;
.         by spdomain: count if round(bswt)<10;

{txt}{hline}
-> spdomain = Central rural
{res}    1
{txt}{hline}
-> spdomain = Central urban
{res}    0
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0
{txt}
{com}.         drop if round(bswt) < 10;
{txt}(1 observation deleted)

{com}.         by spdomain: egen baskshr=sum(f_share_w);
{txt}
{com}.         by spdomain: gen cumshr1=sum(f_share_w);
{txt}
{com}.         * bundle was cut at 92.5 percent- cut back to 90 percent if necessary;
.         drop if cumshr1<=baskshr-.9;
{txt}(15 observations deleted)

{com}.         * reobtain the share represented from the average basket- should be slightly more than 90;
.         drop baskshr;
{txt}
{com}.         by spdomain: egen baskshr=sum(f_share_w);
{txt}
{com}.         by spdomain: sum baskshr;

{txt}{hline}
-> spdomain = Central rural

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}baskshr {c |}{res}        27    .9013571           0   .9013571   .9013571

{txt}{hline}
-> spdomain = Central urban

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}baskshr {c |}{res}        20    .9069439           0   .9069439   .9069439

{txt}{hline}
-> spdomain = Eastern

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}baskshr {c |}{res}        27    .9040037           0   .9040037   .9040037

{txt}{hline}
-> spdomain = Northern

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}baskshr {c |}{res}        27    .9056041           0   .9056041   .9056041

{txt}{hline}
-> spdomain = Western

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 5}baskshr {c |}{res}        28    .9068856           0   .9068856   .9068856

{txt}
{com}.         * obtain quantities and calories provided by these quantities;
.         gen quan=f_share_w/price_unitw;
{txt}
{com}.                         /* how many g in 1 MT exp on food item */
>         gen cal_ir=quan*calperg;
{txt}
{com}.                                 /* how many cal in 1 MT exp on food item */
>         by spdomain: egen calreg=sum(cal_ir);
{txt}
{com}.         /* how many cal in 1 MT exp in food basket*/
> 
>         * merge in calorie requirements;
.         sort spdomain;
{txt}
{com}.         merge spdomain using "$path/work/calpp.dta";
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        129      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        129      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         * get the expansion factor to hit 95% of calorie requirements;
.         gen ratio=.95*calpp/calreg;
{txt}
{com}.                         replace quan=quan*ratio;
{txt}(129 real changes made)

{com}.         replace cal_ir=quan*calperg;
{txt}(123 real changes made)

{com}.         * do a consistency check;
.         sort spdomain;
{txt}
{com}.         by spdomain: egen chkcal=sum(cal_ir);
{txt}
{com}.         replace chkcal=chkcal/.95-calpp ;
{txt}(129 real changes made)

{com}.                         * these values should be about zero;
.         by spdomain: sum chkcal;

{txt}{hline}
-> spdomain = Central rural

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}chkcal {c |}{res}        27    .0001156           0   .0001156   .0001156

{txt}{hline}
-> spdomain = Central urban

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}chkcal {c |}{res}        20    .0000257           0   .0000257   .0000257

{txt}{hline}
-> spdomain = Eastern

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}chkcal {c |}{res}        27   -.0000128           0  -.0000128  -.0000128

{txt}{hline}
-> spdomain = Northern

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}chkcal {c |}{res}        27   -.0001156           0  -.0001156  -.0001156

{txt}{hline}
-> spdomain = Western

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}chkcal {c |}{res}        28   -.0000514           0  -.0000514  -.0000514

{txt}
{com}.         * obtain the value of each good in the bundle;
.         gen val_ir=quan*price_unitw;
{txt}
{com}.         * the sum of the value of the goods in the bundle is assumed to represent 90% of expenditure;
.         by spdomain: egen povline_f_flex90=sum(val_ir);
{txt}
{com}.         replace povline_f_flex=povline_f_flex90/.9;
{txt}(129 real changes made)

{com}.         collapse (mean) povline_f_flex, by (spdomain);
{txt}
{com}.                 lab var povline_f_flex "Food poverty line. Flexible basket";
{txt}
{com}.         sort spdomain;
{txt}
{com}.         keep spdomain povline_f_flex;
{txt}
{com}. save "$path/work/povline_food_flex.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex.dta saved

{com}. /*
> * To be used in 140_iterate.do;
> gen cutoff = 1.5 * povline_f_flex;
> keep spdomain cutoff;
> save "$path/work/povlines_first_iterate.dta", replace;
> */
> 
> **************************************************************************
> * 120_povline_food_flex.do      (end)
> **************************************************************************;
. log close;
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/120_povline_food_flex.log
  {txt}log type:  {res}text
 {txt}closed on:  {res}20 May 2013, 21:24:50
{txt}{.-}

{com}. 
{txt}end of do-file

{com}. do "$path/new/130_povmeas_flex.do"
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/130_povmeas_flex.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/130_povmeas_flex.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:24:50
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 130_povmeas_flex.do           (start)
> *
> * Purpose:
> * Initial poverty measures calculation for flexible basket. (Before any iteration)
> **************************************************************************;
. *CA modified to add work/hhdata.dta for bootstrap;
. /*
> This file uses:
>         in/foodshr96.dta
>         work/povline_f_flex.dta
>         work/consump_nom.dta
>         work/hhdata.dta
>         work/temp_index_reg_tpi.dta
> 
> This file creates:
>         work/foodshr96.dta
>         work/povmeas.dta
>         work/povlines.dta
>         work/cons_real.dta
> */
> 
> 
> 
> **************************************************************************;
. * Bring in data file with nominal consumption per capita, and deflate it
> * by temporal price index.
> **************************************************************************;
. use "$path/work/hhdata.dta", clear;
{txt}
{com}.         keep hhid strata reg_tpi spdomain news rural survmon survquar;
{txt}
{com}.         tab reg_tpi, miss;

    {txt}reg_tpi {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
    central {c |}{res}      1,986       29.31       29.31
{txt}    eastern {c |}{res}      1,406       20.75       50.07
{txt}   northern {c |}{res}      1,956       28.87       78.94
{txt}    western {c |}{res}      1,427       21.06      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         tab survquar, miss;

 {txt}Sequential {c |}
     Survey {c |}
    Quarter {c |}
    May-Jun {c |}
      09=1) {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
 May-Jul 09 {c |}{res}      1,749       25.82       25.82
{txt}Sept-Oct 09 {c |}{res}      1,731       25.55       51.37
{txt}Nov09-Jan10 {c |}{res}      1,458       21.52       72.89
{txt} Feb-Apr 10 {c |}{res}      1,837       27.11      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         keep hhid spdomain reg_tpi survquar;
{txt}
{com}.         sort hhid;
{txt}
{com}.         tempfile spdomainreg_tpi;
{txt}
{com}. save `spdomainreg_tpi', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}. use "$path/work/conpc.dta", clear;
{txt}
{com}. *use "$path/work/consump_nom.dta", clear;
. *CA modified to merge in work/hhdata.dta for bootstrap;
.     sort hhid;
{txt}
{com}.     merge hhid using "$path/work/hhdata.dta";
{txt}
{com}.     tab _m;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.     drop _m;
{txt}
{com}.         keep hhid hhweight hhsize cons_pc_nom ;
{txt}
{com}.         sort hhid;
{txt}
{com}.         merge hhid using `spdomainreg_tpi';
{txt}(label REG_TPI already defined)
(label spdomain_original already defined)
(label lsurvquar already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         sort reg_tpi survquar;
{txt}
{com}.         merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         sort hhid;
{txt}
{com}.         merge hhid using "$path/work/conpc.dta";
{txt}
{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         gen food_pc_tpi  = food_pc_nom /tpi_trim;
{txt}
{com}.         lab var food_pc_tpi "Temp-adjusted per capita food consumption/day";
{txt}
{com}.                 gen cons_pc_tpi = food_pc_tpi + nf_pc_nom;
{txt}
{com}.         lab var cons_pc_tpi "Temp adjusted total consumption/day";
{txt}
{com}.         gen one=1;
{txt}
{com}. * TPI deflated per capita consumption ;
.         tempfile contpi;
{txt}
{com}. save `contpi', replace;
{txt}(note: file /tmp/St08757.000002 not found)
file /tmp/St08757.000002 saved

{com}. **************************************************************************
> * Calculate non-food expenditure for HH around the food poverty line
> *
> * Develop a discrete triangular weighted distribution. This gives a
> * weight of  1 to HH at +/- 18-20% from food poverty line, and
> * weight of  2 to HH at +/- 16-18% from food poverty line, and ...
> * weight of 10 to HH at +/-  0- 2% from food poverty line.
> * This weight is called triwt below.
> **************************************************************************;
. use `contpi';
{txt}
{com}.         sort spdomain;
{txt}
{com}.         merge spdomain using "$path/work/povline_food_flex.dta";
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}. gen     triwt = 0 ;
{txt}
{com}. replace triwt = 11 - round(50*abs(cons_pc_tpi/povline_f_flex-1)+0.5)
>                 if abs(cons_pc_tpi/povline_f_flex-1)<=0.2;
{txt}(338 real changes made)

{com}.                                         * Nearness to poverty line and population weights ;
.         gen tripopwt=triwt*hhweight*hhsize;
{txt}
{com}.         preserve;
{txt}
{com}.                 collapse (mean) nf_pc_nom [aw=tripopwt] ,
>                         by(spdomain);
{txt}
{com}.                                         rename nf_pc_nom povline_na_flex;
{txt}
{com}.                 lab var povline_na_flex "Nonfood poverty line. Flexible bundle";
{txt}
{com}.                                 tempfile znf;
{txt}
{com}.                 sort spdomain;
{txt}
{com}.                 save `znf', replace;
{txt}(note: file /tmp/St08757.000004 not found)
file /tmp/St08757.000004 saved

{com}.                 tab spdomain;

     {txt}spdomain {c |}      Freq.     Percent        Cum.
{hline 14}{c +}{hline 35}
Central rural {c |}{res}          1       20.00       20.00
{txt}Central urban {c |}{res}          1       20.00       40.00
{txt}      Eastern {c |}{res}          1       20.00       60.00
{txt}     Northern {c |}{res}          1       20.00       80.00
{txt}      Western {c |}{res}          1       20.00      100.00
{txt}{hline 14}{c +}{hline 35}
        Total {c |}{res}          5      100.00
{txt}
{com}.         restore;
{txt}
{com}.         sort spdomain;
{txt}
{com}.         merge spdomain using `znf';
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}. **************************************************************************;
. * Poverty line is the sum of the food and non-food poverty lines
> **************************************************************************;
.         gen povline_flex=povline_f_flex + povline_na_flex;
{txt}
{com}.         lab var povline_flex "Poverty line. Flexible bundle";
{txt}
{com}.         sort spdomain;
{txt}
{com}. save "$path/work/povlines.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines.dta saved

{com}. **************************************************************************;
. * Create spatial price index, based on the total poverty line, with
> * adjustment so that mean (and total) nominal consumption equals
> * mean (and total) spatially deflated consumption.
> *
> * Choose arbitrary strata to be the base at first: we just use the first stratum.
> **************************************************************************;
. use `contpi';
{txt}
{com}.         sort spdomain;
{txt}
{com}.         merge spdomain using "$path/work/povlines.dta";
{txt}{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines.dta
{p_end}
(label REG_TPI already defined)
(label spdomain_original already defined)
(label lsurvquar already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         * Real consumption pc, temporally deflated ;
.         gen cr= cons_pc_tpi ;
{txt}
{com}.         * Poverty line;
.         gen linpob=povline_flex;
{txt}
{com}.         *qui sum linpob if spdomain==1, meanonly;
.         sum linpob if spdomain==3, meanonly;
{txt}
{com}.         global spi_base=r(mean);
{txt}
{com}.         * Spatial price index ;
.         gen spi=linpob/$spi_base;
{txt}
{com}.         * Real consumption pc, temporally and spatially deflated ;
.         gen cr2=cr/spi;
{txt}
{com}.         qui sum cr [aw=hhweight*hhsize];
{txt}
{com}.         global sumcr=r(sum);
{txt}
{com}.         qui sum cr2 [aw=hhweight*hhsize];
{txt}
{com}.         global sumcr2=r(sum);
{txt}
{com}.         replace spi=spi*$sumcr2/$sumcr;
{txt}(6775 real changes made)

{com}.         gen linpobr=linpob/spi;
{txt}
{com}.         replace cr2=cr/spi;
{txt}(6775 real changes made)

{com}.         sum cr cr2 linpob linpobr [aw=hhweight*hhsize];

{txt}    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 9}cr2 {c |}{res}    6775   200636622    9421.297   309974.2   84.39603   6.34e+07
{txt}{space 6}linpob {c |}{res}    6775   200636622    970.2919   194.0502   765.2844   1476.888
{txt}{space 5}linpobr {c |}{res}    6775   200636622    1153.707   .0000587   1153.707   1153.707
{txt}
{com}.         lab var cr      "Temporally-adjusted cons pc";
{txt}
{com}.         lab var cr2     "Spatially & temporally adjusted cons pc";
{txt}
{com}.         lab var linpob  "Poverty line";
{txt}
{com}.         lab var linpobr "Real poverty line";
{txt}
{com}.         lab var spi     "Spatial price index";
{txt}
{com}. **************************************************************************
> * calculate poverty measures with the flexible food bundle
> **************************************************************************;
.         gen h = 100     if cr <=(linpob);
{txt}(5949 missing values generated)

{com}.         replace  h = 0 if cr > (linpob);
{txt}(5949 real changes made)

{com}.                         gen             pg      = ((linpob - cr )/linpob) *100;
{txt}
{com}.         replace         pg      = 0             if h==0;
{txt}(5949 real changes made)

{com}.         gen             spg     = ((( linpob - cr )/ linpob )^2)*100;
{txt}
{com}.         replace         spg     = 0             if h==0;
{txt}(5949 real changes made)

{com}.         gen h_flex=h;
{txt}
{com}.         gen pg_flex=pg;
{txt}
{com}.         gen spg_flex=spg;
{txt}
{com}.         lab var h_flex   "Poverty headcount. Flex bundle";
{txt}
{com}.         lab var pg_flex  "Poverty gap. Flex bundle";
{txt}
{com}.         lab var spg_flex "Squared poverty gap. Flex bundle";
{txt}
{com}.         sort hhid;
{txt}
{com}.         merge hhid using "$path/work/hhdata.dta";
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop if _merge~=3;
{txt}(0 observations deleted)

{com}.         drop _merge;
{txt}
{com}.         gen popwt=hhsize*hhweight;
{txt}
{com}.                 * Stata 10.1 syntax ;
.         svyset , clear;
{txt}
{com}.         svyset [pweight=popwt] , str(strata) psu(psu);

      {txt}pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}

{com}.         svy: mean h_flex pg_flex spg_flex;
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 6}h_flex {c |}{col 14}{res}{space 2} 10.50449{col 26}{space 2} .7162102{col 37}{space 5} 9.098311{col 51}{space 3} 11.91066
{txt}{space 5}pg_flex {c |}{col 14}{res}{space 2} 2.829827{col 26}{space 2} .2288531{col 37}{space 5} 2.380508{col 51}{space 3} 3.279147
{txt}{space 4}spg_flex {c |}{col 14}{res}{space 2}   1.1506{col 26}{space 2} .1228881{col 37}{space 5} .9093272{col 51}{space 3} 1.391873
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         svy: mean h_flex pg_flex spg_flex , over(rural);
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex       {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 3.415127{col 26}{space 2} 1.014682{col 37}{space 5} 1.422946{col 51}{space 3} 5.407308
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 11.58735{col 26}{space 2} .7955077{col 37}{space 5} 10.02548{col 51}{space 3} 13.14921
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .7621967{col 26}{space 2} .2241963{col 37}{space 5}   .32202{col 51}{space 3} 1.202373
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.145647{col 26}{space 2}  .259004{col 37}{space 5}  2.63713{col 51}{space 3} 3.654163
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .2298063{col 26}{space 2} .0695826{col 37}{space 5} .0931911{col 51}{space 3} .3664216
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.291246{col 26}{space 2} .1406135{col 37}{space 5} 1.015172{col 51}{space 3}  1.56732
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         svy: mean h_flex pg_flex spg_flex , over(news);
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

            {txt}1: news = {res}1
            {txt}2: news = {res}2
            {txt}3: news = {res}3
            {txt}4: news = {res}4

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex       {txt}{c |}
{space 11}1 {c |}{col 14}{res}{space 2} 5.742233{col 26}{space 2} 1.051555{col 37}{space 5} 3.677658{col 51}{space 3} 7.806807
{txt}{space 11}2 {c |}{col 14}{res}{space 2} 7.564058{col 26}{space 2} 1.320862{col 37}{space 5} 4.970739{col 51}{space 3} 10.15738
{txt}{space 11}3 {c |}{col 14}{res}{space 2} 19.90525{col 26}{space 2}  1.81515{col 37}{space 5} 16.34146{col 51}{space 3} 23.46903
{txt}{space 11}4 {c |}{col 14}{res}{space 2} 11.53058{col 26}{space 2} 1.468905{col 37}{space 5}   8.6466{col 51}{space 3} 14.41456
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex      {txt}{c |}
{space 11}1 {c |}{col 14}{res}{space 2} 1.213381{col 26}{space 2} .2581145{col 37}{space 5} .7066106{col 51}{space 3} 1.720151
{txt}{space 11}2 {c |}{col 14}{res}{space 2} 1.397161{col 26}{space 2} .2143793{col 37}{space 5} .9762585{col 51}{space 3} 1.818063
{txt}{space 11}3 {c |}{col 14}{res}{space 2} 6.987412{col 26}{space 2} .8543728{col 37}{space 5} 5.309976{col 51}{space 3} 8.664848
{txt}{space 11}4 {c |}{col 14}{res}{space 2} 2.959156{col 26}{space 2}   .50019{col 37}{space 5} 1.977106{col 51}{space 3} 3.941206
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex     {txt}{c |}
{space 11}1 {c |}{col 14}{res}{space 2} .3753916{col 26}{space 2} .0974788{col 37}{space 5} .1840062{col 51}{space 3} .5667769
{txt}{space 11}2 {c |}{col 14}{res}{space 2} .3596755{col 26}{space 2} .0584681{col 37}{space 5} .2448819{col 51}{space 3}  .474469
{txt}{space 11}3 {c |}{col 14}{res}{space 2} 3.378904{col 26}{space 2}  .486753{col 37}{space 5} 2.423235{col 51}{space 3} 4.334572
{txt}{space 11}4 {c |}{col 14}{res}{space 2} 1.157375{col 26}{space 2} .2897251{col 37}{space 5} .5885417{col 51}{space 3} 1.726208
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         svy: mean h_flex pg_flex spg_flex , over(reg_tpi);
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}central: reg_tpi = {res}central
      {txt}eastern: reg_tpi = {res}eastern
     {txt}northern: reg_tpi = {res}northern
      {txt}western: reg_tpi = {res}western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex       {txt}{c |}
{space 5}central {c |}{col 14}{res}{space 2} 5.742233{col 26}{space 2} 1.051555{col 37}{space 5} 3.677658{col 51}{space 3} 7.806807
{txt}{space 5}eastern {c |}{col 14}{res}{space 2} 7.564058{col 26}{space 2} 1.320862{col 37}{space 5} 4.970739{col 51}{space 3} 10.15738
{txt}{space 4}northern {c |}{col 14}{res}{space 2} 19.90525{col 26}{space 2}  1.81515{col 37}{space 5} 16.34146{col 51}{space 3} 23.46903
{txt}{space 5}western {c |}{col 14}{res}{space 2} 11.53058{col 26}{space 2} 1.468905{col 37}{space 5}   8.6466{col 51}{space 3} 14.41456
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex      {txt}{c |}
{space 5}central {c |}{col 14}{res}{space 2} 1.213381{col 26}{space 2} .2581145{col 37}{space 5} .7066106{col 51}{space 3} 1.720151
{txt}{space 5}eastern {c |}{col 14}{res}{space 2} 1.397161{col 26}{space 2} .2143793{col 37}{space 5} .9762585{col 51}{space 3} 1.818063
{txt}{space 4}northern {c |}{col 14}{res}{space 2} 6.987412{col 26}{space 2} .8543728{col 37}{space 5} 5.309976{col 51}{space 3} 8.664848
{txt}{space 5}western {c |}{col 14}{res}{space 2} 2.959156{col 26}{space 2}   .50019{col 37}{space 5} 1.977106{col 51}{space 3} 3.941206
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex     {txt}{c |}
{space 5}central {c |}{col 14}{res}{space 2} .3753916{col 26}{space 2} .0974788{col 37}{space 5} .1840062{col 51}{space 3} .5667769
{txt}{space 5}eastern {c |}{col 14}{res}{space 2} .3596755{col 26}{space 2} .0584681{col 37}{space 5} .2448819{col 51}{space 3}  .474469
{txt}{space 4}northern {c |}{col 14}{res}{space 2} 3.378904{col 26}{space 2}  .486753{col 37}{space 5} 2.423235{col 51}{space 3} 4.334572
{txt}{space 5}western {c |}{col 14}{res}{space 2} 1.157375{col 26}{space 2} .2897251{col 37}{space 5} .5885417{col 51}{space 3} 1.726208
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         svy: mean h_flex pg_flex spg_flex , over(strata);
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex       {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 4.874973{col 26}{space 2} 2.339743{col 37}{space 5}   .28123{col 51}{space 3} 9.468715
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 4.790162{col 26}{space 2} 1.423751{col 37}{space 5} 1.994836{col 51}{space 3} 7.585489
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 7.085516{col 26}{space 2} 1.855786{col 37}{space 5} 3.441951{col 51}{space 3} 10.72908
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 5.450948{col 26}{space 2} 1.171204{col 37}{space 5}  3.15146{col 51}{space 3} 7.750436
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2}  9.28854{col 26}{space 2} 2.149875{col 37}{space 5} 5.067575{col 51}{space 3}  13.5095
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 10.98032{col 26}{space 2} 2.045831{col 37}{space 5} 6.963628{col 51}{space 3} 14.99701
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 68.85476{col 26}{space 2} 6.122156{col 37}{space 5}  56.8348{col 51}{space 3} 80.87472
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 9.677764{col 26}{space 2} 1.673858{col 37}{space 5} 6.391389{col 51}{space 3} 12.96414
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 14.91677{col 26}{space 2} 2.500262{col 37}{space 5} 10.00787{col 51}{space 3} 19.82567
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 7.941413{col 26}{space 2} 1.250905{col 37}{space 5} 5.485444{col 51}{space 3} 10.39738
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 1.092117{col 26}{space 2} .5122928{col 37}{space 5} .0863052{col 51}{space 3} 2.097929
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.048008{col 26}{space 2} .4130126{col 37}{space 5} .2371182{col 51}{space 3} 1.858898
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.434286{col 26}{space 2} .4137401{col 37}{space 5} .6219675{col 51}{space 3} 2.246604
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.087293{col 26}{space 2} .2354529{col 37}{space 5}  .625016{col 51}{space 3} 1.549571
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2}  1.65004{col 26}{space 2} .3316741{col 37}{space 5} .9988463{col 51}{space 3} 2.301233
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 3.711761{col 26}{space 2} .8833378{col 37}{space 5} 1.977456{col 51}{space 3} 5.446066
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 27.96688{col 26}{space 2} 3.497401{col 37}{space 5} 21.10024{col 51}{space 3} 34.83351
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.789102{col 26}{space 2} .4019775{col 37}{space 5}  .999878{col 51}{space 3} 2.578326
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2}  4.29633{col 26}{space 2} .8750375{col 37}{space 5} 2.578322{col 51}{space 3} 6.014338
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 1.541826{col 26}{space 2} .3188173{col 37}{space 5} .9158749{col 51}{space 3} 2.167777
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} .2958993{col 26}{space 2}  .136417{col 37}{space 5} .0280645{col 51}{space 3} .5637342
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .3400405{col 26}{space 2} .1770154{col 37}{space 5}-.0075034{col 51}{space 3} .6875843
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4452623{col 26}{space 2} .1439091{col 37}{space 5} .1627179{col 51}{space 3} .7278067
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .3247754{col 26}{space 2} .0875677{col 37}{space 5} .1528491{col 51}{space 3} .4967017
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2}  .388157{col 26}{space 2} .0780924{col 37}{space 5}  .234834{col 51}{space 3} .5414799
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.638924{col 26}{space 2}  .479451{col 37}{space 5} .6975922{col 51}{space 3} 2.580256
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 14.66049{col 26}{space 2} 2.159566{col 37}{space 5} 10.42049{col 51}{space 3} 18.90048
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .5516879{col 26}{space 2} .1748565{col 37}{space 5} .2083826{col 51}{space 3} .8949931
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 1.809259{col 26}{space 2} .5191365{col 37}{space 5} .7900106{col 51}{space 3} 2.828508
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .4664137{col 26}{space 2} .1374052{col 37}{space 5} .1966388{col 51}{space 3} .7361887
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         svy: mean h_flex pg_flex spg_flex , over(spdomain);
{txt}(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex       {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 6.630571{col 26}{space 2}  1.37595{col 37}{space 5} 3.929094{col 51}{space 3} 9.332047
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.920949{col 26}{space 2} 1.470722{col 37}{space 5} 1.033401{col 51}{space 3} 6.808497
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 7.564058{col 26}{space 2} 1.320862{col 37}{space 5} 4.970739{col 51}{space 3} 10.15738
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 19.90525{col 26}{space 2}  1.81515{col 37}{space 5} 16.34146{col 51}{space 3} 23.46903
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 11.53058{col 26}{space 2} 1.468905{col 37}{space 5}   8.6466{col 51}{space 3} 14.41456
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.344754{col 26}{space 2}  .344315{col 37}{space 5} .6687419{col 51}{space 3} 2.020766
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .9440368{col 26}{space 2} .3421814{col 37}{space 5} .2722137{col 51}{space 3}  1.61586
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 1.397161{col 26}{space 2} .2143793{col 37}{space 5} .9762585{col 51}{space 3} 1.818063
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 6.987412{col 26}{space 2} .8543728{col 37}{space 5} 5.309976{col 51}{space 3} 8.664848
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 2.959156{col 26}{space 2}   .50019{col 37}{space 5} 1.977106{col 51}{space 3} 3.941206
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .4237497{col 26}{space 2} .1361276{col 37}{space 5}  .156483{col 51}{space 3} .6910164
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .2762471{col 26}{space 2} .0990157{col 37}{space 5} .0818443{col 51}{space 3} .4706499
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} .3596755{col 26}{space 2} .0584681{col 37}{space 5} .2448819{col 51}{space 3}  .474469
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 3.378904{col 26}{space 2}  .486753{col 37}{space 5} 2.423235{col 51}{space 3} 4.334572
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 1.157375{col 26}{space 2} .2897251{col 37}{space 5} .5885417{col 51}{space 3} 1.726208
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}.         compress;
{txt}survquar was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}one was {res}float{txt} now {res}byte
{txt}triwt was {res}float{txt} now {res}byte
{txt}h was {res}float{txt} now {res}byte
{txt}h_flex was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}
{com}.         sort hhid;
{txt}
{com}. save "$path/work/cons_real.dta" , replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real.dta saved

{com}.         collapse  (mean) h_flex pg_flex spg_flex [aw=hhweight*hhsize], by(strata);
{txt}
{com}. save "$path/work/povmeas.dta", replace;
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povmeas.dta saved

{com}. **************************************************************************
> * 130_povmeas_flex.do           (end)
> **************************************************************************;
. log close;
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/130_povmeas_flex.log
  {txt}log type:  {res}text
 {txt}closed on:  {res}20 May 2013, 21:24:51
{txt}{.-}

{com}. 
{txt}end of do-file

{com}. do "$path/new/140_iterate_bjorn.do" $it_n $bottom
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/140_iterate.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/140_iterate.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:25:00
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. *global povline_initial "$path/in/povlines_first_iof.dta";
. **************************************************************************
> * 140_iterate.do        (start)
> *
> * Purpose: Create flexible food basket and poverty line with iterative procedure
> *
> * This program will take the results from the first pass at the
> * poverty lines and applies the corresponding spatial deflator to
> * re-select the relatively poor, their consumption bundles, and
> * their prices.
> *
> * Welfare indicator is here always temporally and spatially adjusted per capita
> * expenditure. Here called cr_it< >.
> *
> * We will iterate this process 5 times which here assures convergence.
> *
> * CA, Mar 2010: Relatively poor are those below last iterated poverty line
> * MAH, Apr 2010: Cleaning
> * URB, feb 2012: Commented out "drop if unit~=2"
> **************************************************************************;
. /*
> This file uses:
>             in/povlines_first_new.dta
>         work/hhdata.dta
>         work/consump_nom.dta
>         work/own.dta
>         work/daily.dta
>         work/temp_index_reg_tpi.dta
>         work/cons_cod.dta
>         work/food_cat.dta
>         work/cons_real.dta
>         work/products.dta
>         work/match96_02.dta
>         new/conversions.do
>         
> This file creates (where `pass' is the number of the iteration):
>         work/codes_food_basket_flex_it`pass'.dta
>         work/price_unit_flex_it`pass'.dta
>         work/quan_flex_it`pass'.dta
>         work/match_cod_flex_it`pass'.csv
>         work/relpoor_it`pass'.dta
>         work/povlines_it`pass'.dta
>         work/foodshares_it`pass'.dta
>         work/nat_pov_flex.csv
>         work/rur_pov_flex.csv
>         work/strata_pov_flex.csv
>         work/spdomain_pov_flex.csv
>         work/reg_tpi_pov_flex.csv
> */
> 
> **************************************************************************;
. * Make a key file that will be used over and over, without change
> * in every iteration. This will include the TEMPORALLY deflated consumption
> * and various HH data such as hhweight, spdomain, etc.
> **************************************************************************;
. use "$path/work/conpc.dta";
{txt}
{com}.         sort hhid;
{txt}
{com}.         merg hhid using "$path/work/hhdata.dta";
{txt}
{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         sort reg_tpi survquar;
{txt}
{com}.         merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.                 gen food_pc_tpi = food_pc_nom /tpi_trim;
{txt}
{com}.         gen cons_pc_tpi = food_pc_tpi + nf_pc_nom;
{txt}
{com}.         lab var food_pc_tpi "Temp-adjusted per capita food consumption/day";
{txt}
{com}.         lab var cons_pc_tpi "Temp adjusted total consumption/day";
{txt}
{com}.         tempfile contpi;
{txt}
{com}.         sort hhid;
{txt}
{com}. save `contpi', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}. save contpi_, replace;
{txt}file contpi_.dta saved

{com}. *use "$path/in/povlines_first_iterate.dta", clear;
. *save "$path/work/povlines_first.dta", replace;
. **************************************************************************;
. * Now set some information pertaining to the iterations. For now we'll
> * manually set the number of iterations. Also specify the percentile
> * cutpoint that we will use for defining the relatively poor.
> **************************************************************************;
. local lastpass=0;
{txt}
{com}. local pass=1;
{txt}
{com}. * Use these two lines to manually specify the number of iterations
> * and the cutpoint here in the do file.;
.   *local maxit=5;
.   *local cutpt=50;
. * Use these few lines if you want to specify the number of iterations
> * and percentile cutpoint by passing them as parameters on the command
> * line, e.g.:   wstata do new/iterate1.do 5 50;
. if "`1'"=="" | "`2'"=="" {c -(}      ;
.         di in red "Error: you need to specify number of iterations as first parameter";
.         di in red "       and percentile cutpoint as second parameter on command line.";
. {c )-};
{txt}
{com}. local maxit=`1';
{txt}
{com}. local cutpt=`2';
{txt}
{com}. tempfile cutoff;
{txt}
{com}. while `pass' <= `maxit' {c -(};
{txt}  2{com}.         **************************************************************************;
. **************************************************************************;
. * Pick out the bottom X percent in real consumption per capita 
> * (temporally & spatially adjusted), as ranked by the previous iteration.
> * The percentile to use is defined by "cutpt". This produces a file that
> * has the hhid, and a dummy variable indicating if they were below the
> * cutpoint on the last iteration.
> **************************************************************************;
. **************************************************************************;
. /*
> * Comment out if IOF 2008/09. (This code included instead of below code in order to replicate published figures 2002/03). ( START ) ;
> 
>         if "`pass'"=="1" {c -(}      ;
>               use `contpi', clear;
>               sort spdomain;
>               merge spdomain using "$path/work/povlines_first.dta";
>               tab _m;
>               drop _m;
> *              gen relpoor`pass'= cons_pc_tpi<=cutoff;
>                gen relpoor`pass'= cons_pc_tpi if cons_pc_tpi<=cutoff;
>               rename cons_pc_tpi cr_it0;
>               sort hhid;
>          save "$path/work/relpoor_it`pass'.dta", replace;
> *        use "$path/work/cons_real.dta", clear;
> *              gen cr_it0=cr2;
>         {c )-};
>         
> 
> * Comment out if IOF 2008/09. (This code included instead of below code in order to replicate published figures 2002/03). ( END ) ;
> */
> 
> 
> 
> * Comment out if IAF 2002/03. (This code below excluded in order to replicate published figures 2002/03). ( START ) ;
.         if "`pass'"=="1" {c -(} ;
{txt}  3{com}. * Find real income at cut point initially;
.                 use "$path/work/cons_real.dta", clear;
{txt}  4{com}.                                     gen cr_it0=cr2;
{txt}  5{com}.                         cap drop one;
{txt}  6{com}.             gen one=1;
{txt}  7{com}.                                     collapse (p`cutpt') one cr_it`lastpass' [aw=popwt] ;
{txt}  8{com}.                                     rename cr_it`lastpass' cutoff;
{txt}  9{com}.                                     sort one;
{txt} 10{com}.             save `cutoff', replace;
{txt} 11{com}.             save cutoff, replace;
{txt} 12{com}.  * Find relatively poor initially;
.             use "$path/work/cons_real.dta", clear;
{txt} 13{com}.                                                 gen cr_it`lastpass'=cr2;
{txt} 14{com}.             cap drop one cutoff;
{txt} 15{com}.             gen one=1;
{txt} 16{com}.                                     sort one;
{txt} 17{com}.             merge one using `cutoff';
{txt} 18{com}.             tab _merge;
{txt} 19{com}.             drop _merge;
{txt} 20{com}.                                     drop one;
{txt} 21{com}.                            gen relpoor`pass'=cr_it`lastpass'<=cutoff;
{txt} 22{com}.             *lab var relpoor`pass' "=1 if in bottom of PCE";
.                                     tab relpoor`pass' [aw=popwt];
{txt} 23{com}.                                     keep hhid cr_it`lastpass' relpoor`pass' popwt;
{txt} 24{com}.             sort hhid;
{txt} 25{com}.         save "$path/work/relpoor_it`pass'.dta", replace;
{txt} 26{com}.         {c )-};
{txt} 27{com}. * Comment out if IAF 2002/03. (This code below excluded in order to replicate published figures 2002/03). ( END ) ;
.                 if `pass'>1 {c -(}   ;
{txt} 28{com}. * Find real income at cut point in iteration number `pass' ;
.                 use "$path/work/cons_real_it`lastpass'.dta" , clear;
{txt} 29{com}.                                                 cap drop one;
{txt} 30{com}.                 gen one=1;
{txt} 31{com}.                                                                 *CA modified from hhweight*hhsize to popwt;
.                 collapse (p`cutpt') one cr_it`lastpass' [aw=popwt] ;
{txt} 32{com}.                         rename cr_it`lastpass' cutoff;
{txt} 33{com}.                                                                         sort one;
{txt} 34{com}.         save `cutoff', replace;
{txt} 35{com}.         * Find relatively poor in iteration number `pass' ;
.                 use "$path/work/cons_real_it`lastpass'.dta", clear;
{txt} 36{com}.                                                 cap drop one;
{txt} 37{com}.                 gen one=1;
{txt} 38{com}.                                                 sort one;
{txt} 39{com}.                 merge one using `cutoff';
{txt} 40{com}.                 tab _merge;
{txt} 41{com}.                 drop _merge;
{txt} 42{com}.                                                 drop one;
{txt} 43{com}.                 gen relpoor`pass'=cr_it`lastpass'<=cutoff;
{txt} 44{com}.                 *lab var relpoor`pass' "=1 if in bottom of PCE";
.                                                 tab relpoor`pass' [aw=popwt];
{txt} 45{com}. *CA modified to popwt above and to keep popwt below;
.                 keep hhid cr_it`lastpass' relpoor`pass' popwt;
{txt} 46{com}.                 sort hhid;
{txt} 47{com}.         save "$path/work/relpoor_it`pass'.dta", replace;
{txt} 48{com}.         {c )-};
{txt} 49{com}.         **************************************************************************;
. * Get the consumption file, and select only those codes that are food,
> * using our definition of "food", which includes alcoholic beverages.
> **************************************************************************;
.         use "$path/work/cons_cod.dta", clear;
{txt} 50{com}. *CA modified to merge in work/hhdata.dta for bootstrap;
.     sort hhid;
{txt} 51{com}.     merge hhid using "$path/work/hhdata.dta";
{txt} 52{com}.     tab _m;
{txt} 53{com}.     drop _m;
{txt} 54{com}.         /*
>                 sort product;
>                 merge product using "$path/work/food_cat.dta";
>                 tab _merge;
>                 keep if _merge==3;
>                 drop _merge;
> */
> 
>                                 * Only food transactions ;
.                 keep if food_cat;
{txt} 55{com}.                 sort hhid;
{txt} 56{com}. **************************************************************************;
. * Merge with file that has temporally AND spatially adjusted consumption
> * per capita from the previous iteration, and also identifies those below 
> * the cutoff. Then select only those who are below the cutoff.
> **************************************************************************;
.                 merge hhid using "$path/work/relpoor_it`pass'.dta";
{txt} 57{com}.                 tab _merge;
{txt} 58{com}.                 drop _merge;
{txt} 59{com}.                                 * Keep only transactions by the poor ;
.                 keep if relpoor`pass';
{txt} 60{com}. **************************************************************************;
. * Calculate HH level food shares. Since we're only doing shares here, we can
> * work with the expenditures without doing temporal adjustment.
> **************************************************************************;
.                 gen  food_expenditure = cod_hh_nom3;
{txt} 61{com}.                 *gen  food_expenditure= own_valued + daily_valued + monthly_valued + educ_valued;
.                 egen tot_food_expen= sum (food_expen), by (hhid) ;
{txt} 62{com}.                 count if food_expenditure==.;
{txt} 63{com}.                 count if tot_food_expen==.;
{txt} 64{com}.                 gen food_share= food_expenditure/tot_food_expen;
{txt} 65{com}.                 count if food_share==.;
{txt} 66{com}.                 drop if food_share==.;
{txt} 67{com}.                 sort hhid product;
{txt} 68{com}.                 tempfile foodshares;
{txt} 69{com}.         save `foodshares', replace;
{txt} 70{com}. ********************************************************************************;
. * Now find the total (economy wise, e.g. not by HH) shares by each product in
> * order to select the most important goods in each domain's basket.
> ********************************************************************************;
.                 collapse (mean) hhweight spdomain, by (hhid);
{txt} 71{com}.                 sort hhid ;
{txt} 72{com}.                  collapse (sum) hhweight , by(spdomain);
{txt} 73{com}.                 rename hhweight tothhweight;
{txt} 74{com}.                 tempfile tothhweight;
{txt} 75{com}.                 sort spdomain;
{txt} 76{com}.         save `tothhweight', replace;
{txt} 77{com}.         use `foodshares', clear;
{txt} 78{com}.                 sort spdomain;
{txt} 79{com}.                 merge spdomain using `tothhweight';
{txt} 80{com}.                 tab _merge;
{txt} 81{com}.                 drop _merge;
{txt} 82{com}.                 sort spdomain product;
{txt} 83{com}.                 gen f_share_w`pass'=(food_share*hhweight)/tothhweight;
{txt} 84{com}.                 collapse (sum) f_share_w`pass', by(spdomain product descript);
{txt} 85{com}.                                sort spdomain f_share_w`pass';
{txt} 86{com}.                 by spdomain: gen cumshr`pass'= sum(f_share_w`pass');
{txt} 87{com}.                 count if cumshr`pass'<=.075;
{txt} 88{com}.                 drop if cumshr`pass'<=.075;
{txt} 89{com}.                 lab var f_share_w`pass' "average food share for the 13 spatial domains";
{txt} 90{com}.         save `foodshares', replace;
{txt} 91{com}.                                                 * Number of spatials domains a food product appears ;
.                 gen numreg=1;
{txt} 92{com}.                 collapse (sum) numreg cumshr`pass', by (product descript);
{txt} 93{com}.                 keep product numreg descript;
{txt} 94{com}.                 display _N;
{txt} 95{com}.                 sort product;
{txt} 96{com}.                                 * Include food product labels ;
. *                merge product using "$path/work/products.dta";
. *                tab _merge;
. *                keep if _merge==3;
.                 keep product descript numreg;
{txt} 97{com}.                   sort product;
{txt} 98{com}.                      display _N;
{txt} 99{com}.           save "$path/work/codes_food_basket_flex_it`pass'.dta", replace;
{txt}100{com}. **************************************************************************;
. **************************************************************************;
. * That is pretty much the part equivalent to "100_food_basket_flex.do",
> * which figures out the food shares for the relevant reference group. Now
> * we figure out the prices with a code stream that is adapted from
> * "110_price_unit_flex.do".
> **************************************************************************;
. **************************************************************************;
. **************************************************************************************
> * Create sorted data set with daily + own expenditure and the matched codes
> **************************************************************************************;
. use "$path/in/cons_cod_trans.dta", clear;
{txt}101{com}. *save "$path/work/cons_cod_trans.dta", replace;
. *drop value   ;
. *drop quantity;
. keep hhid product food_cat valuez quantityz unit;
{txt}102{com}. rename valuez    value;
{txt}103{com}. rename quantityz quantity;
{txt}104{com}. *drop count;
. drop if quantity==0 ;
{txt}105{com}.         tempfile dd_acsort;
{txt}106{com}.         save    `dd_acsort', replace;
{txt}107{com}. /*
>         use "$path/work/daily.dta", clear;
>                 drop days;
>                 sort product;
>                 tempfile dd_acsort;
>         save `dd_acsort', replace;
>         
>         use "$path/work/own.dta", clear;
>                 keep hhid product valued quantityd unit;
>                 rename valued value;
>                 rename quantityd quantity;
>         
>                 *CHECK THE ZEROS IN quantity FOR NOW DELETE;
>                 drop if quantity==0;
>         
>                 append using `dd_acsort';
> */
> 
>                 *CA modified to insert work/hhdata.dta for bootstrap;
.                 sort hhid;
{txt}108{com}.                 merge hhid using "$path/work/hhdata.dta";
{txt}109{com}.                 tab _m;
{txt}110{com}.                  drop if _m==2;
{txt}111{com}.                 drop _m;
{txt}112{com}.                                 sort product;
{txt}113{com}.                 gen count=1;
{txt}114{com}.         save `dd_acsort', replace;
{txt}115{com}.         **************************************************************************;
. * Merge the basket codes with the dd  and own data sets.
> * Drop all codes not a part of the flexible food basket
> **************************************************************************;
.                 merge product using "$path/work/codes_food_basket_flex_it`pass'.dta";
{txt}116{com}.                         tab _merge;
{txt}117{com}.                 drop if _merge~=3;
{txt}118{com}.                 drop _merge;
{txt}119{com}. **************************************************************************************
> * Drop observations where product code, quantity or value information is unavailable
> **************************************************************************************;
.                 drop if product==. | value==. | quantity==.  ;
{txt}120{com}.         **************************************************************************************
> * Convert non-KG quantities (units, liters) into kilograms
> **************************************************************************************;
. *do "$path/new/110a_conversions.do"
> 
> ********************************************************************
> * There remain a few difficult to interpret observations such as liters
> * of fish and liters of pasta. These are dropped.
> ********************************************************************;
. *                $MZ drop if unit~=2;
.         **************************************************************************;
. * Bring in the spdomain and reg_tpi variables, and also the information on
> * relatively poor households.
> **************************************************************************;
.                 preserve;
{txt}121{com}.                                                 * Temporally adjusted expenditure ;
.                         use `contpi', clear;
{txt}122{com}.                                 keep hhid hhweight spdomain reg_tpi survquar tpi_trim cons_pc_tpi ;
{txt}123{com}.                                 sort hhid;
{txt}124{com}.                                 tempfile hhd2;
{txt}125{com}.                         save `hhd2', replace;
{txt}126{com}.                 restore;
{txt}127{com}.                                 compress;
{txt}128{com}.                 sort hhid;
{txt}129{com}.                 merge hhid using `hhd2';
{txt}130{com}.                 tab _merge;
{txt}131{com}.                 drop _merge;
{txt}132{com}.                 sort hhid;
{txt}133{com}.                 merge hhid using "$path/work/relpoor_it`pass'.dta";
{txt}134{com}.                 tab _merge;
{txt}135{com}.                 drop _merge;
{txt}136{com}.                                                 * Keep nominal food transactions by poor people ;
.                 keep if relpoor`pass';
{txt}137{com}.                 drop if product==.;
{txt}138{com}.                                                                 * Temporally deflate transaction values ;
.                 gen value_r=value/tpi_trim;
{txt}139{com}. **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each spdomain & product combination. This should eliminate outliers
> * that may have an undue influence on the price calculation. 
> **************************************************************************;
.                 gen hhppkg=value_r/quantity;
{txt}140{com}.                 egen lower5=pctile(hhppkg), p(5)  by(spdomain product);
{txt}141{com}.                 egen upper5=pctile(hhppkg), p(95) by(spdomain product);
{txt}142{com}.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
{txt}143{com}. *********************************************************************
> * Note that we do prices in three ways. First, by summing quantity and value 
> * This average price price_uw is thus quantity/value weighted. Second, we
> * calculate the price and take simple means for a transaction weighted
> * price, price_ut. Last we take the median, price_um. But in the end
> * we only use price_unitw
> *********************************************************************;
.                 gen price_ut`pass'=value_r/(quantity*1000);
{txt}144{com}.                 gen price_um`pass'=price_ut;
{txt}145{com}.                 collapse (sum) 
>                         quantity value_r count bswt (mean) price_ut (median) price_um [aw=hhweight], 
>                         by(spdomain product);
{txt}146{com}.                 *Generate weighted price per gram ;
.                 gen price_uw`pass'=value_r/(quantity*1000);
{txt}147{com}.                 drop value_r quantity;
{txt}148{com}.                 sort spdomain product;
{txt}149{com}.                 lab var price_ut`pass' "Average of calculated prices - transaction weighted";
{txt}150{com}.                 lab var price_um`pass' "Median of prices";
{txt}151{com}.                 lab var price_uw`pass' "Value share weighted mean prices";
{txt}152{com}. * Get an idea of the difference between the price measures;
.                 gen ratiotw`pass'=price_ut`pass'/price_uw`pass';
{txt}153{com}.                 gen ratiomw`pass'=price_um`pass'/price_uw`pass';
{txt}154{com}.                 sum ratiotw`pass' ratiomw`pass';
{txt}155{com}.                 sort product;
{txt}156{com}.                 merge product using "$path/work/codes_food_basket_flex_it`pass'.dta";
{txt}157{com}.                 tab _m;
{txt}158{com}.                 count if _merge~=3;
{txt}159{com}.                 drop if _merge~=3;
{txt}160{com}.                 drop _merge;
{txt}161{com}.                 sort product spdomain;
{txt}162{com}.         save "$path/work/price_unit_flex_it`pass'.dta", replace;
{txt}163{com}. **************************************************************************;
. **************************************************************************;
. * That concludes the prices part. Now we move to calculating the food
> * poverty lines, which draws code from "120_povline_flex.do" with very few
> * changes:
> * - The changes facilitate accumulating vectors
> *   of intermediate results across iterations, rather than generating a
> *   bunch of new files.
> **************************************************************************;
. **************************************************************************;
. **************************************************************************;
. * Use the file with the food basket (`foodshares'), which is in shares. 
> * Then merge it with the prices file, and then with the calories file.
> * Along the way, drop those observations where we have no price information
> * or no calorie information, but list them out.
> **************************************************************************;
.         use `foodshares', clear;
{txt}164{com}.                 sort product spdomain;
{txt}165{com}.                 merge product spdomain using "$path/work/price_unit_flex_it`pass'.dta";
{txt}166{com}.                         tab _merge;
{txt}167{com}.                 list product spdomain descript if _merge==1;
{txt}168{com}.                         drop if _merge ~=3;
{txt}169{com}.                 drop _merge;
{txt}170{com}.                 sort product;
{txt}171{com}.                         merge product using "$path/work/calperg.dta";
{txt}172{com}.                 tab _merge;
{txt}173{com}.                                                 * This tells where we are lacking calorie info or are lacking quantity info due to 
>                 * missing price info above;
.                 list product spdomain descript if _merge==1;
{txt}174{com}.                         drop if _merge~=3;
{txt}175{com}.                 drop _merge;
{txt}176{com}.                 sort spdomain f_share_w`pass';
{txt}177{com}.                                 *CA modified to change count bswt;
.                 by spdomain: count if round(bswt)<10;
{txt}178{com}.                                 sum bswt;
{txt}179{com}.                                                 drop if round(bswt) < 10;
{txt}180{com}.                                                                 * Total food share in spatial domain ;
.                 by spdomain: egen baskshr=sum(f_share_w`pass');
{txt}181{com}.                                 * Cumulated food share in spatial domain ;
.                 by spdomain: gen  cumshr =sum(f_share_w`pass');
{txt}182{com}.                 drop if cumshr<=baskshr-.9;
{txt}183{com}.                         drop baskshr;
{txt}184{com}.                 by spdomain: egen baskshr=sum(f_share_w`pass');
{txt}185{com}.                 tabstat baskshr , by(spdomain) st(n mean sd min max);
{txt}186{com}.                                                                 * How many grams in 1 MT exp on food item ;
.                                 gen quan`pass'=f_share_w`pass'/price_uw`pass';
{txt}187{com}.                                 * How many calories in 1 MT exp on food item ;
.                 gen cal_ir`pass'=quan`pass'*calperg;
{txt}188{com}.                                 * how many calories in 1 MT exp in food basket ;
.                 by spdomain: egen calreg=sum(cal_ir);
{txt}189{com}.                         sort spdomain;
{txt}190{com}.                 merge spdomain using "$path/work/calpp.dta";
{txt}191{com}.                 tab _merge;
{txt}192{com}.                 drop _merge;
{txt}193{com}.                                                         * get the expansion factor to hit 95% of calorie requirements ;
.                 gen ratio=.95*calpp/calreg;
{txt}194{com}.                         replace quan`pass'=quan`pass'*ratio;
{txt}195{com}.                 replace cal_ir`pass'=quan`pass'*calperg;
{txt}196{com}.                         sort spdomain product;
{txt}197{com}.                 by spdomain: egen chkcal=sum(cal_ir`pass');
{txt}198{com}.                 replace chkcal=chkcal/.95-calpp ;
{txt}199{com}.                                                 tabstat chkcal , by(spdomain) st(n mean sd min max);
{txt}200{com}.                         gen val_ir`pass'=quan`pass'*price_uw`pass';
{txt}201{com}.                         by spdomain: egen povline_f_flex90_`pass'=sum(val_ir`pass');
{txt}202{com}.                 replace povline_f=povline_f_flex90_`pass'/.9;
{txt}203{com}.                 *drop product96;
. keep product spdomain quan`pass'  price_uw`pass' val_ir`pass' povline_f_flex90_`pass' calpp calperg;
{txt}204{com}.                     save "$path/work/quan_flex_it`pass'.dta", replace;
{txt}205{com}.                         collapse (mean) povline_f_flex90_`pass', by (spdomain);
{txt}206{com}.                                                 keep spdomain povline_f_flex90_`pass';
{txt}207{com}.                 sort spdomain;
{txt}208{com}.                 save "$path/work/povline_food_flex_it`pass'.dta", replace;
{txt}209{com}.         **************************************************************************;
. **************************************************************************;
. * Now comes the part that draws the non-food and total poverty lines,
> * and generates estimates of poverty measures. This is drawn from 
> * "130_povmeas_flex.do" with a few changes.
> **************************************************************************;
. **************************************************************************;
. **************************************************************************
> * Calculate non-food expenditure for HH around the food poverty line
> *
> * Develop a discrete triangular weighted distribution. This gives a
> * weight of  1 to HH at +/- 18-20% from food poverty line, and
> * weight of  2 to HH at +/- 16-18% from food poverty line, and ...
> * weight of 10 to HH at +/-  0- 2% from food poverty line.
> * This weight is called triwt below.
> **************************************************************************;
.         use `contpi', clear;
{txt}210{com}.                 sort spdomain;
{txt}211{com}.                 merge spdomain using "$path/work/povline_food_flex_it`pass'.dta";
{txt}212{com}.                 tab _merge;
{txt}213{com}.                 drop _merge;
{txt}214{com}.                 gen triwt=0 ;
{txt}215{com}.                 replace triwt = 11 - round(50*abs(cons_pc_tpi/povline_f_flex90_`pass'-1)+0.5)
>                 if abs(cons_pc_tpi/povline_f_flex90_`pass'-1)<=0.2;
{txt}216{com}.                                 ***since the poor were very few in Kampala and Central urban for Uganda we added 1 to weights****
>                                 * Nearness to poverty line and population weights ;
.                 gen tripopwt=(0.001+triwt)*hhweight*hhsize;
{txt}217{com}.                                                 preserve;
{txt}218{com}.                         collapse (mean) nf_pc_nom [aw=tripopwt] , by(spdomain);
{txt}219{com}.                         rename nf_pc_nom povline_nf_flex`pass';
{txt}220{com}.                         lab var povline_nf_flex`pass' "Nonfood poverty line. Flexible bundle";
{txt}221{com}.                         tempfile znf;
{txt}222{com}.                         sort spdomain;
{txt}223{com}.                         save `znf', replace;
{txt}224{com}.                                                                 restore;
{txt}225{com}.                                 sort spdomain;
{txt}226{com}.                 merge spdomain using `znf';
{txt}227{com}.                 tab _merge;
{txt}228{com}.                 drop _merge;
{txt}229{com}. **************************************************************************
> * Poverty line is the sum of the food and non-food poverty lines
> **************************************************************************;
.                 gen povline_flex`pass'=povline_f_flex90_`pass' + povline_nf_flex`pass';
{txt}230{com}. keep spdomain povline_flex`pass';
{txt}231{com}.                 sort spdomain;
{txt}232{com}.         save "$path/work/povlines_it`pass'.dta", replace;
{txt}233{com}. **************************************************************************;
. * Create spatial price index, based on the total poverty line, with
> * adjustment so that mean (and total) nominal consumption equals
> * mean (and total) spatially deflated consumption.
> *
> * Choose arbitrary strata to be the base at first: we just use the first stratum.
> **************************************************************************;
.         use `contpi', clear;
{txt}234{com}.                 sort spdomain;
{txt}235{com}.                 merge spdomain using "$path/work/povlines_it`pass'.dta";
{txt}236{com}.                 tab _merge;
{txt}237{com}.                 drop _merge;
{txt}238{com}.                 gen cr= cons_pc_tpi ;
{txt}239{com}.                 gen linpob`pass'=povline_flex`pass';
{txt}240{com}.                 qui sum linpob`pass' if spdomain==1, meanonly;
{txt}241{com}.                 global spi_base=r(mean);
{txt}242{com}.                 gen spi`pass'=linpob`pass'/$spi_base;
{txt}243{com}.                 gen cr_it`pass'=cr/spi`pass';
{txt}244{com}.                 qui sum cr [aw=hhweight*hhsize];
{txt}245{com}.                 global sumcr=r(sum);
{txt}246{com}.                 qui sum cr_it`pass' [aw=hhweight*hhsize];
{txt}247{com}.                 global sumcr2=r(sum);
{txt}248{com}.                 replace spi`pass'=spi`pass'*$sumcr2/$sumcr;
{txt}249{com}.                 gen linpobr`pass'=linpob`pass'/spi`pass';
{txt}250{com}.                 replace cr_it`pass'=cr/spi`pass';
{txt}251{com}.                 su cr cr_it`pass' linpob`pass' linpobr`pass' [aw=hhweight*hhsize];
{txt}252{com}.                 lab var cr "Temporally-adjusted cons pc";
{txt}253{com}.                 lab var cr_it`pass' "Spatially & temporally adjusted cons pc";
{txt}254{com}.                 lab var linpob`pass' "Poverty line";
{txt}255{com}.                 lab var linpobr`pass' "Real poverty line";
{txt}256{com}.                 lab var spi`pass' "Spatial price index";
{txt}257{com}.                 gen linpob=linpob`pass';
{txt}258{com}. **************************************************************************
> * calculate poverty measures with the flexible food bundle
> **************************************************************************;
.                 gen h=100 if cr_it`pass'<=linpobr`pass' & linpobr`pass'~=. & cr_it`pass'~=.;
{txt}259{com}.                 replace  h   = 0 if cr_it`pass' > linpobr`pass' & linpobr`pass'~=. & cr_it`pass'~=.;
{txt}260{com}.                 gen      pg  = ((linpobr`pass' - cr_it`pass' )/linpobr`pass') *100;
{txt}261{com}.                 replace  pg  = 0             if h==0;
{txt}262{com}.                 gen      spg = ((( linpobr`pass' - cr_it`pass' )/ linpobr`pass' )^2)*100;
{txt}263{com}.                 replace  spg = 0             if h==0;
{txt}264{com}.                 gen h_flex`pass'  =h;
{txt}265{com}.                 gen pg_flex`pass' =pg;
{txt}266{com}.                 gen spg_flex`pass'=spg;
{txt}267{com}.                                 lab var h_flex`pass'   "Poverty headcount. Flexible bundle";
{txt}268{com}.                 lab var pg_flex`pass'  "Poverty gap. Flexible bundle";
{txt}269{com}.                 lab var spg_flex`pass' "Squared poverty gap. Flexible bundle";
{txt}270{com}.                 gen popwt=hhsize*hhweight;
{txt}271{com}.                         * Stata 10.1 syntax ;
.                         svyset , clear;
{txt}272{com}.                         svyset [pweight=popwt] , str(strata) psu(psu);
{txt}273{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass';
{txt}274{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(rural);
{txt}275{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(strata);
{txt}276{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(strata rural);
{txt}277{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(spdomain);
{txt}278{com}. *preserve;
. keep hhid popwt cr_it`pass' h_flex`pass' pg_flex`pass' spg_flex`pass' rural news reg_tpi strata spdomain;
{txt}279{com}.                 compress;
{txt}280{com}.                 sort hhid;
{txt}281{com}.         save "$path/work/cons_real_it`pass'.dta" , replace;
{txt}282{com}. *restore;
.                                 * New cutoff point (percentile) to use in next iteration is equal to the poverty ;
.                 * rate in this iteration ;
.                                                 sum h_flex`pass' [aw=popwt] ;
{txt}283{com}.                                 * Comment out next line for IAF 2002/03 in order to replicate official figures ( START );
.                 * URB: In this case, we just use the poorest 50% as there are too few actually poor to calculate the bundle and prices..;
.                 local cutpt= $tpi_bottom;
{txt}284{com}. *               local cutpt= round(r(mean));
.                 * Comment out next line for IAF 2002/03 in order to replicate official figures ( END );
. *       save foodshares tempfile to disk;
.         use `foodshares', clear;
{txt}285{com}.         save "$path/work/foodshares_it`pass'.dta", replace;
{txt}286{com}.         local lastpass = `pass';
{txt}287{com}.         local pass = `pass' + 1;
{txt}288{com}.         {c )-};
{txt}(note: file /tmp/St08757.000002 not found)
file /tmp/St08757.000002 saved
file cutoff.dta saved
{err}one already defined
{txt}{search r(110):r(110);}

end of do-file

{search r(110):r(110);}

{com}. do "$path/new/140_iterate_bjorn.do" $it_n $bottom
{txt}
{com}. *global path "C:/user/gapp"
. clear all
{txt}
{com}. set mem 999m
{txt}
{com}. 
. cap log close
{txt}
{com}. log using "$path/rep/140_iterate.log", replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/bjvca/data/data/GAP/Haruna/rep/140_iterate.log
  {txt}log type:  {res}text
 {txt}opened on:  {res}20 May 2013, 21:26:56
{txt}
{com}. clear
{txt}
{com}. set more off
{txt}
{com}. #delimit ;
{txt}delimiter now ;
{com}. *global povline_initial "$path/in/povlines_first_iof.dta";
. **************************************************************************
> * 140_iterate.do        (start)
> *
> * Purpose: Create flexible food basket and poverty line with iterative procedure
> *
> * This program will take the results from the first pass at the
> * poverty lines and applies the corresponding spatial deflator to
> * re-select the relatively poor, their consumption bundles, and
> * their prices.
> *
> * Welfare indicator is here always temporally and spatially adjusted per capita
> * expenditure. Here called cr_it< >.
> *
> * We will iterate this process 5 times which here assures convergence.
> *
> * CA, Mar 2010: Relatively poor are those below last iterated poverty line
> * MAH, Apr 2010: Cleaning
> * URB, feb 2012: Commented out "drop if unit~=2"
> **************************************************************************;
. /*
> This file uses:
>             in/povlines_first_new.dta
>         work/hhdata.dta
>         work/consump_nom.dta
>         work/own.dta
>         work/daily.dta
>         work/temp_index_reg_tpi.dta
>         work/cons_cod.dta
>         work/food_cat.dta
>         work/cons_real.dta
>         work/products.dta
>         work/match96_02.dta
>         new/conversions.do
>         
> This file creates (where `pass' is the number of the iteration):
>         work/codes_food_basket_flex_it`pass'.dta
>         work/price_unit_flex_it`pass'.dta
>         work/quan_flex_it`pass'.dta
>         work/match_cod_flex_it`pass'.csv
>         work/relpoor_it`pass'.dta
>         work/povlines_it`pass'.dta
>         work/foodshares_it`pass'.dta
>         work/nat_pov_flex.csv
>         work/rur_pov_flex.csv
>         work/strata_pov_flex.csv
>         work/spdomain_pov_flex.csv
>         work/reg_tpi_pov_flex.csv
> */
> 
> **************************************************************************;
. * Make a key file that will be used over and over, without change
> * in every iteration. This will include the TEMPORALLY deflated consumption
> * and various HH data such as hhweight, spdomain, etc.
> **************************************************************************;
. use "$path/work/conpc.dta";
{txt}
{com}.         sort hhid;
{txt}
{com}.         merg hhid using "$path/work/hhdata.dta";
{txt}
{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.         sort reg_tpi survquar;
{txt}
{com}.         merge reg_tpi survquar using "$path/work/temp_index_reg_tpi.dta";
{txt}{p 0 4 2}
variable{txt}s{txt} reg_tpi
survquar
do not uniquely identify observations in
the master data
{p_end}
(label lsurvquar already defined)
(label REG_TPI already defined)

{com}.         tab _merge;

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}
{com}.         drop _merge;
{txt}
{com}.                 gen food_pc_tpi = food_pc_nom /tpi_trim;
{txt}
{com}.         gen cons_pc_tpi = food_pc_tpi + nf_pc_nom;
{txt}
{com}.         lab var food_pc_tpi "Temp-adjusted per capita food consumption/day";
{txt}
{com}.         lab var cons_pc_tpi "Temp adjusted total consumption/day";
{txt}
{com}.         tempfile contpi;
{txt}
{com}.         sort hhid;
{txt}
{com}. save `contpi', replace;
{txt}(note: file /tmp/St08757.000001 not found)
file /tmp/St08757.000001 saved

{com}. save contpi_, replace;
{txt}file contpi_.dta saved

{com}. *use "$path/in/povlines_first_iterate.dta", clear;
. *save "$path/work/povlines_first.dta", replace;
. **************************************************************************;
. * Now set some information pertaining to the iterations. For now we'll
> * manually set the number of iterations. Also specify the percentile
> * cutpoint that we will use for defining the relatively poor.
> **************************************************************************;
. local lastpass=0;
{txt}
{com}. local pass=1;
{txt}
{com}. * Use these two lines to manually specify the number of iterations
> * and the cutpoint here in the do file.;
.   *local maxit=5;
.   *local cutpt=50;
. * Use these few lines if you want to specify the number of iterations
> * and percentile cutpoint by passing them as parameters on the command
> * line, e.g.:   wstata do new/iterate1.do 5 50;
. if "`1'"=="" | "`2'"=="" {c -(}      ;
.         di in red "Error: you need to specify number of iterations as first parameter";
.         di in red "       and percentile cutpoint as second parameter on command line.";
. {c )-};
{txt}
{com}. local maxit=`1';
{txt}
{com}. local cutpt=`2';
{txt}
{com}. tempfile cutoff;
{txt}
{com}. while `pass' <= `maxit' {c -(};
{txt}  2{com}.         **************************************************************************;
. **************************************************************************;
. * Pick out the bottom X percent in real consumption per capita 
> * (temporally & spatially adjusted), as ranked by the previous iteration.
> * The percentile to use is defined by "cutpt". This produces a file that
> * has the hhid, and a dummy variable indicating if they were below the
> * cutpoint on the last iteration.
> **************************************************************************;
. **************************************************************************;
. /*
> * Comment out if IOF 2008/09. (This code included instead of below code in order to replicate published figures 2002/03). ( START ) ;
> 
>         if "`pass'"=="1" {c -(}      ;
>               use `contpi', clear;
>               sort spdomain;
>               merge spdomain using "$path/work/povlines_first.dta";
>               tab _m;
>               drop _m;
> *              gen relpoor`pass'= cons_pc_tpi<=cutoff;
>                gen relpoor`pass'= cons_pc_tpi if cons_pc_tpi<=cutoff;
>               rename cons_pc_tpi cr_it0;
>               sort hhid;
>          save "$path/work/relpoor_it`pass'.dta", replace;
> *        use "$path/work/cons_real.dta", clear;
> *              gen cr_it0=cr2;
>         {c )-};
>         
> 
> * Comment out if IOF 2008/09. (This code included instead of below code in order to replicate published figures 2002/03). ( END ) ;
> */
> 
> 
> 
> * Comment out if IAF 2002/03. (This code below excluded in order to replicate published figures 2002/03). ( START ) ;
.         if "`pass'"=="1" {c -(} ;
{txt}  3{com}. * Find real income at cut point initially;
.                 use "$path/work/cons_real.dta", clear;
{txt}  4{com}.                                     gen cr_it0=cr2;
{txt}  5{com}.                         cap drop one;
{txt}  6{com}.             gen one=1;
{txt}  7{com}.                                     collapse (p`cutpt') one cr_it`lastpass' [aw=popwt] ;
{txt}  8{com}.                                     rename cr_it`lastpass' cutoff;
{txt}  9{com}.                                     sort one;
{txt} 10{com}.             save `cutoff', replace;
{txt} 11{com}.             save cutoff, replace;
{txt} 12{com}.  * Find relatively poor initially;
.             use "$path/work/cons_real.dta", clear;
{txt} 13{com}.                                                 gen cr_it`lastpass'=cr2;
{txt} 14{com}.             cap drop one;
{txt} 15{com}.             cap drop cutoff;
{txt} 16{com}.             gen one=1;
{txt} 17{com}.                                     sort one;
{txt} 18{com}.             merge one using `cutoff';
{txt} 19{com}.             tab _merge;
{txt} 20{com}.             drop _merge;
{txt} 21{com}.                                     drop one;
{txt} 22{com}.                            gen relpoor`pass'=cr_it`lastpass'<=cutoff;
{txt} 23{com}.             *lab var relpoor`pass' "=1 if in bottom of PCE";
.                                     tab relpoor`pass' [aw=popwt];
{txt} 24{com}.                                     keep hhid cr_it`lastpass' relpoor`pass' popwt;
{txt} 25{com}.             sort hhid;
{txt} 26{com}.         save "$path/work/relpoor_it`pass'.dta", replace;
{txt} 27{com}.         {c )-};
{txt} 28{com}. * Comment out if IAF 2002/03. (This code below excluded in order to replicate published figures 2002/03). ( END ) ;
.                 if `pass'>1 {c -(}   ;
{txt} 29{com}. * Find real income at cut point in iteration number `pass' ;
.                 use "$path/work/cons_real_it`lastpass'.dta" , clear;
{txt} 30{com}.                                                 cap drop one;
{txt} 31{com}.                 gen one=1;
{txt} 32{com}.                                                                 *CA modified from hhweight*hhsize to popwt;
.                 collapse (p`cutpt') one cr_it`lastpass' [aw=popwt] ;
{txt} 33{com}.                         rename cr_it`lastpass' cutoff;
{txt} 34{com}.                                                                         sort one;
{txt} 35{com}.         save `cutoff', replace;
{txt} 36{com}.         * Find relatively poor in iteration number `pass' ;
.                 use "$path/work/cons_real_it`lastpass'.dta", clear;
{txt} 37{com}.                                                 cap drop one;
{txt} 38{com}.                 gen one=1;
{txt} 39{com}.                                                 sort one;
{txt} 40{com}.                 merge one using `cutoff';
{txt} 41{com}.                 tab _merge;
{txt} 42{com}.                 drop _merge;
{txt} 43{com}.                                                 drop one;
{txt} 44{com}.                 gen relpoor`pass'=cr_it`lastpass'<=cutoff;
{txt} 45{com}.                 *lab var relpoor`pass' "=1 if in bottom of PCE";
.                                                 tab relpoor`pass' [aw=popwt];
{txt} 46{com}. *CA modified to popwt above and to keep popwt below;
.                 keep hhid cr_it`lastpass' relpoor`pass' popwt;
{txt} 47{com}.                 sort hhid;
{txt} 48{com}.         save "$path/work/relpoor_it`pass'.dta", replace;
{txt} 49{com}.         {c )-};
{txt} 50{com}.         **************************************************************************;
. * Get the consumption file, and select only those codes that are food,
> * using our definition of "food", which includes alcoholic beverages.
> **************************************************************************;
.         use "$path/work/cons_cod.dta", clear;
{txt} 51{com}. *CA modified to merge in work/hhdata.dta for bootstrap;
.     sort hhid;
{txt} 52{com}.     merge hhid using "$path/work/hhdata.dta";
{txt} 53{com}.     tab _m;
{txt} 54{com}.     drop _m;
{txt} 55{com}.         /*
>                 sort product;
>                 merge product using "$path/work/food_cat.dta";
>                 tab _merge;
>                 keep if _merge==3;
>                 drop _merge;
> */
> 
>                                 * Only food transactions ;
.                 keep if food_cat;
{txt} 56{com}.                 sort hhid;
{txt} 57{com}. **************************************************************************;
. * Merge with file that has temporally AND spatially adjusted consumption
> * per capita from the previous iteration, and also identifies those below 
> * the cutoff. Then select only those who are below the cutoff.
> **************************************************************************;
.                 merge hhid using "$path/work/relpoor_it`pass'.dta";
{txt} 58{com}.                 tab _merge;
{txt} 59{com}.                 drop _merge;
{txt} 60{com}.                                 * Keep only transactions by the poor ;
.                 keep if relpoor`pass';
{txt} 61{com}. **************************************************************************;
. * Calculate HH level food shares. Since we're only doing shares here, we can
> * work with the expenditures without doing temporal adjustment.
> **************************************************************************;
.                 gen  food_expenditure = cod_hh_nom3;
{txt} 62{com}.                 *gen  food_expenditure= own_valued + daily_valued + monthly_valued + educ_valued;
.                 egen tot_food_expen= sum (food_expen), by (hhid) ;
{txt} 63{com}.                 count if food_expenditure==.;
{txt} 64{com}.                 count if tot_food_expen==.;
{txt} 65{com}.                 gen food_share= food_expenditure/tot_food_expen;
{txt} 66{com}.                 count if food_share==.;
{txt} 67{com}.                 drop if food_share==.;
{txt} 68{com}.                 sort hhid product;
{txt} 69{com}.                 tempfile foodshares;
{txt} 70{com}.         save `foodshares', replace;
{txt} 71{com}. ********************************************************************************;
. * Now find the total (economy wise, e.g. not by HH) shares by each product in
> * order to select the most important goods in each domain's basket.
> ********************************************************************************;
.                 collapse (mean) hhweight spdomain, by (hhid);
{txt} 72{com}.                 sort hhid ;
{txt} 73{com}.                  collapse (sum) hhweight , by(spdomain);
{txt} 74{com}.                 rename hhweight tothhweight;
{txt} 75{com}.                 tempfile tothhweight;
{txt} 76{com}.                 sort spdomain;
{txt} 77{com}.         save `tothhweight', replace;
{txt} 78{com}.         use `foodshares', clear;
{txt} 79{com}.                 sort spdomain;
{txt} 80{com}.                 merge spdomain using `tothhweight';
{txt} 81{com}.                 tab _merge;
{txt} 82{com}.                 drop _merge;
{txt} 83{com}.                 sort spdomain product;
{txt} 84{com}.                 gen f_share_w`pass'=(food_share*hhweight)/tothhweight;
{txt} 85{com}.                 collapse (sum) f_share_w`pass', by(spdomain product descript);
{txt} 86{com}.                                sort spdomain f_share_w`pass';
{txt} 87{com}.                 by spdomain: gen cumshr`pass'= sum(f_share_w`pass');
{txt} 88{com}.                 count if cumshr`pass'<=.075;
{txt} 89{com}.                 drop if cumshr`pass'<=.075;
{txt} 90{com}.                 lab var f_share_w`pass' "average food share for the 13 spatial domains";
{txt} 91{com}.         save `foodshares', replace;
{txt} 92{com}.                                                 * Number of spatials domains a food product appears ;
.                 gen numreg=1;
{txt} 93{com}.                 collapse (sum) numreg cumshr`pass', by (product descript);
{txt} 94{com}.                 keep product numreg descript;
{txt} 95{com}.                 display _N;
{txt} 96{com}.                 sort product;
{txt} 97{com}.                                 * Include food product labels ;
. *                merge product using "$path/work/products.dta";
. *                tab _merge;
. *                keep if _merge==3;
.                 keep product descript numreg;
{txt} 98{com}.                   sort product;
{txt} 99{com}.                      display _N;
{txt}100{com}.           save "$path/work/codes_food_basket_flex_it`pass'.dta", replace;
{txt}101{com}. **************************************************************************;
. **************************************************************************;
. * That is pretty much the part equivalent to "100_food_basket_flex.do",
> * which figures out the food shares for the relevant reference group. Now
> * we figure out the prices with a code stream that is adapted from
> * "110_price_unit_flex.do".
> **************************************************************************;
. **************************************************************************;
. **************************************************************************************
> * Create sorted data set with daily + own expenditure and the matched codes
> **************************************************************************************;
. use "$path/in/cons_cod_trans.dta", clear;
{txt}102{com}. *save "$path/work/cons_cod_trans.dta", replace;
. *drop value   ;
. *drop quantity;
. keep hhid product food_cat valuez quantityz unit;
{txt}103{com}. rename valuez    value;
{txt}104{com}. rename quantityz quantity;
{txt}105{com}. *drop count;
. drop if quantity==0 ;
{txt}106{com}.         tempfile dd_acsort;
{txt}107{com}.         save    `dd_acsort', replace;
{txt}108{com}. /*
>         use "$path/work/daily.dta", clear;
>                 drop days;
>                 sort product;
>                 tempfile dd_acsort;
>         save `dd_acsort', replace;
>         
>         use "$path/work/own.dta", clear;
>                 keep hhid product valued quantityd unit;
>                 rename valued value;
>                 rename quantityd quantity;
>         
>                 *CHECK THE ZEROS IN quantity FOR NOW DELETE;
>                 drop if quantity==0;
>         
>                 append using `dd_acsort';
> */
> 
>                 *CA modified to insert work/hhdata.dta for bootstrap;
.                 sort hhid;
{txt}109{com}.                 merge hhid using "$path/work/hhdata.dta";
{txt}110{com}.                 tab _m;
{txt}111{com}.                  drop if _m==2;
{txt}112{com}.                 drop _m;
{txt}113{com}.                                 sort product;
{txt}114{com}.                 gen count=1;
{txt}115{com}.         save `dd_acsort', replace;
{txt}116{com}.         **************************************************************************;
. * Merge the basket codes with the dd  and own data sets.
> * Drop all codes not a part of the flexible food basket
> **************************************************************************;
.                 merge product using "$path/work/codes_food_basket_flex_it`pass'.dta";
{txt}117{com}.                         tab _merge;
{txt}118{com}.                 drop if _merge~=3;
{txt}119{com}.                 drop _merge;
{txt}120{com}. **************************************************************************************
> * Drop observations where product code, quantity or value information is unavailable
> **************************************************************************************;
.                 drop if product==. | value==. | quantity==.  ;
{txt}121{com}.         **************************************************************************************
> * Convert non-KG quantities (units, liters) into kilograms
> **************************************************************************************;
. *do "$path/new/110a_conversions.do"
> 
> ********************************************************************
> * There remain a few difficult to interpret observations such as liters
> * of fish and liters of pasta. These are dropped.
> ********************************************************************;
. *                $MZ drop if unit~=2;
.         **************************************************************************;
. * Bring in the spdomain and reg_tpi variables, and also the information on
> * relatively poor households.
> **************************************************************************;
.                 preserve;
{txt}122{com}.                                                 * Temporally adjusted expenditure ;
.                         use `contpi', clear;
{txt}123{com}.                                 keep hhid hhweight spdomain reg_tpi survquar tpi_trim cons_pc_tpi ;
{txt}124{com}.                                 sort hhid;
{txt}125{com}.                                 tempfile hhd2;
{txt}126{com}.                         save `hhd2', replace;
{txt}127{com}.                 restore;
{txt}128{com}.                                 compress;
{txt}129{com}.                 sort hhid;
{txt}130{com}.                 merge hhid using `hhd2';
{txt}131{com}.                 tab _merge;
{txt}132{com}.                 drop _merge;
{txt}133{com}.                 sort hhid;
{txt}134{com}.                 merge hhid using "$path/work/relpoor_it`pass'.dta";
{txt}135{com}.                 tab _merge;
{txt}136{com}.                 drop _merge;
{txt}137{com}.                                                 * Keep nominal food transactions by poor people ;
.                 keep if relpoor`pass';
{txt}138{com}.                 drop if product==.;
{txt}139{com}.                                                                 * Temporally deflate transaction values ;
.                 gen value_r=value/tpi_trim;
{txt}140{com}. **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each spdomain & product combination. This should eliminate outliers
> * that may have an undue influence on the price calculation. 
> **************************************************************************;
.                 gen hhppkg=value_r/quantity;
{txt}141{com}.                 egen lower5=pctile(hhppkg), p(5)  by(spdomain product);
{txt}142{com}.                 egen upper5=pctile(hhppkg), p(95) by(spdomain product);
{txt}143{com}.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
{txt}144{com}. *********************************************************************
> * Note that we do prices in three ways. First, by summing quantity and value 
> * This average price price_uw is thus quantity/value weighted. Second, we
> * calculate the price and take simple means for a transaction weighted
> * price, price_ut. Last we take the median, price_um. But in the end
> * we only use price_unitw
> *********************************************************************;
.                 gen price_ut`pass'=value_r/(quantity*1000);
{txt}145{com}.                 gen price_um`pass'=price_ut;
{txt}146{com}.                 collapse (sum) 
>                         quantity value_r count bswt (mean) price_ut (median) price_um [aw=hhweight], 
>                         by(spdomain product);
{txt}147{com}.                 *Generate weighted price per gram ;
.                 gen price_uw`pass'=value_r/(quantity*1000);
{txt}148{com}.                 drop value_r quantity;
{txt}149{com}.                 sort spdomain product;
{txt}150{com}.                 lab var price_ut`pass' "Average of calculated prices - transaction weighted";
{txt}151{com}.                 lab var price_um`pass' "Median of prices";
{txt}152{com}.                 lab var price_uw`pass' "Value share weighted mean prices";
{txt}153{com}. * Get an idea of the difference between the price measures;
.                 gen ratiotw`pass'=price_ut`pass'/price_uw`pass';
{txt}154{com}.                 gen ratiomw`pass'=price_um`pass'/price_uw`pass';
{txt}155{com}.                 sum ratiotw`pass' ratiomw`pass';
{txt}156{com}.                 sort product;
{txt}157{com}.                 merge product using "$path/work/codes_food_basket_flex_it`pass'.dta";
{txt}158{com}.                 tab _m;
{txt}159{com}.                 count if _merge~=3;
{txt}160{com}.                 drop if _merge~=3;
{txt}161{com}.                 drop _merge;
{txt}162{com}.                 sort product spdomain;
{txt}163{com}.         save "$path/work/price_unit_flex_it`pass'.dta", replace;
{txt}164{com}. **************************************************************************;
. **************************************************************************;
. * That concludes the prices part. Now we move to calculating the food
> * poverty lines, which draws code from "120_povline_flex.do" with very few
> * changes:
> * - The changes facilitate accumulating vectors
> *   of intermediate results across iterations, rather than generating a
> *   bunch of new files.
> **************************************************************************;
. **************************************************************************;
. **************************************************************************;
. * Use the file with the food basket (`foodshares'), which is in shares. 
> * Then merge it with the prices file, and then with the calories file.
> * Along the way, drop those observations where we have no price information
> * or no calorie information, but list them out.
> **************************************************************************;
.         use `foodshares', clear;
{txt}165{com}.                 sort product spdomain;
{txt}166{com}.                 merge product spdomain using "$path/work/price_unit_flex_it`pass'.dta";
{txt}167{com}.                         tab _merge;
{txt}168{com}.                 list product spdomain descript if _merge==1;
{txt}169{com}.                         drop if _merge ~=3;
{txt}170{com}.                 drop _merge;
{txt}171{com}.                 sort product;
{txt}172{com}.                         merge product using "$path/work/calperg.dta";
{txt}173{com}.                 tab _merge;
{txt}174{com}.                                                 * This tells where we are lacking calorie info or are lacking quantity info due to 
>                 * missing price info above;
.                 list product spdomain descript if _merge==1;
{txt}175{com}.                         drop if _merge~=3;
{txt}176{com}.                 drop _merge;
{txt}177{com}.                 sort spdomain f_share_w`pass';
{txt}178{com}.                                 *CA modified to change count bswt;
.                 by spdomain: count if round(bswt)<10;
{txt}179{com}.                                 sum bswt;
{txt}180{com}.                                                 drop if round(bswt) < 10;
{txt}181{com}.                                                                 * Total food share in spatial domain ;
.                 by spdomain: egen baskshr=sum(f_share_w`pass');
{txt}182{com}.                                 * Cumulated food share in spatial domain ;
.                 by spdomain: gen  cumshr =sum(f_share_w`pass');
{txt}183{com}.                 drop if cumshr<=baskshr-.9;
{txt}184{com}.                         drop baskshr;
{txt}185{com}.                 by spdomain: egen baskshr=sum(f_share_w`pass');
{txt}186{com}.                 tabstat baskshr , by(spdomain) st(n mean sd min max);
{txt}187{com}.                                                                 * How many grams in 1 MT exp on food item ;
.                                 gen quan`pass'=f_share_w`pass'/price_uw`pass';
{txt}188{com}.                                 * How many calories in 1 MT exp on food item ;
.                 gen cal_ir`pass'=quan`pass'*calperg;
{txt}189{com}.                                 * how many calories in 1 MT exp in food basket ;
.                 by spdomain: egen calreg=sum(cal_ir);
{txt}190{com}.                         sort spdomain;
{txt}191{com}.                 merge spdomain using "$path/work/calpp.dta";
{txt}192{com}.                 tab _merge;
{txt}193{com}.                 drop _merge;
{txt}194{com}.                                                         * get the expansion factor to hit 95% of calorie requirements ;
.                 gen ratio=.95*calpp/calreg;
{txt}195{com}.                         replace quan`pass'=quan`pass'*ratio;
{txt}196{com}.                 replace cal_ir`pass'=quan`pass'*calperg;
{txt}197{com}.                         sort spdomain product;
{txt}198{com}.                 by spdomain: egen chkcal=sum(cal_ir`pass');
{txt}199{com}.                 replace chkcal=chkcal/.95-calpp ;
{txt}200{com}.                                                 tabstat chkcal , by(spdomain) st(n mean sd min max);
{txt}201{com}.                         gen val_ir`pass'=quan`pass'*price_uw`pass';
{txt}202{com}.                         by spdomain: egen povline_f_flex90_`pass'=sum(val_ir`pass');
{txt}203{com}.                 replace povline_f=povline_f_flex90_`pass'/.9;
{txt}204{com}.                 *drop product96;
. keep product spdomain quan`pass'  price_uw`pass' val_ir`pass' povline_f_flex90_`pass' calpp calperg;
{txt}205{com}.                     save "$path/work/quan_flex_it`pass'.dta", replace;
{txt}206{com}.                         collapse (mean) povline_f_flex90_`pass', by (spdomain);
{txt}207{com}.                                                 keep spdomain povline_f_flex90_`pass';
{txt}208{com}.                 sort spdomain;
{txt}209{com}.                 save "$path/work/povline_food_flex_it`pass'.dta", replace;
{txt}210{com}.         **************************************************************************;
. **************************************************************************;
. * Now comes the part that draws the non-food and total poverty lines,
> * and generates estimates of poverty measures. This is drawn from 
> * "130_povmeas_flex.do" with a few changes.
> **************************************************************************;
. **************************************************************************;
. **************************************************************************
> * Calculate non-food expenditure for HH around the food poverty line
> *
> * Develop a discrete triangular weighted distribution. This gives a
> * weight of  1 to HH at +/- 18-20% from food poverty line, and
> * weight of  2 to HH at +/- 16-18% from food poverty line, and ...
> * weight of 10 to HH at +/-  0- 2% from food poverty line.
> * This weight is called triwt below.
> **************************************************************************;
.         use `contpi', clear;
{txt}211{com}.                 sort spdomain;
{txt}212{com}.                 merge spdomain using "$path/work/povline_food_flex_it`pass'.dta";
{txt}213{com}.                 tab _merge;
{txt}214{com}.                 drop _merge;
{txt}215{com}.                 gen triwt=0 ;
{txt}216{com}.                 replace triwt = 11 - round(50*abs(cons_pc_tpi/povline_f_flex90_`pass'-1)+0.5)
>                 if abs(cons_pc_tpi/povline_f_flex90_`pass'-1)<=0.2;
{txt}217{com}.                                 ***since the poor were very few in Kampala and Central urban for Uganda we added 1 to weights****
>                                 * Nearness to poverty line and population weights ;
.                 gen tripopwt=(0.001+triwt)*hhweight*hhsize;
{txt}218{com}.                                                 preserve;
{txt}219{com}.                         collapse (mean) nf_pc_nom [aw=tripopwt] , by(spdomain);
{txt}220{com}.                         rename nf_pc_nom povline_nf_flex`pass';
{txt}221{com}.                         lab var povline_nf_flex`pass' "Nonfood poverty line. Flexible bundle";
{txt}222{com}.                         tempfile znf;
{txt}223{com}.                         sort spdomain;
{txt}224{com}.                         save `znf', replace;
{txt}225{com}.                                                                 restore;
{txt}226{com}.                                 sort spdomain;
{txt}227{com}.                 merge spdomain using `znf';
{txt}228{com}.                 tab _merge;
{txt}229{com}.                 drop _merge;
{txt}230{com}. **************************************************************************
> * Poverty line is the sum of the food and non-food poverty lines
> **************************************************************************;
.                 gen povline_flex`pass'=povline_f_flex90_`pass' + povline_nf_flex`pass';
{txt}231{com}. keep spdomain povline_flex`pass';
{txt}232{com}.                 sort spdomain;
{txt}233{com}.         save "$path/work/povlines_it`pass'.dta", replace;
{txt}234{com}. **************************************************************************;
. * Create spatial price index, based on the total poverty line, with
> * adjustment so that mean (and total) nominal consumption equals
> * mean (and total) spatially deflated consumption.
> *
> * Choose arbitrary strata to be the base at first: we just use the first stratum.
> **************************************************************************;
.         use `contpi', clear;
{txt}235{com}.                 sort spdomain;
{txt}236{com}.                 merge spdomain using "$path/work/povlines_it`pass'.dta";
{txt}237{com}.                 tab _merge;
{txt}238{com}.                 drop _merge;
{txt}239{com}.                 gen cr= cons_pc_tpi ;
{txt}240{com}.                 gen linpob`pass'=povline_flex`pass';
{txt}241{com}.                 qui sum linpob`pass' if spdomain==1, meanonly;
{txt}242{com}.                 global spi_base=r(mean);
{txt}243{com}.                 gen spi`pass'=linpob`pass'/$spi_base;
{txt}244{com}.                 gen cr_it`pass'=cr/spi`pass';
{txt}245{com}.                 qui sum cr [aw=hhweight*hhsize];
{txt}246{com}.                 global sumcr=r(sum);
{txt}247{com}.                 qui sum cr_it`pass' [aw=hhweight*hhsize];
{txt}248{com}.                 global sumcr2=r(sum);
{txt}249{com}.                 replace spi`pass'=spi`pass'*$sumcr2/$sumcr;
{txt}250{com}.                 gen linpobr`pass'=linpob`pass'/spi`pass';
{txt}251{com}.                 replace cr_it`pass'=cr/spi`pass';
{txt}252{com}.                 su cr cr_it`pass' linpob`pass' linpobr`pass' [aw=hhweight*hhsize];
{txt}253{com}.                 lab var cr "Temporally-adjusted cons pc";
{txt}254{com}.                 lab var cr_it`pass' "Spatially & temporally adjusted cons pc";
{txt}255{com}.                 lab var linpob`pass' "Poverty line";
{txt}256{com}.                 lab var linpobr`pass' "Real poverty line";
{txt}257{com}.                 lab var spi`pass' "Spatial price index";
{txt}258{com}.                 gen linpob=linpob`pass';
{txt}259{com}. **************************************************************************
> * calculate poverty measures with the flexible food bundle
> **************************************************************************;
.                 gen h=100 if cr_it`pass'<=linpobr`pass' & linpobr`pass'~=. & cr_it`pass'~=.;
{txt}260{com}.                 replace  h   = 0 if cr_it`pass' > linpobr`pass' & linpobr`pass'~=. & cr_it`pass'~=.;
{txt}261{com}.                 gen      pg  = ((linpobr`pass' - cr_it`pass' )/linpobr`pass') *100;
{txt}262{com}.                 replace  pg  = 0             if h==0;
{txt}263{com}.                 gen      spg = ((( linpobr`pass' - cr_it`pass' )/ linpobr`pass' )^2)*100;
{txt}264{com}.                 replace  spg = 0             if h==0;
{txt}265{com}.                 gen h_flex`pass'  =h;
{txt}266{com}.                 gen pg_flex`pass' =pg;
{txt}267{com}.                 gen spg_flex`pass'=spg;
{txt}268{com}.                                 lab var h_flex`pass'   "Poverty headcount. Flexible bundle";
{txt}269{com}.                 lab var pg_flex`pass'  "Poverty gap. Flexible bundle";
{txt}270{com}.                 lab var spg_flex`pass' "Squared poverty gap. Flexible bundle";
{txt}271{com}.                 gen popwt=hhsize*hhweight;
{txt}272{com}.                         * Stata 10.1 syntax ;
.                         svyset , clear;
{txt}273{com}.                         svyset [pweight=popwt] , str(strata) psu(psu);
{txt}274{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass';
{txt}275{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(rural);
{txt}276{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(strata);
{txt}277{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(strata rural);
{txt}278{com}.                 svy: mean h_flex`pass' pg_flex`pass' spg_flex`pass' , over(spdomain);
{txt}279{com}. *preserve;
. keep hhid popwt cr_it`pass' h_flex`pass' pg_flex`pass' spg_flex`pass' rural news reg_tpi strata spdomain;
{txt}280{com}.                 compress;
{txt}281{com}.                 sort hhid;
{txt}282{com}.         save "$path/work/cons_real_it`pass'.dta" , replace;
{txt}283{com}. *restore;
.                                 * New cutoff point (percentile) to use in next iteration is equal to the poverty ;
.                 * rate in this iteration ;
.                                                 sum h_flex`pass' [aw=popwt] ;
{txt}284{com}.                                 * Comment out next line for IAF 2002/03 in order to replicate official figures ( START );
.                 * URB: In this case, we just use the poorest 50% as there are too few actually poor to calculate the bundle and prices..;
.                 local cutpt= $tpi_bottom;
{txt}285{com}. *               local cutpt= round(r(mean));
.                 * Comment out next line for IAF 2002/03 in order to replicate official figures ( END );
. *       save foodshares tempfile to disk;
.         use `foodshares', clear;
{txt}286{com}.         save "$path/work/foodshares_it`pass'.dta", replace;
{txt}287{com}.         local lastpass = `pass';
{txt}288{com}.         local pass = `pass' + 1;
{txt}289{com}.         {c )-};
{txt}(note: file /tmp/St08757.000002 not found)
file /tmp/St08757.000002 saved
file cutoff.dta saved
{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00

   {txt}relpoor1 {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,386.7117       49.99       49.99
{txt}          1 {c |}{res} 3,388.2883       50.01      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/relpoor_it1.dta saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(0 observations deleted)
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(238368 observations deleted)
(139477 missing values generated)
{res}139477
    0
{txt}(139588 missing values generated)
{res}139588
{txt}(139588 observations deleted)
(note: file /tmp/St08757.000003 not found)
file /tmp/St08757.000003 saved
(note: file /tmp/St08757.000004 not found)
file /tmp/St08757.000004 saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     34,089      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     34,089      100.00
  150
{txt}(150 observations deleted)
file /tmp/St08757.000003 saved
46
46
file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex_it1.dta saved
(4392 observations deleted)
(note: file /tmp/St08757.000005 not found)
file /tmp/St08757.000005 saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        0.02        0.02
{txt}          3 {c |}{res}     85,204       99.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,218      100.00
{txt}(14 observations deleted)
file /tmp/St08757.000005 saved
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}      9,890       11.61       11.61
{txt}          3 {c |}{res}     75,314       88.39      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}(9890 observations deleted)
(0 observations deleted)
(note: file /tmp/St08757.000007 not found)
file /tmp/St08757.000007 saved
product was {res}float{txt} now {res}int
{txt}unit was {res}float{txt} now {res}byte
{txt}food_cat was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}count was {res}float{txt} now {res}byte
{txt}descript was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}numreg was {res}double{txt} now {res}byte
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
survquar was {res}byte{txt} now {res}float
{txt}spdomain was {res}byte{txt} now {res}float
{txt}reg_tpi was {res}byte{txt} now {res}float
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         26        0.03        0.03
{txt}          3 {c |}{res}     75,314       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     75,340      100.00
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     75,340      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     75,340      100.00
{txt}(46545 observations deleted)
(12 observations deleted)
(2138 observations deleted)

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}ratiotw1 {c |}{res}       226    1.290407    .5330726   .8470508   4.163267
{txt}{space 4}ratiomw1 {c |}{res}       226    1.087097    .3989423   .0740589   3.626859
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
product was {res}int{txt} now {res}float

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        226      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        226      100.00
    0
{txt}(0 observations deleted)
file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex_it1.dta saved
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         75       33.19       33.19
{txt}          3 {c |}{res}        151       66.81      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        226      100.00
{txt}(75 observations deleted)
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         16        9.58        9.58
{txt}          3 {c |}{res}        151       90.42      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        167      100.00
{txt}(16 observations deleted)

{hline}
-> spdomain = Central rural
{res}    1
{txt}{hline}
-> spdomain = Central urban
{res}    4
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}       151    162.2848    154.5015          3        975
{txt}(5 observations deleted)
(13 observations deleted)

Summary for variables: baskshr
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .9034219         0  .9034219  .9034219
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       25  .8783244         0  .8783244  .8783244
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27  .9059556         0  .9059556  .9059556
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .9013325         0  .9013325  .9013325
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28  .9012202         0  .9012202  .9012202
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      133  .8983467  .0098257  .8783244  .9059556
{txt}{hline 14}{c BT}{hline 50}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        133      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        133      100.00
{txt}(133 real changes made)
(126 real changes made)
(133 real changes made)

Summary for variables: chkcal
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .0001156         0  .0001156  .0001156
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       25  .0000257         0  .0000257  .0000257
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27 -.0000128         0 -.0000128 -.0000128
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26 -.0001156         0 -.0001156 -.0001156
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28 -.0000514         0 -.0000514 -.0000514
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      133 -7.73e-06  .0000776 -.0001156  .0001156
{txt}{hline 14}{c BT}{hline 50}
(133 real changes made)
file /home/bjvca/data/data/GAP/Haruna/work/quan_flex_it1.dta saved
file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex_it1.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(343 real changes made)
(note: file /tmp/St08757.000009 not found)
file /tmp/St08757.000009 saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines_it1.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines_it1.dta
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(6775 real changes made)
(6775 real changes made)

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 6}cr_it1 {c |}{res}    6775   200636622    9421.297   196713.2   108.1682   3.96e+07
{txt}{space 5}linpob1 {c |}{res}    6775   200636622    1149.867   588.1333   806.6129   3111.991
{txt}{space 4}linpobr1 {c |}{res}    6775   200636622    1518.828   .0000587   1518.828   1518.828
{txt}(5761 missing values generated)
(5761 real changes made)
(5761 real changes made)
(5761 real changes made)

      pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 5}h_flex1 {c |}{col 14}{res}{space 2}  13.6996{col 26}{space 2} .8664214{col 37}{space 5} 11.99851{col 51}{space 3} 15.40069
{txt}{space 4}pg_flex1 {c |}{col 14}{res}{space 2} 3.791809{col 26}{space 2} .2942101{col 37}{space 5}  3.21417{col 51}{space 3} 4.369447
{txt}{space 3}spg_flex1 {c |}{col 14}{res}{space 2} 1.588088{col 26}{space 2} .1588951{col 37}{space 5} 1.276121{col 51}{space 3} 1.900055
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex1      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 12.99706{col 26}{space 2} 2.714871{col 37}{space 5} 7.666809{col 51}{space 3} 18.32731
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 13.80691{col 26}{space 2} .9062973{col 37}{space 5} 12.02753{col 51}{space 3} 15.58629
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex1     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 4.557901{col 26}{space 2} 1.244207{col 37}{space 5} 2.115082{col 51}{space 3} 7.000719
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.674792{col 26}{space 2}  .280496{col 37}{space 5} 3.124079{col 51}{space 3} 4.225505
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex1    {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 2.113107{col 26}{space 2} .6767242{col 37}{space 5} .7844583{col 51}{space 3} 3.441756
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.507894{col 26}{space 2} .1509312{col 37}{space 5} 1.211563{col 51}{space 3} 1.804225
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex1      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 22.60121{col 26}{space 2} 6.455211{col 37}{space 5} 9.927346{col 51}{space 3} 35.27507
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 9.340196{col 26}{space 2} 2.044487{col 37}{space 5} 5.326145{col 51}{space 3} 13.35425
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 9.487355{col 26}{space 2}  1.96662{col 37}{space 5} 5.626184{col 51}{space 3} 13.34853
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 8.544658{col 26}{space 2} 1.600788{col 37}{space 5} 5.401744{col 51}{space 3} 11.68757
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 12.22193{col 26}{space 2} 2.237551{col 37}{space 5} 7.828827{col 51}{space 3} 16.61504
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 12.47709{col 26}{space 2} 2.403529{col 37}{space 5} 7.758115{col 51}{space 3} 17.19607
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 70.60768{col 26}{space 2} 6.336198{col 37}{space 5} 58.16748{col 51}{space 3} 83.04788
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 15.20253{col 26}{space 2} 4.536084{col 37}{space 5} 6.296588{col 51}{space 3} 24.10846
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 15.53387{col 26}{space 2} 2.493286{col 37}{space 5} 10.63867{col 51}{space 3} 20.42907
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 9.042614{col 26}{space 2} 1.307159{col 37}{space 5} 6.476199{col 51}{space 3} 11.60903
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex1     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 8.636489{col 26}{space 2} 3.231018{col 37}{space 5} 2.292858{col 51}{space 3} 14.98012
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 2.660811{col 26}{space 2} .7293552{col 37}{space 5} 1.228828{col 51}{space 3} 4.092793
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 2.134639{col 26}{space 2} .5131034{col 37}{space 5} 1.127235{col 51}{space 3} 3.142042
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.566412{col 26}{space 2} .2996977{col 37}{space 5} .9779996{col 51}{space 3} 2.154825
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 2.421305{col 26}{space 2} .4710501{col 37}{space 5} 1.496467{col 51}{space 3} 3.346143
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 4.127115{col 26}{space 2} .9450027{col 37}{space 5}  2.27174{col 51}{space 3} 5.982489
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 30.12371{col 26}{space 2} 3.618232{col 37}{space 5} 23.01983{col 51}{space 3} 37.22758
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 2.365465{col 26}{space 2} .4471331{col 37}{space 5} 1.487585{col 51}{space 3} 3.243346
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 4.586246{col 26}{space 2}  .909163{col 37}{space 5} 2.801237{col 51}{space 3} 6.371255
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 1.723642{col 26}{space 2} .3352481{col 37}{space 5} 1.065432{col 51}{space 3} 2.381853
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex1    {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 4.184295{col 26}{space 2} 1.806687{col 37}{space 5} .6371295{col 51}{space 3}  7.73146
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.037337{col 26}{space 2} .3358617{col 37}{space 5} .3779221{col 51}{space 3} 1.696753
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .7683975{col 26}{space 2} .2216536{col 37}{space 5} .3332131{col 51}{space 3} 1.203582
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .4808731{col 26}{space 2} .1116207{col 37}{space 5} .2617221{col 51}{space 3} .7000241
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} .6486847{col 26}{space 2} .1235436{col 37}{space 5} .4061249{col 51}{space 3} .8912444
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.866506{col 26}{space 2} .5205598{col 37}{space 5} .8444628{col 51}{space 3} 2.888549
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 16.09894{col 26}{space 2} 2.296325{col 37}{space 5} 11.59044{col 51}{space 3} 20.60743
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .7023031{col 26}{space 2} .1945727{col 37}{space 5}  .320288{col 51}{space 3} 1.084318
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 1.946598{col 26}{space 2} .5358058{col 37}{space 5} .8946217{col 51}{space 3} 2.998574
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .5271853{col 26}{space 2} .1461424{col 37}{space 5}  .240256{col 51}{space 3} .8141145
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

         {txt}Over: strata rural
    _subpop_1: {res}KAMPALA Urban
    {txt}_subpop_2: {res}CENTRAL 1 Urban
    {txt}_subpop_3: {res}CENTRAL 1 Rural
    {txt}_subpop_4: {res}CENTRAL 2 Urban
    {txt}_subpop_5: {res}CENTRAL 2 Rural
    {txt}_subpop_6: {res}EAST CENTRAL Urban
    {txt}_subpop_7: {res}EAST CENTRAL Rural
    {txt}_subpop_8: {res}EASTERN Urban
    {txt}_subpop_9: {res}EASTERN Rural
   {txt}_subpop_10: {res}MID-NOTHERN Urban
   {txt}_subpop_11: {res}MID-NOTHERN Rural
   {txt}_subpop_12: {res}NORTH-EAST Urban
   {txt}_subpop_13: {res}NORTH-EAST Rural
   {txt}_subpop_14: {res}WEST-NILE Urban
   {txt}_subpop_15: {res}WEST-NILE Rural
   {txt}_subpop_16: {res}MID-WESTERN Urban
   {txt}_subpop_17: {res}MID-WESTERN Rural
   {txt}_subpop_18: {res}SOUTH-WESTERN Urban
   {txt}_subpop_19: {res}SOUTH-WESTERN Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex1      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 22.60121{col 26}{space 2} 6.455211{col 37}{space 5} 9.927346{col 51}{space 3} 35.27507
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 25.29458{col 26}{space 2} 7.652763{col 37}{space 5} 10.26949{col 51}{space 3} 40.31966
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 5.261551{col 26}{space 2} 1.655424{col 37}{space 5} 2.011368{col 51}{space 3} 8.511733
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 6.652576{col 26}{space 2} 2.873413{col 37}{space 5} 1.011049{col 51}{space 3}  12.2941
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  10.0726{col 26}{space 2} 2.259879{col 37}{space 5} 5.635662{col 51}{space 3} 14.50955
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 9.022962{col 26}{space 2} 1.677882{col 37}{space 5} 5.728686{col 51}{space 3} 12.31724
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 3.705768{col 26}{space 2} 2.352816{col 37}{space 5}-.9136424{col 51}{space 3} 8.325178
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 12.89612{col 26}{space 2}  2.35453{col 37}{space 5} 8.273348{col 51}{space 3}  17.5189
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 13.83654{col 26}{space 2} 2.587216{col 37}{space 5} 8.756915{col 51}{space 3} 18.91616
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 6.831652{col 26}{space 2} 3.866863{col 37}{space 5}-.7603675{col 51}{space 3} 14.42367
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 72.96915{col 26}{space 2} 6.453431{col 37}{space 5} 60.29878{col 51}{space 3} 85.63952
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} 4.767413{col 26}{space 2}  4.38237{col 37}{space 5} -3.83673{col 51}{space 3} 13.37156
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 16.74839{col 26}{space 2}  4.90284{col 37}{space 5} 7.122384{col 51}{space 3}  26.3744
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 6.107057{col 26}{space 2}  6.00618{col 37}{space 5}-5.685199{col 51}{space 3} 17.89931
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 16.12309{col 26}{space 2}  2.58123{col 37}{space 5} 11.05522{col 51}{space 3} 21.19095
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 9.503417{col 26}{space 2} 1.354786{col 37}{space 5} 6.843493{col 51}{space 3} 12.16334
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex1     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 8.636489{col 26}{space 2} 3.231018{col 37}{space 5} 2.292858{col 51}{space 3} 14.98012
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 7.806909{col 26}{space 2} 2.254388{col 37}{space 5} 3.380748{col 51}{space 3} 12.23307
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2}  1.34524{col 26}{space 2} .5394409{col 37}{space 5} .2861266{col 51}{space 3} 2.404353
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 2.893498{col 26}{space 2} 1.460959{col 37}{space 5} .0251189{col 51}{space 3} 5.761878
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  1.97797{col 26}{space 2} .5483361{col 37}{space 5} .9013918{col 51}{space 3} 3.054547
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 1.654095{col 26}{space 2} .3153983{col 37}{space 5} 1.034857{col 51}{space 3} 2.273334
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.043473{col 26}{space 2} .6576297{col 37}{space 5}-.2476871{col 51}{space 3} 2.334632
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 2.530383{col 26}{space 2} .4974289{col 37}{space 5} 1.553754{col 51}{space 3} 3.507012
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 4.576785{col 26}{space 2} 1.026898{col 37}{space 5} 2.560621{col 51}{space 3} 6.592949
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 5.057493{col 26}{space 2}  2.86265{col 37}{space 5}-.5629024{col 51}{space 3} 10.67789
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 31.05185{col 26}{space 2} 3.735913{col 37}{space 5} 23.71693{col 51}{space 3} 38.38677
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .4878958{col 26}{space 2} .4469016{col 37}{space 5}-.3895302{col 51}{space 3} 1.365322
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2}  2.64361{col 26}{space 2} .4931806{col 37}{space 5} 1.675322{col 51}{space 3} 3.611898
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 1.196776{col 26}{space 2} 1.177007{col 37}{space 5}-1.114106{col 51}{space 3} 3.507658
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 4.798102{col 26}{space 2} .9480466{col 37}{space 5} 2.936751{col 51}{space 3} 6.659453
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 1.811478{col 26}{space 2} .3498969{col 37}{space 5} 1.124506{col 51}{space 3} 2.498449
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex1    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 4.184295{col 26}{space 2} 1.806687{col 37}{space 5} .6371295{col 51}{space 3}  7.73146
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.276476{col 26}{space 2} 1.077942{col 37}{space 5} 1.160094{col 51}{space 3} 5.392858
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4649145{col 26}{space 2} .2450567{col 37}{space 5}-.0162186{col 51}{space 3} .9460476
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.554872{col 26}{space 2} .8893312{col 37}{space 5}-.1911999{col 51}{space 3} 3.300944
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} .6060273{col 26}{space 2} .1999249{col 37}{space 5}  .213504{col 51}{space 3} .9985506
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} .5077909{col 26}{space 2} .1177141{col 37}{space 5} .2766764{col 51}{space 3} .7389054
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .2951854{col 26}{space 2} .1855671{col 37}{space 5}-.0691486{col 51}{space 3} .6595193
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} .6766699{col 26}{space 2} .1306233{col 37}{space 5} .4202102{col 51}{space 3} .9331297
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 2.069871{col 26}{space 2}  .569787{col 37}{space 5} .9511777{col 51}{space 3} 3.188565
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 3.744078{col 26}{space 2} 2.119229{col 37}{space 5}-.4167184{col 51}{space 3} 7.904874
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 16.55641{col 26}{space 2} 2.379244{col 37}{space 5} 11.88511{col 51}{space 3}  21.2277
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .0556701{col 26}{space 2} .0510563{col 37}{space 5}-.0445715{col 51}{space 3} .1559116
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} .7980958{col 26}{space 2} .2260727{col 37}{space 5} .3542351{col 51}{space 3} 1.241957
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} .3107939{col 26}{space 2} .3056602{col 37}{space 5}-.2893252{col 51}{space 3}  .910913
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 2.048843{col 26}{space 2} .5618056{col 37}{space 5} .9458193{col 51}{space 3} 3.151866
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} .5540502{col 26}{space 2} .1530934{col 37}{space 5} .2534736{col 51}{space 3} .8546267
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex1      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 7.684522{col 26}{space 2} 1.427945{col 37}{space 5}  4.88096{col 51}{space 3} 10.48808
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 19.90213{col 26}{space 2} 4.108265{col 37}{space 5} 11.83615{col 51}{space 3} 27.96811
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 10.56949{col 26}{space 2} 1.442223{col 37}{space 5} 7.737897{col 51}{space 3} 13.40109
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 22.80326{col 26}{space 2} 2.191153{col 37}{space 5} 18.50125{col 51}{space 3} 27.10527
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 12.38269{col 26}{space 2} 1.469326{col 37}{space 5} 9.497881{col 51}{space 3}  15.2675
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex1     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.663899{col 26}{space 2} .3864866{col 37}{space 5} .9050889{col 51}{space 3} 2.422709
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 7.196422{col 26}{space 2} 1.921248{col 37}{space 5} 3.424332{col 51}{space 3} 10.96851
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 2.037146{col 26}{space 2} .2973613{col 37}{space 5}  1.45332{col 51}{space 3} 2.620971
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 7.738908{col 26}{space 2} .8859857{col 37}{space 5} 5.999405{col 51}{space 3} 9.478412
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 3.196595{col 26}{space 2} .5200997{col 37}{space 5} 2.175455{col 51}{space 3} 4.217735
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex1    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .5359825{col 26}{space 2} .1580997{col 37}{space 5} .2255769{col 51}{space 3} .8463881
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.387597{col 26}{space 2} 1.060609{col 37}{space 5} 1.305247{col 51}{space 3} 5.469946
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} .5732759{col 26}{space 2} .0852804{col 37}{space 5} .4058403{col 51}{space 3} .7407115
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 3.776433{col 26}{space 2} .5238055{col 37}{space 5} 2.748017{col 51}{space 3} 4.804849
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 1.257544{col 26}{space 2} .2997294{col 37}{space 5}  .669069{col 51}{space 3} 1.846019
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}h_flex1 was {res}float{txt} now {res}byte
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real_it1.dta saved

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 5}h_flex1 {c |}{res}    6775   200636622     13.6996   34.38685          0        100
{txt}file /home/bjvca/data/data/GAP/Haruna/work/foodshares_it1.dta saved
file /tmp/St08757.000002 saved
{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00

   {txt}relpoor2 {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,387.0765       49.99       49.99
{txt}          1 {c |}{res} 3,387.9235       50.01      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/relpoor_it2.dta saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(0 observations deleted)
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(232233 observations deleted)
(144005 missing values generated)
{res}144005
    0
{txt}(144116 missing values generated)
{res}144116
{txt}(144116 observations deleted)
(note: file /tmp/St08757.00000a not found)
file /tmp/St08757.00000a saved
(note: file /tmp/St08757.00000b not found)
file /tmp/St08757.00000b saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     35,696      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     35,696      100.00
  150
{txt}(150 observations deleted)
file /tmp/St08757.00000a saved
49
49
file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex_it2.dta saved
(4392 observations deleted)
(note: file /tmp/St08757.00000c not found)
file /tmp/St08757.00000c saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        0.02        0.02
{txt}          3 {c |}{res}     85,204       99.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,218      100.00
{txt}(14 observations deleted)
file /tmp/St08757.00000c saved
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}      7,419        8.71        8.71
{txt}          3 {c |}{res}     77,785       91.29      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}(7419 observations deleted)
(0 observations deleted)
(note: file /tmp/St08757.00000e not found)
file /tmp/St08757.00000e saved
product was {res}float{txt} now {res}int
{txt}unit was {res}float{txt} now {res}byte
{txt}food_cat was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}count was {res}float{txt} now {res}byte
{txt}descript was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}numreg was {res}double{txt} now {res}byte
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
survquar was {res}byte{txt} now {res}float
{txt}spdomain was {res}byte{txt} now {res}float
{txt}reg_tpi was {res}byte{txt} now {res}float
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         24        0.03        0.03
{txt}          3 {c |}{res}     77,785       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     77,809      100.00
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     77,809      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     77,809      100.00
{txt}(47208 observations deleted)
(13 observations deleted)
(2282 observations deleted)

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}ratiotw2 {c |}{res}       243    1.232237    .4048386   .9125085   3.892401
{txt}{space 4}ratiomw2 {c |}{res}       243    1.070835    .3311016    .256602   3.626859
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
product was {res}int{txt} now {res}float

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        243      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        243      100.00
    0
{txt}(0 observations deleted)
file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex_it2.dta saved
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         87       35.80       35.80
{txt}          3 {c |}{res}        156       64.20      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        243      100.00
{txt}(87 observations deleted)
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         13        7.69        7.69
{txt}          3 {c |}{res}        156       92.31      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        169      100.00
{txt}(13 observations deleted)

{hline}
-> spdomain = Central rural
{res}    2
{txt}{hline}
-> spdomain = Central urban
{res}    0
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}       156    165.2885    145.1251          3        950
{txt}(2 observations deleted)
(16 observations deleted)

Summary for variables: baskshr
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .9007195         0  .9007195  .9007195
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       30  .9002704         0  .9002704  .9002704
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27  .9064491         0  .9064491  .9064491
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .9034315         0  .9034315  .9034315
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28  .9014875         0  .9014875  .9014875
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      138  .9024097    .00227  .9002704  .9064491
{txt}{hline 14}{c BT}{hline 50}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        138      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        138      100.00
{txt}(138 real changes made)
(132 real changes made)
(138 real changes made)

Summary for variables: chkcal
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .0001156         0  .0001156  .0001156
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       30  .0000257         0  .0000257  .0000257
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27 -.0000128         0 -.0000128 -.0000128
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .0001413         0  .0001413  .0001413
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28 -.0000514         0 -.0000514 -.0000514
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      138  .0000419  .0000733 -.0000514  .0001413
{txt}{hline 14}{c BT}{hline 50}
(138 real changes made)
file /home/bjvca/data/data/GAP/Haruna/work/quan_flex_it2.dta saved
file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex_it2.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(348 real changes made)
(note: file /tmp/St08757.00000g not found)
file /tmp/St08757.00000g saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines_it2.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines_it2.dta
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(6775 real changes made)
(6775 real changes made)

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 6}cr_it2 {c |}{res}    6775   200636622    9421.297   260006.3     96.555   5.30e+07
{txt}{space 5}linpob2 {c |}{res}    6775   200636622     1065.42   316.9577   804.4142   2069.398
{txt}{space 4}linpobr2 {c |}{res}    6775   200636622    1350.479   .0000488   1350.479   1350.479
{txt}(5840 missing values generated)
(5840 real changes made)
(5840 real changes made)
(5840 real changes made)

      pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 5}h_flex2 {c |}{col 14}{res}{space 2}  12.9764{col 26}{space 2}  .847151{col 37}{space 5} 11.31314{col 51}{space 3} 14.63966
{txt}{space 4}pg_flex2 {c |}{col 14}{res}{space 2} 3.432168{col 26}{space 2} .2595858{col 37}{space 5} 2.922509{col 51}{space 3} 3.941827
{txt}{space 3}spg_flex2 {c |}{col 14}{res}{space 2} 1.396019{col 26}{space 2} .1347131{col 37}{space 5} 1.131529{col 51}{space 3} 1.660508
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex2      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 7.500152{col 26}{space 2} 2.303739{col 37}{space 5} 2.977096{col 51}{space 3} 12.02321
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 13.81287{col 26}{space 2} .9066814{col 37}{space 5} 12.03273{col 51}{space 3}   15.593
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex2     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 1.986431{col 26}{space 2} .7031738{col 37}{space 5} .6058522{col 51}{space 3}  3.36701
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.652997{col 26}{space 2} .2794965{col 37}{space 5} 3.104246{col 51}{space 3} 4.201747
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex2    {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .7279768{col 26}{space 2} .2591818{col 37}{space 5} .2191111{col 51}{space 3} 1.236842
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.498058{col 26}{space 2} .1503256{col 37}{space 5} 1.202916{col 51}{space 3} 1.793201
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex2      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 13.68324{col 26}{space 2} 6.138886{col 37}{space 5} 1.630437{col 51}{space 3} 25.73605
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 6.922929{col 26}{space 2} 1.610524{col 37}{space 5}   3.7609{col 51}{space 3} 10.08496
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 8.885546{col 26}{space 2} 1.961832{col 37}{space 5} 5.033775{col 51}{space 3} 12.73732
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 8.459116{col 26}{space 2} 1.607453{col 37}{space 5} 5.303118{col 51}{space 3} 11.61511
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 12.14819{col 26}{space 2} 2.243222{col 37}{space 5} 7.743957{col 51}{space 3} 16.55243
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}  12.2828{col 26}{space 2} 2.368478{col 37}{space 5} 7.632636{col 51}{space 3} 16.93296
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 70.60768{col 26}{space 2} 6.336198{col 37}{space 5} 58.16748{col 51}{space 3} 83.04788
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 15.20253{col 26}{space 2} 4.536084{col 37}{space 5} 6.296588{col 51}{space 3} 24.10846
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 15.53387{col 26}{space 2} 2.493286{col 37}{space 5} 10.63867{col 51}{space 3} 20.42907
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 9.042614{col 26}{space 2} 1.307159{col 37}{space 5} 6.476199{col 51}{space 3} 11.60903
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex2     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 3.761565{col 26}{space 2} 1.935551{col 37}{space 5}-.0386075{col 51}{space 3} 7.561737
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.576555{col 26}{space 2} .4685212{col 37}{space 5} .6566816{col 51}{space 3} 2.496427
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.901124{col 26}{space 2}  .487986{col 37}{space 5} .9430348{col 51}{space 3} 2.859213
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.551553{col 26}{space 2} .2979808{col 37}{space 5} .9665109{col 51}{space 3} 2.136594
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 2.400372{col 26}{space 2}  .467639{col 37}{space 5} 1.482231{col 51}{space 3} 3.318513
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 4.104517{col 26}{space 2} .9415544{col 37}{space 5} 2.255913{col 51}{space 3} 5.953122
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 30.01305{col 26}{space 2} 3.611849{col 37}{space 5} 22.92171{col 51}{space 3} 37.10439
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 2.330378{col 26}{space 2} .4428087{col 37}{space 5} 1.460987{col 51}{space 3} 3.199768
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 4.543408{col 26}{space 2} .9042557{col 37}{space 5} 2.768034{col 51}{space 3} 6.318782
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 1.695003{col 26}{space 2} .3329403{col 37}{space 5} 1.041324{col 51}{space 3} 2.348683
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex2    {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 1.362808{col 26}{space 2} .6850528{col 37}{space 5} .0178073{col 51}{space 3} 2.707809
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .5366842{col 26}{space 2} .2148049{col 37}{space 5} .1149462{col 51}{space 3} .9584222
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2}  .633475{col 26}{space 2} .1866707{col 37}{space 5} .2669744{col 51}{space 3} .9999757
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .4762616{col 26}{space 2} .1109587{col 37}{space 5} .2584105{col 51}{space 3} .6941128
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} .6411472{col 26}{space 2} .1222055{col 37}{space 5} .4012145{col 51}{space 3} .8810799
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.854193{col 26}{space 2} .5183684{col 37}{space 5} .8364527{col 51}{space 3} 2.871934
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 16.02247{col 26}{space 2} 2.289255{col 37}{space 5} 11.52785{col 51}{space 3} 20.51708
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .6932947{col 26}{space 2} .1936282{col 37}{space 5}  .313134{col 51}{space 3} 1.073455
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 1.926067{col 26}{space 2} .5333269{col 37}{space 5} .8789581{col 51}{space 3} 2.973177
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .5179156{col 26}{space 2} .1448484{col 37}{space 5}  .233527{col 51}{space 3} .8023042
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

         {txt}Over: strata rural
    _subpop_1: {res}KAMPALA Urban
    {txt}_subpop_2: {res}CENTRAL 1 Urban
    {txt}_subpop_3: {res}CENTRAL 1 Rural
    {txt}_subpop_4: {res}CENTRAL 2 Urban
    {txt}_subpop_5: {res}CENTRAL 2 Rural
    {txt}_subpop_6: {res}EAST CENTRAL Urban
    {txt}_subpop_7: {res}EAST CENTRAL Rural
    {txt}_subpop_8: {res}EASTERN Urban
    {txt}_subpop_9: {res}EASTERN Rural
   {txt}_subpop_10: {res}MID-NOTHERN Urban
   {txt}_subpop_11: {res}MID-NOTHERN Rural
   {txt}_subpop_12: {res}NORTH-EAST Urban
   {txt}_subpop_13: {res}NORTH-EAST Rural
   {txt}_subpop_14: {res}WEST-NILE Urban
   {txt}_subpop_15: {res}WEST-NILE Rural
   {txt}_subpop_16: {res}MID-WESTERN Urban
   {txt}_subpop_17: {res}MID-WESTERN Rural
   {txt}_subpop_18: {res}SOUTH-WESTERN Urban
   {txt}_subpop_19: {res}SOUTH-WESTERN Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex2      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 13.68324{col 26}{space 2} 6.138886{col 37}{space 5} 1.630437{col 51}{space 3} 25.73605
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 11.10341{col 26}{space 2} 2.820571{col 37}{space 5} 5.565626{col 51}{space 3} 16.64118
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 5.854214{col 26}{space 2} 1.723483{col 37}{space 5} 2.470408{col 51}{space 3}  9.23802
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 2.997339{col 26}{space 2} 1.831962{col 37}{space 5}-.5994499{col 51}{space 3} 6.594128
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} 10.10119{col 26}{space 2} 2.258801{col 37}{space 5}  5.66636{col 51}{space 3} 14.53601
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 8.932632{col 26}{space 2} 1.685272{col 37}{space 5} 5.623846{col 51}{space 3} 12.24142
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 3.705768{col 26}{space 2} 2.352816{col 37}{space 5}-.9136424{col 51}{space 3} 8.325178
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 12.81655{col 26}{space 2} 2.361396{col 37}{space 5} 8.180296{col 51}{space 3} 17.45281
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 13.62107{col 26}{space 2} 2.549022{col 37}{space 5} 8.616437{col 51}{space 3}  18.6257
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 6.831652{col 26}{space 2} 3.866863{col 37}{space 5}-.7603675{col 51}{space 3} 14.42367
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 72.96915{col 26}{space 2} 6.453431{col 37}{space 5} 60.29878{col 51}{space 3} 85.63952
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} 4.767413{col 26}{space 2}  4.38237{col 37}{space 5} -3.83673{col 51}{space 3} 13.37156
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 16.74839{col 26}{space 2}  4.90284{col 37}{space 5} 7.122384{col 51}{space 3}  26.3744
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 6.107057{col 26}{space 2}  6.00618{col 37}{space 5}-5.685199{col 51}{space 3} 17.89931
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 16.12309{col 26}{space 2}  2.58123{col 37}{space 5} 11.05522{col 51}{space 3} 21.19095
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 9.503417{col 26}{space 2} 1.354786{col 37}{space 5} 6.843493{col 51}{space 3} 12.16334
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex2     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 3.761565{col 26}{space 2} 1.935551{col 37}{space 5}-.0386075{col 51}{space 3} 7.561737
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 2.426845{col 26}{space 2} .9009072{col 37}{space 5} .6580456{col 51}{space 3} 4.195645
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.359183{col 26}{space 2} .5422473{col 37}{space 5} .2945592{col 51}{space 3} 2.423806
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.403294{col 26}{space 2}  .916837{col 37}{space 5}-.3967819{col 51}{space 3} 3.203369
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} 2.003903{col 26}{space 2} .5524669{col 37}{space 5} .9192148{col 51}{space 3} 3.088591
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 1.638404{col 26}{space 2}  .313613{col 37}{space 5}  1.02267{col 51}{space 3} 2.254137
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.037785{col 26}{space 2} .6540199{col 37}{space 5}-.2462876{col 51}{space 3} 2.321857
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 2.508243{col 26}{space 2} .4938587{col 37}{space 5} 1.538624{col 51}{space 3} 3.477863
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 4.551725{col 26}{space 2} 1.023234{col 37}{space 5} 2.542755{col 51}{space 3} 6.560695
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 5.052644{col 26}{space 2} 2.859906{col 37}{space 5}-.5623627{col 51}{space 3} 10.66765
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 30.93728{col 26}{space 2} 3.729506{col 37}{space 5} 23.61493{col 51}{space 3} 38.25962
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .4761986{col 26}{space 2} .4361449{col 37}{space 5}-.3801081{col 51}{space 3} 1.332505
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 2.605057{col 26}{space 2} .4897061{col 37}{space 5} 1.643591{col 51}{space 3} 3.566524
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 1.177562{col 26}{space 2} 1.158111{col 37}{space 5}-1.096219{col 51}{space 3} 3.451344
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 4.753788{col 26}{space 2} .9430307{col 37}{space 5} 2.902285{col 51}{space 3} 6.605291
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 1.781379{col 26}{space 2} .3475407{col 37}{space 5} 1.099034{col 51}{space 3} 2.463725
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex2    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.362808{col 26}{space 2} .6850528{col 37}{space 5} .0178073{col 51}{space 3} 2.707809
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .7952926{col 26}{space 2} .4667145{col 37}{space 5}-.1210332{col 51}{space 3} 1.711618
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4705724{col 26}{space 2} .2468126{col 37}{space 5} -.014008{col 51}{space 3} .9551528
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .7236437{col 26}{space 2} .4890863{col 37}{space 5}-.2366058{col 51}{space 3} 1.683893
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} .6148594{col 26}{space 2} .2019747{col 37}{space 5} .2183115{col 51}{space 3} 1.011407
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} .5029213{col 26}{space 2} .1170187{col 37}{space 5} .2731722{col 51}{space 3} .7326703
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .2919968{col 26}{space 2} .1835625{col 37}{space 5}-.0684014{col 51}{space 3}  .652395
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} .6687881{col 26}{space 2} .1292172{col 37}{space 5} .4150891{col 51}{space 3} .9224872
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 2.056217{col 26}{space 2}  .567428{col 37}{space 5} .9421552{col 51}{space 3} 3.170279
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 3.736901{col 26}{space 2} 2.115167{col 37}{space 5}-.4159197{col 51}{space 3} 7.889722
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 16.47737{col 26}{space 2} 2.371973{col 37}{space 5} 11.82035{col 51}{space 3} 21.13439
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2}  .053336{col 26}{space 2} .0489188{col 37}{space 5}-.0427089{col 51}{space 3} .1493809
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} .7880987{col 26}{space 2} .2250614{col 37}{space 5} .3462235{col 51}{space 3} 1.229974
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} .3039219{col 26}{space 2} .2989016{col 37}{space 5}-.2829278{col 51}{space 3} .8907715
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 2.027458{col 26}{space 2} .5592517{col 37}{space 5} .9294494{col 51}{space 3} 3.125467
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} .5443081{col 26}{space 2} .1517471{col 37}{space 5} .2463749{col 51}{space 3} .8422414
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex2      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 7.993099{col 26}{space 2} 1.444763{col 37}{space 5} 5.156519{col 51}{space 3} 10.82968
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 10.73414{col 26}{space 2} 3.529638{col 37}{space 5} 3.804209{col 51}{space 3} 17.66406
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 10.49045{col 26}{space 2} 1.446609{col 37}{space 5} 7.650245{col 51}{space 3} 13.33065
{txt}{space 4}Northern {c |}{col 14}{res}{space 2}   22.706{col 26}{space 2} 2.183922{col 37}{space 5} 18.41819{col 51}{space 3} 26.99381
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 12.38269{col 26}{space 2} 1.469326{col 37}{space 5} 9.497881{col 51}{space 3}  15.2675
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex2     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2}  1.68388{col 26}{space 2} .3890053{col 37}{space 5} .9201254{col 51}{space 3} 2.447635
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 2.911605{col 26}{space 2} 1.117795{col 37}{space 5} .7169772{col 51}{space 3} 5.106232
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 2.018942{col 26}{space 2} .2953112{col 37}{space 5} 1.439142{col 51}{space 3} 2.598742
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 7.697846{col 26}{space 2} .8844963{col 37}{space 5} 5.961267{col 51}{space 3} 9.434425
{txt}{space 5}Western {c |}{col 14}{res}{space 2}  3.16065{col 26}{space 2} .5172696{col 37}{space 5} 2.145066{col 51}{space 3} 4.176233
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex2    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .5432391{col 26}{space 2} .1594374{col 37}{space 5}  .230207{col 51}{space 3} .8562712
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  1.07891{col 26}{space 2} .4156389{col 37}{space 5} .2628641{col 51}{space 3} 1.894957
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} .5670533{col 26}{space 2} .0844932{col 37}{space 5} .4011632{col 51}{space 3} .7329434
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 3.754855{col 26}{space 2} .5219093{col 37}{space 5} 2.730162{col 51}{space 3} 4.779547
{txt}{space 5}Western {c |}{col 14}{res}{space 2}  1.24248{col 26}{space 2} .2982432{col 37}{space 5}  .656923{col 51}{space 3} 1.828037
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}h_flex2 was {res}float{txt} now {res}byte
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real_it2.dta saved

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 5}h_flex2 {c |}{res}    6775   200636622     12.9764   33.60684          0        100
{txt}file /home/bjvca/data/data/GAP/Haruna/work/foodshares_it2.dta saved
file /tmp/St08757.000002 saved
{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00

   {txt}relpoor3 {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,386.7206       49.99       49.99
{txt}          1 {c |}{res} 3,388.2794       50.01      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/relpoor_it3.dta saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(0 observations deleted)
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(235225 observations deleted)
(141765 missing values generated)
{res}141765
    0
{txt}(141876 missing values generated)
{res}141876
{txt}(141876 observations deleted)
(note: file /tmp/St08757.00000h not found)
file /tmp/St08757.00000h saved
(note: file /tmp/St08757.00000i not found)
file /tmp/St08757.00000i saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     34,944      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     34,944      100.00
  152
{txt}(152 observations deleted)
file /tmp/St08757.00000h saved
47
47
file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex_it3.dta saved
(4392 observations deleted)
(note: file /tmp/St08757.00000j not found)
file /tmp/St08757.00000j saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        0.02        0.02
{txt}          3 {c |}{res}     85,204       99.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,218      100.00
{txt}(14 observations deleted)
file /tmp/St08757.00000j saved
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}      9,374       11.00       11.00
{txt}          3 {c |}{res}     75,830       89.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}(9374 observations deleted)
(0 observations deleted)
(note: file /tmp/St08757.00000l not found)
file /tmp/St08757.00000l saved
product was {res}float{txt} now {res}int
{txt}unit was {res}float{txt} now {res}byte
{txt}food_cat was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}count was {res}float{txt} now {res}byte
{txt}descript was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}numreg was {res}double{txt} now {res}byte
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
survquar was {res}byte{txt} now {res}float
{txt}spdomain was {res}byte{txt} now {res}float
{txt}reg_tpi was {res}byte{txt} now {res}float
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         25        0.03        0.03
{txt}          3 {c |}{res}     75,830       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     75,855      100.00
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     75,855      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     75,855      100.00
{txt}(46360 observations deleted)
(12 observations deleted)
(2209 observations deleted)

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}ratiotw3 {c |}{res}       233    1.234587    .4310558   .9125085   3.892401
{txt}{space 4}ratiomw3 {c |}{res}       233    1.065761    .3545729   .2559116   3.626859
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
product was {res}int{txt} now {res}float

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        233      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        233      100.00
    0
{txt}(0 observations deleted)
file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex_it3.dta saved
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         79       33.91       33.91
{txt}          3 {c |}{res}        154       66.09      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        233      100.00
{txt}(79 observations deleted)
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         15        8.88        8.88
{txt}          3 {c |}{res}        154       91.12      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        169      100.00
{txt}(15 observations deleted)

{hline}
-> spdomain = Central rural
{res}    1
{txt}{hline}
-> spdomain = Central urban
{res}    0
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}       154    163.3052    149.2873          3        966
{txt}(1 observation deleted)
(17 observations deleted)

Summary for variables: baskshr
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .9020874         0  .9020874  .9020874
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       28   .902287         0   .902287   .902287
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27  .9058451         0  .9058451  .9058451
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .9025913         0  .9025913  .9025913
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28  .9014295         0  .9014295  .9014295
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      136  .9028354  .0015516  .9014295  .9058451
{txt}{hline 14}{c BT}{hline 50}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        136      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        136      100.00
{txt}(136 real changes made)
(129 real changes made)
(136 real changes made)

Summary for variables: chkcal
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27 -.0001413         0 -.0001413 -.0001413
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       28  .0000257         0  .0000257  .0000257
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27 -.0000128         0 -.0000128 -.0000128
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26 -.0001156         0 -.0001156 -.0001156
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28 -.0000514         0 -.0000514 -.0000514
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      136  -.000058  .0000624 -.0001413  .0000257
{txt}{hline 14}{c BT}{hline 50}
(136 real changes made)
file /home/bjvca/data/data/GAP/Haruna/work/quan_flex_it3.dta saved
file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex_it3.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(346 real changes made)
(note: file /tmp/St08757.00000n not found)
file /tmp/St08757.00000n saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines_it3.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines_it3.dta
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(6775 real changes made)
(6775 real changes made)

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 6}cr_it3 {c |}{res}    6775   200636622    9421.297   249046.8   97.95111   5.07e+07
{txt}{space 5}linpob3 {c |}{res}    6775   200636622    1076.059   351.7536   806.7063   2205.267
{txt}{space 4}linpobr3 {c |}{res}    6775   200636622    1376.744   .0000599   1376.744   1376.745
{txt}(5829 missing values generated)
(5829 real changes made)
(5829 real changes made)
(5829 real changes made)

      pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 5}h_flex3 {c |}{col 14}{res}{space 2} 13.13736{col 26}{space 2} .8520871{col 37}{space 5} 11.46441{col 51}{space 3} 14.81031
{txt}{space 4}pg_flex3 {c |}{col 14}{res}{space 2} 3.481076{col 26}{space 2} .2641033{col 37}{space 5} 2.962548{col 51}{space 3} 3.999604
{txt}{space 3}spg_flex3 {c |}{col 14}{res}{space 2} 1.420366{col 26}{space 2} .1370352{col 37}{space 5} 1.151317{col 51}{space 3} 1.689414
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex3      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 8.633462{col 26}{space 2} 2.371141{col 37}{space 5} 3.978074{col 51}{space 3} 13.28885
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 13.82531{col 26}{space 2} .9087717{col 37}{space 5} 12.04107{col 51}{space 3} 15.60955
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex3     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 2.305638{col 26}{space 2} .7932166{col 37}{space 5} .7482735{col 51}{space 3} 3.863003
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.660618{col 26}{space 2} .2800873{col 37}{space 5} 3.110707{col 51}{space 3} 4.210528
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex3    {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .8787072{col 26}{space 2} .3159112{col 37}{space 5} .2584619{col 51}{space 3} 1.498953
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.503101{col 26}{space 2} .1508681{col 37}{space 5} 1.206894{col 51}{space 3} 1.799309
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex3      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 15.45831{col 26}{space 2} 6.062813{col 37}{space 5} 3.554867{col 51}{space 3} 27.36176
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 6.883407{col 26}{space 2} 1.741521{col 37}{space 5} 3.464186{col 51}{space 3} 10.30263
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 9.150863{col 26}{space 2}  1.97199{col 37}{space 5} 5.279149{col 51}{space 3} 13.02258
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 8.459116{col 26}{space 2} 1.607453{col 37}{space 5} 5.303118{col 51}{space 3} 11.61511
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 12.14819{col 26}{space 2} 2.243222{col 37}{space 5} 7.743957{col 51}{space 3} 16.55243
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 12.47709{col 26}{space 2} 2.403529{col 37}{space 5} 7.758115{col 51}{space 3} 17.19607
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 70.60768{col 26}{space 2} 6.336198{col 37}{space 5} 58.16748{col 51}{space 3} 83.04788
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 15.20253{col 26}{space 2} 4.536084{col 37}{space 5} 6.296588{col 51}{space 3} 24.10846
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 15.87085{col 26}{space 2} 2.516241{col 37}{space 5} 10.93058{col 51}{space 3} 20.81112
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}  9.08376{col 26}{space 2} 1.314522{col 37}{space 5} 6.502889{col 51}{space 3} 11.66463
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex3     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 4.424038{col 26}{space 2} 2.177806{col 37}{space 5} .1482342{col 51}{space 3} 8.699841
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.652991{col 26}{space 2} .4788303{col 37}{space 5} .7128773{col 51}{space 3} 2.593104
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.860814{col 26}{space 2} .4799628{col 37}{space 5} .9184775{col 51}{space 3} 2.803151
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.547392{col 26}{space 2}  .297496{col 37}{space 5} .9633017{col 51}{space 3} 2.131482
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2}   2.3945{col 26}{space 2} .4666726{col 37}{space 5} 1.478257{col 51}{space 3} 3.310744
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 4.128081{col 26}{space 2} .9451504{col 37}{space 5} 2.272416{col 51}{space 3} 5.983745
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 30.12839{col 26}{space 2} 3.618503{col 37}{space 5} 23.02399{col 51}{space 3} 37.23279
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2}  2.36695{col 26}{space 2} .4473222{col 37}{space 5} 1.488698{col 51}{space 3} 3.245202
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 4.597463{col 26}{space 2} .9104074{col 37}{space 5} 2.810011{col 51}{space 3} 6.384915
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}  1.73099{col 26}{space 2} .3358492{col 37}{space 5} 1.071599{col 51}{space 3} 2.390381
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex3    {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 1.688602{col 26}{space 2} .8480533{col 37}{space 5} .0235732{col 51}{space 3} 3.353631
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .5682618{col 26}{space 2} .2150845{col 37}{space 5} .1459748{col 51}{space 3} .9905488
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2}  .625197{col 26}{space 2} .1856869{col 37}{space 5}  .260628{col 51}{space 3}  .989766
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .4749682{col 26}{space 2} .1107725{col 37}{space 5} .2574826{col 51}{space 3} .6924538
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} .6390305{col 26}{space 2} .1218298{col 37}{space 5} .3998355{col 51}{space 3} .8782255
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.867029{col 26}{space 2} .5206528{col 37}{space 5} .8448033{col 51}{space 3} 2.889255
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 16.10218{col 26}{space 2} 2.296624{col 37}{space 5} 11.59309{col 51}{space 3} 20.61127
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2}  .702688{col 26}{space 2} .1946126{col 37}{space 5} .3205947{col 51}{space 3} 1.084781
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 1.951891{col 26}{space 2} .5364441{col 37}{space 5} .8986612{col 51}{space 3}  3.00512
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .5295866{col 26}{space 2} .1464753{col 37}{space 5} .2420038{col 51}{space 3} .8171694
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

         {txt}Over: strata rural
    _subpop_1: {res}KAMPALA Urban
    {txt}_subpop_2: {res}CENTRAL 1 Urban
    {txt}_subpop_3: {res}CENTRAL 1 Rural
    {txt}_subpop_4: {res}CENTRAL 2 Urban
    {txt}_subpop_5: {res}CENTRAL 2 Rural
    {txt}_subpop_6: {res}EAST CENTRAL Urban
    {txt}_subpop_7: {res}EAST CENTRAL Rural
    {txt}_subpop_8: {res}EASTERN Urban
    {txt}_subpop_9: {res}EASTERN Rural
   {txt}_subpop_10: {res}MID-NOTHERN Urban
   {txt}_subpop_11: {res}MID-NOTHERN Rural
   {txt}_subpop_12: {res}NORTH-EAST Urban
   {txt}_subpop_13: {res}NORTH-EAST Rural
   {txt}_subpop_14: {res}WEST-NILE Urban
   {txt}_subpop_15: {res}WEST-NILE Rural
   {txt}_subpop_16: {res}MID-WESTERN Urban
   {txt}_subpop_17: {res}MID-WESTERN Rural
   {txt}_subpop_18: {res}SOUTH-WESTERN Urban
   {txt}_subpop_19: {res}SOUTH-WESTERN Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex3      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 15.45831{col 26}{space 2} 6.062813{col 37}{space 5} 3.554867{col 51}{space 3} 27.36176
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 13.39158{col 26}{space 2} 4.307866{col 37}{space 5} 4.933712{col 51}{space 3} 21.84944
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 5.219631{col 26}{space 2} 1.655129{col 37}{space 5} 1.970027{col 51}{space 3} 8.469236
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 4.686212{col 26}{space 2} 2.559983{col 37}{space 5}-.3399398{col 51}{space 3} 9.712364
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  10.0726{col 26}{space 2} 2.259879{col 37}{space 5} 5.635662{col 51}{space 3} 14.50955
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 8.932632{col 26}{space 2} 1.685272{col 37}{space 5} 5.623846{col 51}{space 3} 12.24142
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 3.705768{col 26}{space 2} 2.352816{col 37}{space 5}-.9136424{col 51}{space 3} 8.325178
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 12.81655{col 26}{space 2} 2.361396{col 37}{space 5} 8.180296{col 51}{space 3} 17.45281
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 13.83654{col 26}{space 2} 2.587216{col 37}{space 5} 8.756915{col 51}{space 3} 18.91616
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 6.831652{col 26}{space 2} 3.866863{col 37}{space 5}-.7603675{col 51}{space 3} 14.42367
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 72.96915{col 26}{space 2} 6.453431{col 37}{space 5} 60.29878{col 51}{space 3} 85.63952
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} 4.767413{col 26}{space 2}  4.38237{col 37}{space 5} -3.83673{col 51}{space 3} 13.37156
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 16.74839{col 26}{space 2}  4.90284{col 37}{space 5} 7.122384{col 51}{space 3}  26.3744
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 6.107057{col 26}{space 2}  6.00618{col 37}{space 5}-5.685199{col 51}{space 3} 17.89931
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 16.48113{col 26}{space 2} 2.604583{col 37}{space 5} 11.36741{col 51}{space 3} 21.59485
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2}  9.54666{col 26}{space 2} 1.362562{col 37}{space 5}  6.87147{col 51}{space 3} 12.22185
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex3     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 4.424038{col 26}{space 2} 2.177806{col 37}{space 5} .1482342{col 51}{space 3} 8.699841
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  2.97025{col 26}{space 2} .9759306{col 37}{space 5} 1.054153{col 51}{space 3} 4.886347
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.316241{col 26}{space 2} .5328803{col 37}{space 5} .2700083{col 51}{space 3} 2.362473
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.585453{col 26}{space 2} .9930774{col 37}{space 5}-.3643092{col 51}{space 3} 3.535216
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} 1.917663{col 26}{space 2} .5388197{col 37}{space 5} .8597697{col 51}{space 3} 2.975557
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2}  1.63401{col 26}{space 2} .3131088{col 37}{space 5} 1.019266{col 51}{space 3} 2.248753
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.036178{col 26}{space 2} .6529998{col 37}{space 5}-.2458921{col 51}{space 3} 2.318247
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 2.502034{col 26}{space 2} .4928468{col 37}{space 5} 1.534401{col 51}{space 3} 3.469666
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 4.577856{col 26}{space 2} 1.027055{col 37}{space 5} 2.561384{col 51}{space 3} 6.594328
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 5.057698{col 26}{space 2} 2.862766{col 37}{space 5}-.5629253{col 51}{space 3} 10.67832
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2}  31.0567{col 26}{space 2} 3.736185{col 37}{space 5} 23.72124{col 51}{space 3} 38.39215
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .4883908{col 26}{space 2} .4473568{col 37}{space 5}-.3899289{col 51}{space 3} 1.366711
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 2.645241{col 26}{space 2} .4933346{col 37}{space 5} 1.676651{col 51}{space 3} 3.613832
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 1.201691{col 26}{space 2} 1.181841{col 37}{space 5}-1.118681{col 51}{space 3} 3.522063
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 4.809713{col 26}{space 2} .9493164{col 37}{space 5} 2.945869{col 51}{space 3} 6.673557
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2}   1.8192{col 26}{space 2}  .350511{col 37}{space 5} 1.131023{col 51}{space 3} 2.507377
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex3    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.688602{col 26}{space 2} .8480533{col 37}{space 5} .0235732{col 51}{space 3} 3.353631
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.023178{col 26}{space 2} .5182162{col 37}{space 5}  .005736{col 51}{space 3}  2.04062
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4519651{col 26}{space 2} .2410031{col 37}{space 5}-.0212092{col 51}{space 3} .9251395
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .8152587{col 26}{space 2} .5437698{col 37}{space 5}-.2523538{col 51}{space 3} 1.882871
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} .5859581{col 26}{space 2} .1952123{col 37}{space 5} .2026872{col 51}{space 3}  .969229
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} .5015555{col 26}{space 2} .1168231{col 37}{space 5} .2721905{col 51}{space 3} .7309205
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2}  .291099{col 26}{space 2} .1829981{col 37}{space 5}-.0681911{col 51}{space 3} .6503891
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2}  .666575{col 26}{space 2} .1288223{col 37}{space 5} .4136512{col 51}{space 3} .9194987
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 2.070451{col 26}{space 2} .5698871{col 37}{space 5} .9515612{col 51}{space 3} 3.189341
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 3.744382{col 26}{space 2} 2.119401{col 37}{space 5}-.4167522{col 51}{space 3} 7.905516
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 16.55976{col 26}{space 2} 2.379552{col 37}{space 5} 11.88786{col 51}{space 3} 21.23166
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .0557701{col 26}{space 2} .0511479{col 37}{space 5}-.0446513{col 51}{space 3} .1561916
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2}  .798523{col 26}{space 2} .2261153{col 37}{space 5} .3545787{col 51}{space 3} 1.242467
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} .3125716{col 26}{space 2} .3074085{col 37}{space 5}  -.29098{col 51}{space 3} .9161232
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 2.054355{col 26}{space 2} .5624632{col 37}{space 5} .9500408{col 51}{space 3} 3.158669
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} .5565738{col 26}{space 2} .1534397{col 37}{space 5} .2553175{col 51}{space 3} .8578302
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex3      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 7.663714{col 26}{space 2}  1.42782{col 37}{space 5} 4.860399{col 51}{space 3} 10.46703
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 12.62432{col 26}{space 2} 3.615708{col 37}{space 5} 5.525408{col 51}{space 3} 19.72324
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 10.49045{col 26}{space 2} 1.446609{col 37}{space 5} 7.650245{col 51}{space 3} 13.33065
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 22.80326{col 26}{space 2} 2.191153{col 37}{space 5} 18.50125{col 51}{space 3} 27.10527
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 12.57606{col 26}{space 2} 1.482341{col 37}{space 5} 9.665697{col 51}{space 3} 15.48642
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex3     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.619133{col 26}{space 2} .3806458{col 37}{space 5} .8717905{col 51}{space 3} 2.366475
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.440711{col 26}{space 2} 1.254608{col 37}{space 5} .9774713{col 51}{space 3} 5.903952
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 2.013839{col 26}{space 2} .2947307{col 37}{space 5} 1.435178{col 51}{space 3} 2.592499
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 7.740651{col 26}{space 2} .8860498{col 37}{space 5} 6.001022{col 51}{space 3}  9.48028
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 3.205933{col 26}{space 2} .5208218{col 37}{space 5} 2.183376{col 51}{space 3} 4.228491
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex3    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .5194475{col 26}{space 2} .1550198{col 37}{space 5} .2150888{col 51}{space 3} .8238062
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.329312{col 26}{space 2} .5056527{col 37}{space 5} .3365366{col 51}{space 3} 2.322087
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} .5653066{col 26}{space 2} .0842722{col 37}{space 5} .3998504{col 51}{space 3} .7307627
{txt}{space 4}Northern {c |}{col 14}{res}{space 2}  3.77735{col 26}{space 2} .5238858{col 37}{space 5} 2.748777{col 51}{space 3} 4.805923
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 1.261433{col 26}{space 2}  .300112{col 37}{space 5}  .672207{col 51}{space 3} 1.850659
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}h_flex3 was {res}float{txt} now {res}byte
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real_it3.dta saved

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 5}h_flex3 {c |}{res}    6775   200636622    13.13736   33.78334          0        100
{txt}file /home/bjvca/data/data/GAP/Haruna/work/foodshares_it3.dta saved
file /tmp/St08757.000002 saved
{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00

   {txt}relpoor4 {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,386.8942       49.99       49.99
{txt}          1 {c |}{res} 3,388.1058       50.01      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/relpoor_it4.dta saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(0 observations deleted)
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(236191 observations deleted)
(140996 missing values generated)
{res}140996
    0
{txt}(141107 missing values generated)
{res}141107
{txt}(141107 observations deleted)
(note: file /tmp/St08757.00000o not found)
file /tmp/St08757.00000o saved
(note: file /tmp/St08757.00000p not found)
file /tmp/St08757.00000p saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     34,747      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     34,747      100.00
  151
{txt}(151 observations deleted)
file /tmp/St08757.00000o saved
48
48
file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex_it4.dta saved
(4392 observations deleted)
(note: file /tmp/St08757.00000q not found)
file /tmp/St08757.00000q saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        0.02        0.02
{txt}          3 {c |}{res}     85,204       99.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,218      100.00
{txt}(14 observations deleted)
file /tmp/St08757.00000q saved
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}      9,077       10.65       10.65
{txt}          3 {c |}{res}     76,127       89.35      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}(9077 observations deleted)
(0 observations deleted)
(note: file /tmp/St08757.00000s not found)
file /tmp/St08757.00000s saved
product was {res}float{txt} now {res}int
{txt}unit was {res}float{txt} now {res}byte
{txt}food_cat was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}count was {res}float{txt} now {res}byte
{txt}descript was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}numreg was {res}double{txt} now {res}byte
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
survquar was {res}byte{txt} now {res}float
{txt}spdomain was {res}byte{txt} now {res}float
{txt}reg_tpi was {res}byte{txt} now {res}float
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         25        0.03        0.03
{txt}          3 {c |}{res}     76,127       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     76,152      100.00
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     76,152      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     76,152      100.00
{txt}(46776 observations deleted)
(12 observations deleted)
(2173 observations deleted)

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}ratiotw4 {c |}{res}       238    1.231152    .4191369   .9125085   3.892401
{txt}{space 4}ratiomw4 {c |}{res}       238    1.064716    .3431143    .256602   3.626859
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
product was {res}int{txt} now {res}float

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        238      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        238      100.00
    0
{txt}(0 observations deleted)
file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex_it4.dta saved
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         83       34.87       34.87
{txt}          3 {c |}{res}        155       65.13      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        238      100.00
{txt}(83 observations deleted)
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        8.28        8.28
{txt}          3 {c |}{res}        155       91.72      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        169      100.00
{txt}(14 observations deleted)

{hline}
-> spdomain = Central rural
{res}    2
{txt}{hline}
-> spdomain = Central urban
{res}    0
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}       155    161.5097    147.9551          3        960
{txt}(2 observations deleted)
(16 observations deleted)

Summary for variables: baskshr
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .9012652         0  .9012652  .9012652
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       29  .9039087         0  .9039087  .9039087
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27  .9061677         0  .9061677  .9061677
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .9025011         0  .9025011  .9025011
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28  .9014281         0  .9014281  .9014281
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      137  .9030588  .0018217  .9012652  .9061677
{txt}{hline 14}{c BT}{hline 50}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        137      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        137      100.00
{txt}(137 real changes made)
(130 real changes made)
(137 real changes made)

Summary for variables: chkcal
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27 -.0001413         0 -.0001413 -.0001413
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       29  .0000257         0  .0000257  .0000257
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27 -.0000128         0 -.0000128 -.0000128
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26 -.0001156         0 -.0001156 -.0001156
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28 -.0000514         0 -.0000514 -.0000514
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      137 -.0000574  .0000626 -.0001413  .0000257
{txt}{hline 14}{c BT}{hline 50}
(137 real changes made)
file /home/bjvca/data/data/GAP/Haruna/work/quan_flex_it4.dta saved
file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex_it4.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(346 real changes made)
(note: file /tmp/St08757.00000u not found)
file /tmp/St08757.00000u saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines_it4.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines_it4.dta
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(6775 real changes made)
(6775 real changes made)

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 6}cr_it4 {c |}{res}    6775   200636622    9421.297   242289.9   99.38699   4.92e+07
{txt}{space 5}linpob4 {c |}{res}    6775   200636622    1085.227   376.2671   806.1232    2302.44
{txt}{space 4}linpobr4 {c |}{res}    6775   200636622     1397.14   .0000572    1397.14    1397.14
{txt}(5817 missing values generated)
(5817 real changes made)
(5817 real changes made)
(5817 real changes made)

      pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 5}h_flex4 {c |}{col 14}{res}{space 2} 13.26565{col 26}{space 2} .8519925{col 37}{space 5} 11.59289{col 51}{space 3} 14.93841
{txt}{space 4}pg_flex4 {c |}{col 14}{res}{space 2}  3.52482{col 26}{space 2} .2675188{col 37}{space 5} 2.999586{col 51}{space 3} 4.050054
{txt}{space 3}spg_flex4 {c |}{col 14}{res}{space 2} 1.438787{col 26}{space 2} .1386735{col 37}{space 5} 1.166522{col 51}{space 3} 1.711052
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex4      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 9.407504{col 26}{space 2} 2.387789{col 37}{space 5}  4.71943{col 51}{space 3} 14.09558
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 13.85496{col 26}{space 2} .9076456{col 37}{space 5} 12.07293{col 51}{space 3} 15.63699
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex4     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 2.560054{col 26}{space 2} .8541048{col 37}{space 5} .8831441{col 51}{space 3} 4.236964
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.672183{col 26}{space 2} .2804405{col 37}{space 5} 3.121579{col 51}{space 3} 4.222787
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex4    {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .9941871{col 26}{space 2} .3568566{col 37}{space 5} .2935514{col 51}{space 3} 1.694823
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.506697{col 26}{space 2} .1508784{col 37}{space 5} 1.210469{col 51}{space 3} 1.802925
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex4      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 15.82099{col 26}{space 2}  6.02498{col 37}{space 5} 3.991825{col 51}{space 3} 27.65016
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 7.628228{col 26}{space 2}  1.81958{col 37}{space 5} 4.055749{col 51}{space 3} 11.20071
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 9.269841{col 26}{space 2} 1.968469{col 37}{space 5}  5.40504{col 51}{space 3} 13.13464
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 8.544658{col 26}{space 2} 1.600788{col 37}{space 5} 5.401744{col 51}{space 3} 11.68757
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 12.22193{col 26}{space 2} 2.237551{col 37}{space 5} 7.828827{col 51}{space 3} 16.61504
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 12.47709{col 26}{space 2} 2.403529{col 37}{space 5} 7.758115{col 51}{space 3} 17.19607
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 70.60768{col 26}{space 2} 6.336198{col 37}{space 5} 58.16748{col 51}{space 3} 83.04788
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 15.20253{col 26}{space 2} 4.536084{col 37}{space 5} 6.296588{col 51}{space 3} 24.10846
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 15.87085{col 26}{space 2} 2.516241{col 37}{space 5} 10.93058{col 51}{space 3} 20.81112
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}  9.08376{col 26}{space 2} 1.314522{col 37}{space 5} 6.502889{col 51}{space 3} 11.66463
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex4     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 4.899589{col 26}{space 2} 2.331085{col 37}{space 5} .3228455{col 51}{space 3} 9.476333
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.774973{col 26}{space 2} .5034329{col 37}{space 5} .7865555{col 51}{space 3} 2.763389
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.909912{col 26}{space 2} .4865075{col 37}{space 5} .9547253{col 51}{space 3} 2.865098
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.568558{col 26}{space 2} .2999459{col 37}{space 5} .9796584{col 51}{space 3} 2.157458
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 2.424319{col 26}{space 2} .4715415{col 37}{space 5} 1.498516{col 51}{space 3} 3.350122
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 4.122042{col 26}{space 2} .9442271{col 37}{space 5}  2.26819{col 51}{space 3} 5.975894
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 30.09911{col 26}{space 2} 3.616813{col 37}{space 5} 22.99803{col 51}{space 3} 37.20019
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 2.357666{col 26}{space 2} .4461482{col 37}{space 5}  1.48172{col 51}{space 3} 3.233613
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 4.599185{col 26}{space 2} .9105967{col 37}{space 5} 2.811362{col 51}{space 3} 6.387009
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 1.732114{col 26}{space 2} .3359417{col 37}{space 5} 1.072541{col 51}{space 3} 2.391686
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex4    {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2}  1.93456{col 26}{space 2} .9634834{col 37}{space 5} .0429016{col 51}{space 3} 3.826219
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .6103999{col 26}{space 2} .2215633{col 37}{space 5} .1753927{col 51}{space 3} 1.045407
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .6450699{col 26}{space 2} .1904631{col 37}{space 5} .2711234{col 51}{space 3} 1.019017
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .4815413{col 26}{space 2} .1117164{col 37}{space 5} .2622024{col 51}{space 3} .7008802
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} .6497757{col 26}{space 2} .1237372{col 37}{space 5} .4068357{col 51}{space 3} .8927157
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.863761{col 26}{space 2} .5200716{col 37}{space 5} .8426768{col 51}{space 3} 2.884846
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2}  16.0819{col 26}{space 2} 2.294752{col 37}{space 5} 11.57649{col 51}{space 3} 20.58731
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .7002864{col 26}{space 2} .1943631{col 37}{space 5} .3186829{col 51}{space 3}  1.08189
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 1.952699{col 26}{space 2} .5365416{col 37}{space 5} .8992784{col 51}{space 3}  3.00612
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .5299538{col 26}{space 2} .1465261{col 37}{space 5} .2422713{col 51}{space 3} .8176364
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

         {txt}Over: strata rural
    _subpop_1: {res}KAMPALA Urban
    {txt}_subpop_2: {res}CENTRAL 1 Urban
    {txt}_subpop_3: {res}CENTRAL 1 Rural
    {txt}_subpop_4: {res}CENTRAL 2 Urban
    {txt}_subpop_5: {res}CENTRAL 2 Rural
    {txt}_subpop_6: {res}EAST CENTRAL Urban
    {txt}_subpop_7: {res}EAST CENTRAL Rural
    {txt}_subpop_8: {res}EASTERN Urban
    {txt}_subpop_9: {res}EASTERN Rural
   {txt}_subpop_10: {res}MID-NOTHERN Urban
   {txt}_subpop_11: {res}MID-NOTHERN Rural
   {txt}_subpop_12: {res}NORTH-EAST Urban
   {txt}_subpop_13: {res}NORTH-EAST Rural
   {txt}_subpop_14: {res}WEST-NILE Urban
   {txt}_subpop_15: {res}WEST-NILE Rural
   {txt}_subpop_16: {res}MID-WESTERN Urban
   {txt}_subpop_17: {res}MID-WESTERN Rural
   {txt}_subpop_18: {res}SOUTH-WESTERN Urban
   {txt}_subpop_19: {res}SOUTH-WESTERN Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex4      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 15.82099{col 26}{space 2}  6.02498{col 37}{space 5} 3.991825{col 51}{space 3} 27.65016
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  17.0499{col 26}{space 2} 4.852045{col 37}{space 5}  7.52362{col 51}{space 3} 26.57618
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 5.219631{col 26}{space 2} 1.655129{col 37}{space 5} 1.970027{col 51}{space 3} 8.469236
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 5.381485{col 26}{space 2} 2.616281{col 37}{space 5} .2448001{col 51}{space 3} 10.51817
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  10.0726{col 26}{space 2} 2.259879{col 37}{space 5} 5.635662{col 51}{space 3} 14.50955
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 9.022962{col 26}{space 2} 1.677882{col 37}{space 5} 5.728686{col 51}{space 3} 12.31724
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 3.705768{col 26}{space 2} 2.352816{col 37}{space 5}-.9136424{col 51}{space 3} 8.325178
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 12.89612{col 26}{space 2}  2.35453{col 37}{space 5} 8.273348{col 51}{space 3}  17.5189
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 13.83654{col 26}{space 2} 2.587216{col 37}{space 5} 8.756915{col 51}{space 3} 18.91616
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 6.831652{col 26}{space 2} 3.866863{col 37}{space 5}-.7603675{col 51}{space 3} 14.42367
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 72.96915{col 26}{space 2} 6.453431{col 37}{space 5} 60.29878{col 51}{space 3} 85.63952
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} 4.767413{col 26}{space 2}  4.38237{col 37}{space 5} -3.83673{col 51}{space 3} 13.37156
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 16.74839{col 26}{space 2}  4.90284{col 37}{space 5} 7.122384{col 51}{space 3}  26.3744
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 6.107057{col 26}{space 2}  6.00618{col 37}{space 5}-5.685199{col 51}{space 3} 17.89931
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 16.48113{col 26}{space 2} 2.604583{col 37}{space 5} 11.36741{col 51}{space 3} 21.59485
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2}  9.54666{col 26}{space 2} 1.362562{col 37}{space 5}  6.87147{col 51}{space 3} 12.22185
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex4     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 4.899589{col 26}{space 2} 2.331085{col 37}{space 5} .3228455{col 51}{space 3} 9.476333
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.514906{col 26}{space 2} 1.117018{col 37}{space 5} 1.321805{col 51}{space 3} 5.708008
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.330168{col 26}{space 2}  .536037{col 37}{space 5} .2777381{col 51}{space 3} 2.382599
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.731426{col 26}{space 2} 1.053327{col 37}{space 5} -.336627{col 51}{space 3} 3.799478
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} 1.946761{col 26}{space 2} .5433888{col 37}{space 5} .8798961{col 51}{space 3} 3.013625
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 1.656361{col 26}{space 2} .3156564{col 37}{space 5} 1.036616{col 51}{space 3} 2.276107
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.044291{col 26}{space 2} .6581494{col 37}{space 5}-.2478887{col 51}{space 3} 2.336471
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 2.533571{col 26}{space 2} .4979434{col 37}{space 5} 1.555932{col 51}{space 3}  3.51121
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 4.571159{col 26}{space 2} 1.026074{col 37}{space 5} 2.556614{col 51}{space 3} 6.585705
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 5.056415{col 26}{space 2}  2.86204{col 37}{space 5}-.5627824{col 51}{space 3} 10.67561
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 31.02638{col 26}{space 2} 3.734488{col 37}{space 5} 23.69426{col 51}{space 3}  38.3585
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .4852959{col 26}{space 2} .4445107{col 37}{space 5}-.3874359{col 51}{space 3} 1.358028
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 2.635041{col 26}{space 2} .4923809{col 37}{space 5} 1.668323{col 51}{space 3} 3.601759
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2}  1.20244{col 26}{space 2} 1.182578{col 37}{space 5}-1.119379{col 51}{space 3}  3.52426
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 4.811496{col 26}{space 2} .9495094{col 37}{space 5} 2.947273{col 51}{space 3} 6.675719
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 1.820381{col 26}{space 2} .3506055{col 37}{space 5} 1.132018{col 51}{space 3} 2.508743
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex4    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2}  1.93456{col 26}{space 2} .9634834{col 37}{space 5} .0429016{col 51}{space 3} 3.826219
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  1.20587{col 26}{space 2} .5582141{col 37}{space 5} .1098982{col 51}{space 3} 2.301842
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4581714{col 26}{space 2} .2429516{col 37}{space 5}-.0188286{col 51}{space 3} .9351713
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .8849392{col 26}{space 2} .5827463{col 37}{space 5}-.2591979{col 51}{space 3} 2.029076
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} .5955482{col 26}{space 2} .1974741{col 37}{space 5} .2078365{col 51}{space 3} .9832598
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} .5084966{col 26}{space 2} .1178147{col 37}{space 5} .2771847{col 51}{space 3} .7398084
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .2956458{col 26}{space 2} .1858566{col 37}{space 5}-.0692565{col 51}{space 3} .6605481
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} .6778109{col 26}{space 2} .1308268{col 37}{space 5} .4209515{col 51}{space 3} .9346702
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 2.066828{col 26}{space 2} .5692615{col 37}{space 5} .9491659{col 51}{space 3} 3.184489
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 3.742482{col 26}{space 2} 2.118326{col 37}{space 5}-.4165408{col 51}{space 3} 7.901505
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2}  16.5388{col 26}{space 2} 2.377626{col 37}{space 5} 11.87068{col 51}{space 3} 21.20693
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .0551463{col 26}{space 2} .0505766{col 37}{space 5}-.0441535{col 51}{space 3} .1544461
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2}  .795858{col 26}{space 2} .2258488{col 37}{space 5} .3524368{col 51}{space 3} 1.239279
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} .3128433{col 26}{space 2} .3076757{col 37}{space 5} -.291233{col 51}{space 3} .9169197
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 2.055197{col 26}{space 2} .5625636{col 37}{space 5} .9506858{col 51}{space 3} 3.159709
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} .5569598{col 26}{space 2} .1534925{col 37}{space 5} .2555996{col 51}{space 3}   .85832
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex4      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 7.663714{col 26}{space 2}  1.42782{col 37}{space 5} 4.860399{col 51}{space 3} 10.46703
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  13.9153{col 26}{space 2} 3.609763{col 37}{space 5} 6.828061{col 51}{space 3} 21.00255
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 10.56949{col 26}{space 2} 1.442223{col 37}{space 5} 7.737897{col 51}{space 3} 13.40109
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 22.80326{col 26}{space 2} 2.191153{col 37}{space 5} 18.50125{col 51}{space 3} 27.10527
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 12.57606{col 26}{space 2} 1.482341{col 37}{space 5} 9.665697{col 51}{space 3} 15.48642
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex4     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2}   1.6407{col 26}{space 2} .3834521{col 37}{space 5}  .887848{col 51}{space 3} 2.393552
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.863985{col 26}{space 2} 1.345823{col 37}{space 5} 1.221657{col 51}{space 3} 6.506312
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2}  2.03977{col 26}{space 2} .2976568{col 37}{space 5} 1.455364{col 51}{space 3} 2.624175
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 7.729756{col 26}{space 2} .8856502{col 37}{space 5} 5.990911{col 51}{space 3} 9.468601
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 3.207365{col 26}{space 2} .5209318{col 37}{space 5} 2.184591{col 51}{space 3} 4.230139
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex4    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .5273579{col 26}{space 2} .1564987{col 37}{space 5} .2200955{col 51}{space 3} .8346202
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.521233{col 26}{space 2} .5700127{col 37}{space 5} .4020966{col 51}{space 3}  2.64037
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2}  .574177{col 26}{space 2} .0853943{col 37}{space 5} .4065177{col 51}{space 3} .7418363
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 3.771623{col 26}{space 2} .5233839{col 37}{space 5} 2.744035{col 51}{space 3}  4.79921
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 1.262027{col 26}{space 2} .3001704{col 37}{space 5} .6726867{col 51}{space 3} 1.851368
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}h_flex4 was {res}float{txt} now {res}byte
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real_it4.dta saved

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 5}h_flex4 {c |}{res}    6775   200636622    13.26565   33.92281          0        100
{txt}file /home/bjvca/data/data/GAP/Haruna/work/foodshares_it4.dta saved
file /tmp/St08757.000002 saved
{p 0 4 2}
variable{txt} one
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00

   {txt}relpoor5 {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res} 3,384.2839       49.95       49.95
{txt}          1 {c |}{res} 3,390.7161       50.05      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/relpoor_it5.dta saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(0 observations deleted)
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}    412,045      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}    412,045      100.00
{txt}(235700 observations deleted)
(141372 missing values generated)
{res}141372
    0
{txt}(141483 missing values generated)
{res}141483
{txt}(141483 observations deleted)
(note: file /tmp/St08757.00000v not found)
file /tmp/St08757.00000v saved
(note: file /tmp/St08757.00000w not found)
file /tmp/St08757.00000w saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     34,862      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     34,862      100.00
  151
{txt}(151 observations deleted)
file /tmp/St08757.00000v saved
48
48
file /home/bjvca/data/data/GAP/Haruna/work/codes_food_basket_flex_it5.dta saved
(4392 observations deleted)
(note: file /tmp/St08757.00000x not found)
file /tmp/St08757.00000x saved
{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        0.02        0.02
{txt}          3 {c |}{res}     85,204       99.98      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,218      100.00
{txt}(14 observations deleted)
file /tmp/St08757.00000x saved
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}      8,288        9.73        9.73
{txt}          3 {c |}{res}     76,916       90.27      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     85,204      100.00
{txt}(8288 observations deleted)
(0 observations deleted)
(note: file /tmp/St08757.000011 not found)
file /tmp/St08757.000011 saved
product was {res}float{txt} now {res}int
{txt}unit was {res}float{txt} now {res}byte
{txt}food_cat was {res}float{txt} now {res}byte
{txt}rmult was {res}float{txt} now {res}int
{txt}poor09 was {res}float{txt} now {res}byte
{txt}survquar was {res}float{txt} now {res}byte
{txt}survmon was {res}float{txt} now {res}byte
{txt}rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}bswt was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}count was {res}float{txt} now {res}byte
{txt}descript was {res}float{txt} now {res}byte
{txt}hhsize was {res}double{txt} now {res}byte
{txt}numreg was {res}double{txt} now {res}byte
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}
survquar was {res}byte{txt} now {res}float
{txt}spdomain was {res}byte{txt} now {res}float
{txt}reg_tpi was {res}byte{txt} now {res}float
{txt}(label lsurvquar already defined)
(label spdomain_original already defined)
(label REG_TPI already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         25        0.03        0.03
{txt}          3 {c |}{res}     76,916       99.97      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     76,941      100.00
{txt}{p 0 4 2}
variable{txt} hhid
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}     76,941      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}     76,941      100.00
{txt}(47269 observations deleted)
(12 observations deleted)
(2206 observations deleted)

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}ratiotw5 {c |}{res}       238    1.227803     .418419   .8719018   3.892401
{txt}{space 4}ratiomw5 {c |}{res}       238    1.062425    .3434945    .256602   3.626859
{txt}{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
product was {res}int{txt} now {res}float

     {txt}_merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        238      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        238      100.00
    0
{txt}(0 observations deleted)
file /home/bjvca/data/data/GAP/Haruna/work/price_unit_flex_it5.dta saved
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         83       34.87       34.87
{txt}          3 {c |}{res}        155       65.13      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        238      100.00
{txt}(83 observations deleted)
{p 0 4 2}
variable{txt} product
does not uniquely identify observations in
the master data
{p_end}
(note: descript is str26 in using data but will be float now)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          2 {c |}{res}         14        8.28        8.28
{txt}          3 {c |}{res}        155       91.72      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        169      100.00
{txt}(14 observations deleted)

{hline}
-> spdomain = Central rural
{res}    2
{txt}{hline}
-> spdomain = Central urban
{res}    0
{txt}{hline}
-> spdomain = Eastern
{res}    0
{txt}{hline}
-> spdomain = Northern
{res}    0
{txt}{hline}
-> spdomain = Western
{res}    0

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}bswt {c |}{res}       155    162.2387     147.429          3        959
{txt}(2 observations deleted)
(16 observations deleted)

Summary for variables: baskshr
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27  .9012652         0  .9012652  .9012652
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       29   .901379         0   .901379   .901379
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27  .9061677         0  .9061677  .9061677
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26    .90255         0    .90255    .90255
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28  .9014956         0  .9014956  .9014956
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      137  .9025464  .0018567  .9012652  .9061677
{txt}{hline 14}{c BT}{hline 50}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}        137      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        137      100.00
{txt}(137 real changes made)
(130 real changes made)
(137 real changes made)

Summary for variables: chkcal
{col 6}by categories of: spdomain 

{ralign 13:spdomain} {...}
{c |}         N      mean        sd       min       max
{hline 14}{c +}{hline 50}
{ralign 13:Central rural} {...}
{c |}{...}
 {res}       27 -.0001413         0 -.0001413 -.0001413
{txt}{ralign 13:Central urban} {...}
{c |}{...}
 {res}       29 -.0002313         0 -.0002313 -.0002313
{txt}{ralign 13:Eastern} {...}
{c |}{...}
 {res}       27 -.0000128         0 -.0000128 -.0000128
{txt}{ralign 13:Northern} {...}
{c |}{...}
 {res}       26  .0001413         0  .0001413  .0001413
{txt}{ralign 13:Western} {...}
{c |}{...}
 {res}       28 -.0000514         0 -.0000514 -.0000514
{txt}{hline 14}{c +}{hline 50}
{ralign 13:Total} {...}
{c |}{...}
 {res}      137  -.000063  .0001256 -.0002313  .0001413
{txt}{hline 14}{c BT}{hline 50}
(137 real changes made)
file /home/bjvca/data/data/GAP/Haruna/work/quan_flex_it5.dta saved
file /home/bjvca/data/data/GAP/Haruna/work/povline_food_flex_it5.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(346 real changes made)
(note: file /tmp/St08757.000013 not found)
file /tmp/St08757.000013 saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}file /home/bjvca/data/data/GAP/Haruna/work/povlines_it5.dta saved
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
the master data
{p_end}
{p 0 4 2}
variable{txt} spdomain
does not uniquely identify observations in
/home/bjvca/data/data/GAP/Haruna/work/povlines_it5.dta
{p_end}
(label spdomain_original already defined)

     _merge {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          3 {c |}{res}      6,775      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      6,775      100.00
{txt}(6775 real changes made)
(6775 real changes made)

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 10}cr {c |}{res}    6775   200636622    9421.297     395672    82.2244   8.12e+07
{txt}{space 6}cr_it5 {c |}{res}    6775   200636622    9421.297   241995.2   99.44436   4.92e+07
{txt}{space 5}linpob5 {c |}{res}    6775   200636622    1085.397    377.331   805.6283   2306.324
{txt}{space 4}linpobr5 {c |}{res}    6775   200636622    1397.738   .0000587   1397.738   1397.738
{txt}(5816 missing values generated)
(5816 real changes made)
(5816 real changes made)
(5816 real changes made)

      pweight:{col 16}{res}popwt
          {txt}VCE:{col 16}{res}linearized
  {txt}Single unit:{col 16}{res}missing
     {txt}Strata 1:{col 16}{res}strata
         {txt}SU 1:{col 16}{res}psu
        {txt}FPC 1:{col 16}<zero>
{p2colreset}{...}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{space 5}h_flex5 {c |}{col 14}{res}{space 2} 13.27349{col 26}{space 2} .8519682{col 37}{space 5} 11.60077{col 51}{space 3}  14.9462
{txt}{space 4}pg_flex5 {c |}{col 14}{res}{space 2} 3.524001{col 26}{space 2} .2675538{col 37}{space 5} 2.998698{col 51}{space 3} 4.049304
{txt}{space 3}spg_flex5 {c |}{col 14}{res}{space 2} 1.438313{col 26}{space 2} .1386684{col 37}{space 5} 1.166058{col 51}{space 3} 1.710568
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

        {txt}Urban: rural = {res}Urban
        {txt}Rural: rural = {res}Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex5      {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 9.466668{col 26}{space 2} 2.387487{col 37}{space 5} 4.779185{col 51}{space 3} 14.15415
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 13.85496{col 26}{space 2} .9076456{col 37}{space 5} 12.07293{col 51}{space 3} 15.63699
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex5     {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} 2.570024{col 26}{space 2} .8564539{col 37}{space 5} .8885019{col 51}{space 3} 4.251546
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 3.669716{col 26}{space 2} .2803256{col 37}{space 5} 3.119338{col 51}{space 3} 4.220095
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex5    {txt}{c |}
{space 7}Urban {c |}{col 14}{res}{space 2} .9988682{col 26}{space 2} .3584936{col 37}{space 5} .2950184{col 51}{space 3} 1.702718
{txt}{space 7}Rural {c |}{col 14}{res}{space 2} 1.505436{col 26}{space 2} .1507866{col 37}{space 5} 1.209388{col 51}{space 3} 1.801483
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

      {txt}KAMPALA: strata = {res}KAMPALA
    {txt}_subpop_2: strata = {res}CENTRAL 1
    {txt}_subpop_3: strata = {res}CENTRAL 2
    {txt}_subpop_4: strata = {res}EAST CENTRAL
      {txt}EASTERN: strata = {res}EASTERN
    {txt}_subpop_6: strata = {res}MID-NOTHERN
    {txt}_subpop_7: strata = {res}NORTH-EAST
    {txt}_subpop_8: strata = {res}WEST-NILE
    {txt}_subpop_9: strata = {res}MID-WESTERN
   {txt}_subpop_10: strata = {res}SOUTH-WESTERN

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex5      {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 16.00835{col 26}{space 2} 6.014116{col 37}{space 5} 4.200515{col 51}{space 3} 27.81619
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 7.628228{col 26}{space 2}  1.81958{col 37}{space 5} 4.055749{col 51}{space 3} 11.20071
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 9.269841{col 26}{space 2} 1.968469{col 37}{space 5}  5.40504{col 51}{space 3} 13.13464
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 8.544658{col 26}{space 2} 1.600788{col 37}{space 5} 5.401744{col 51}{space 3} 11.68757
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} 12.22193{col 26}{space 2} 2.237551{col 37}{space 5} 7.828827{col 51}{space 3} 16.61504
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 12.47709{col 26}{space 2} 2.403529{col 37}{space 5} 7.758115{col 51}{space 3} 17.19607
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 70.60768{col 26}{space 2} 6.336198{col 37}{space 5} 58.16748{col 51}{space 3} 83.04788
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 15.20253{col 26}{space 2} 4.536084{col 37}{space 5} 6.296588{col 51}{space 3} 24.10846
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 15.87085{col 26}{space 2} 2.516241{col 37}{space 5} 10.93058{col 51}{space 3} 20.81112
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}  9.08376{col 26}{space 2} 1.314522{col 37}{space 5} 6.502889{col 51}{space 3} 11.66463
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex5     {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 4.918114{col 26}{space 2} 2.336947{col 37}{space 5} .3298603{col 51}{space 3} 9.506368
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.779613{col 26}{space 2} .5044187{col 37}{space 5} .7892604{col 51}{space 3} 2.769965
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.910963{col 26}{space 2} .4866154{col 37}{space 5} .9555651{col 51}{space 3} 2.866361
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.568559{col 26}{space 2} .2999459{col 37}{space 5} .9796586{col 51}{space 3} 2.157459
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2}  2.42432{col 26}{space 2} .4715417{col 37}{space 5} 1.498516{col 51}{space 3} 3.350123
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 4.116909{col 26}{space 2} .9434428{col 37}{space 5} 2.264597{col 51}{space 3} 5.969221
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 30.07423{col 26}{space 2} 3.615377{col 37}{space 5} 22.97596{col 51}{space 3} 37.17249
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 2.349776{col 26}{space 2} .4451654{col 37}{space 5} 1.475759{col 51}{space 3} 3.223793
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 4.597505{col 26}{space 2}  .910412{col 37}{space 5} 2.810044{col 51}{space 3} 6.384966
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} 1.731017{col 26}{space 2} .3358515{col 37}{space 5} 1.071622{col 51}{space 3} 2.390413
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex5    {txt}{c |}
{space 5}KAMPALA {c |}{col 14}{res}{space 2} 1.944569{col 26}{space 2} .9680568{col 37}{space 5} .0439306{col 51}{space 3} 3.845207
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} .6119896{col 26}{space 2} .2218129{col 37}{space 5} .1764925{col 51}{space 3} 1.047487
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .6455591{col 26}{space 2} .1905911{col 37}{space 5} .2713612{col 51}{space 3} 1.019757
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .4815414{col 26}{space 2} .1117164{col 37}{space 5} .2622025{col 51}{space 3} .7008803
{txt}{space 5}EASTERN {c |}{col 14}{res}{space 2} .6497759{col 26}{space 2} .1237373{col 37}{space 5} .4068358{col 51}{space 3}  .892716
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2} 1.860989{col 26}{space 2} .5195783{col 37}{space 5} .8408731{col 51}{space 3} 2.881105
{txt}{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 16.06469{col 26}{space 2} 2.293161{col 37}{space 5} 11.56241{col 51}{space 3} 20.56698
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .6982544{col 26}{space 2} .1941508{col 37}{space 5} .3170676{col 51}{space 3} 1.079441
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2}  1.95191{col 26}{space 2} .5364464{col 37}{space 5} .8986762{col 51}{space 3} 3.005144
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2} .5295955{col 26}{space 2} .1464765{col 37}{space 5} .2420103{col 51}{space 3} .8171807
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

         {txt}Over: strata rural
    _subpop_1: {res}KAMPALA Urban
    {txt}_subpop_2: {res}CENTRAL 1 Urban
    {txt}_subpop_3: {res}CENTRAL 1 Rural
    {txt}_subpop_4: {res}CENTRAL 2 Urban
    {txt}_subpop_5: {res}CENTRAL 2 Rural
    {txt}_subpop_6: {res}EAST CENTRAL Urban
    {txt}_subpop_7: {res}EAST CENTRAL Rural
    {txt}_subpop_8: {res}EASTERN Urban
    {txt}_subpop_9: {res}EASTERN Rural
   {txt}_subpop_10: {res}MID-NOTHERN Urban
   {txt}_subpop_11: {res}MID-NOTHERN Rural
   {txt}_subpop_12: {res}NORTH-EAST Urban
   {txt}_subpop_13: {res}NORTH-EAST Rural
   {txt}_subpop_14: {res}WEST-NILE Urban
   {txt}_subpop_15: {res}WEST-NILE Rural
   {txt}_subpop_16: {res}MID-WESTERN Urban
   {txt}_subpop_17: {res}MID-WESTERN Rural
   {txt}_subpop_18: {res}SOUTH-WESTERN Urban
   {txt}_subpop_19: {res}SOUTH-WESTERN Rural

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex5      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 16.00835{col 26}{space 2} 6.014116{col 37}{space 5} 4.200515{col 51}{space 3} 27.81619
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2}  17.0499{col 26}{space 2} 4.852045{col 37}{space 5}  7.52362{col 51}{space 3} 26.57618
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 5.219631{col 26}{space 2} 1.655129{col 37}{space 5} 1.970027{col 51}{space 3} 8.469236
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 5.381485{col 26}{space 2} 2.616281{col 37}{space 5} .2448001{col 51}{space 3} 10.51817
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  10.0726{col 26}{space 2} 2.259879{col 37}{space 5} 5.635662{col 51}{space 3} 14.50955
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 9.022962{col 26}{space 2} 1.677882{col 37}{space 5} 5.728686{col 51}{space 3} 12.31724
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 3.705768{col 26}{space 2} 2.352816{col 37}{space 5}-.9136424{col 51}{space 3} 8.325178
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 12.89612{col 26}{space 2}  2.35453{col 37}{space 5} 8.273348{col 51}{space 3}  17.5189
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 13.83654{col 26}{space 2} 2.587216{col 37}{space 5} 8.756915{col 51}{space 3} 18.91616
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 6.831652{col 26}{space 2} 3.866863{col 37}{space 5}-.7603675{col 51}{space 3} 14.42367
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 72.96915{col 26}{space 2} 6.453431{col 37}{space 5} 60.29878{col 51}{space 3} 85.63952
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} 4.767413{col 26}{space 2}  4.38237{col 37}{space 5} -3.83673{col 51}{space 3} 13.37156
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 16.74839{col 26}{space 2}  4.90284{col 37}{space 5} 7.122384{col 51}{space 3}  26.3744
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 6.107057{col 26}{space 2}  6.00618{col 37}{space 5}-5.685199{col 51}{space 3} 17.89931
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 16.48113{col 26}{space 2} 2.604583{col 37}{space 5} 11.36741{col 51}{space 3} 21.59485
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2}  9.54666{col 26}{space 2} 1.362562{col 37}{space 5}  6.87147{col 51}{space 3} 12.22185
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex5     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 4.918114{col 26}{space 2} 2.336947{col 37}{space 5} .3298603{col 51}{space 3} 9.506368
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.537698{col 26}{space 2}  1.12288{col 37}{space 5} 1.333087{col 51}{space 3} 5.742309
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} 1.330168{col 26}{space 2}  .536037{col 37}{space 5} .2777381{col 51}{space 3} 2.382599
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} 1.737572{col 26}{space 2} 1.055643{col 37}{space 5}-.3350292{col 51}{space 3} 3.810173
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2}  1.94676{col 26}{space 2} .5433888{col 37}{space 5}  .879896{col 51}{space 3} 3.013625
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} 1.656362{col 26}{space 2} .3156564{col 37}{space 5} 1.036616{col 51}{space 3} 2.276107
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} 1.044292{col 26}{space 2} .6581495{col 37}{space 5}-.2478887{col 51}{space 3} 2.336472
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} 2.533571{col 26}{space 2} .4979435{col 37}{space 5} 1.555932{col 51}{space 3} 3.511211
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 4.565467{col 26}{space 2}  1.02524{col 37}{space 5} 2.552559{col 51}{space 3} 6.578376
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 5.055325{col 26}{space 2} 2.861423{col 37}{space 5}-.5626611{col 51}{space 3} 10.67331
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 31.00062{col 26}{space 2} 3.733047{col 37}{space 5} 23.67132{col 51}{space 3} 38.32991
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .4826656{col 26}{space 2} .4420919{col 37}{space 5}-.3853173{col 51}{space 3} 1.350649
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2} 2.626371{col 26}{space 2} .4915878{col 37}{space 5}  1.66121{col 51}{space 3} 3.591532
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} 1.201709{col 26}{space 2} 1.181859{col 37}{space 5}-1.118698{col 51}{space 3} 3.522116
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 4.809756{col 26}{space 2} .9493211{col 37}{space 5} 2.945903{col 51}{space 3} 6.673609
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} 1.819229{col 26}{space 2} .3505133{col 37}{space 5} 1.131047{col 51}{space 3}  2.50741
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex5    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 1.944569{col 26}{space 2} .9680568{col 37}{space 5} .0439306{col 51}{space 3} 3.845207
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.213678{col 26}{space 2} .5599829{col 37}{space 5} .1142336{col 51}{space 3} 2.313123
{txt}{space 3}_subpop_3 {c |}{col 14}{res}{space 2} .4581714{col 26}{space 2} .2429516{col 37}{space 5}-.0188286{col 51}{space 3} .9351713
{txt}{space 3}_subpop_4 {c |}{col 14}{res}{space 2} .8877979{col 26}{space 2} .5843016{col 37}{space 5}-.2593928{col 51}{space 3} 2.034989
{txt}{space 3}_subpop_5 {c |}{col 14}{res}{space 2} .5955481{col 26}{space 2} .1974741{col 37}{space 5} .2078365{col 51}{space 3} .9832596
{txt}{space 3}_subpop_6 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}_subpop_7 {c |}{col 14}{res}{space 2} .5084966{col 26}{space 2} .1178147{col 37}{space 5} .2771847{col 51}{space 3} .7398085
{txt}{space 3}_subpop_8 {c |}{col 14}{res}{space 2} .2956459{col 26}{space 2} .1858567{col 37}{space 5}-.0692565{col 51}{space 3} .6605483
{txt}{space 3}_subpop_9 {c |}{col 14}{res}{space 2} .6778111{col 26}{space 2} .1308269{col 37}{space 5} .4209516{col 51}{space 3} .9346706
{txt}{space 2}_subpop_10 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_11 {c |}{col 14}{res}{space 2} 2.063753{col 26}{space 2} .5687305{col 37}{space 5} .9471343{col 51}{space 3} 3.180373
{txt}{space 2}_subpop_12 {c |}{col 14}{res}{space 2} 3.740868{col 26}{space 2} 2.117412{col 37}{space 5}-.4163611{col 51}{space 3} 7.898097
{txt}{space 2}_subpop_13 {c |}{col 14}{res}{space 2} 16.52102{col 26}{space 2} 2.375991{col 37}{space 5}  11.8561{col 51}{space 3} 21.18593
{txt}{space 2}_subpop_14 {c |}{col 14}{res}{space 2} .0546193{col 26}{space 2}  .050094{col 37}{space 5}-.0437329{col 51}{space 3} .1529716
{txt}{space 2}_subpop_15 {c |}{col 14}{res}{space 2}  .793603{col 26}{space 2} .2256218{col 37}{space 5} .3506276{col 51}{space 3} 1.236578
{txt}{space 2}_subpop_16 {c |}{col 14}{res}{space 2} .3125781{col 26}{space 2} .3074149{col 37}{space 5}-.2909861{col 51}{space 3} .9161424
{txt}{space 2}_subpop_17 {c |}{col 14}{res}{space 2} 2.054375{col 26}{space 2} .5624656{col 37}{space 5} .9500564{col 51}{space 3} 3.158695
{txt}{space 2}_subpop_18 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}_subpop_19 {c |}{col 14}{res}{space 2} .5565832{col 26}{space 2}  .153441{col 37}{space 5} .2553243{col 51}{space 3} .8578421
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
(running mean on estimation sample)
{res}
{txt}Survey: Mean estimation

{col 1}Number of strata{col 18}= {res}     10{txt}{col 34}Number of obs{col 51}= {res}      6775
{txt}{col 1}Number of PSUs{col 18}= {res}    711{txt}{col 34}Population size{col 51}={res}  200636622
{txt}{col 34}Design df{col 51}= {res}       701

    {txt}_subpop_1: spdomain = {res}Central rural
    {txt}_subpop_2: spdomain = {res}Central urban
      {txt}Eastern: spdomain = {res}Eastern
     {txt}Northern: spdomain = {res}Northern
      {txt}Western: spdomain = {res}Western

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}{col 26}  Linearized
{col 1}        Over{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}h_flex5      {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} 7.663714{col 26}{space 2}  1.42782{col 37}{space 5} 4.860399{col 51}{space 3} 10.46703
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 14.01398{col 26}{space 2} 3.608902{col 37}{space 5} 6.928428{col 51}{space 3} 21.09953
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} 10.56949{col 26}{space 2} 1.442223{col 37}{space 5} 7.737897{col 51}{space 3} 13.40109
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 22.80326{col 26}{space 2} 2.191153{col 37}{space 5} 18.50125{col 51}{space 3} 27.10527
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 12.57606{col 26}{space 2} 1.482341{col 37}{space 5} 9.665697{col 51}{space 3} 15.48642
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}pg_flex5     {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2}   1.6407{col 26}{space 2} .3834521{col 37}{space 5} .8878479{col 51}{space 3} 2.393552
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 3.880981{col 26}{space 2} 1.349327{col 37}{space 5} 1.231774{col 51}{space 3} 6.530188
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2}  2.03977{col 26}{space 2} .2976569{col 37}{space 5} 1.455364{col 51}{space 3} 2.624176
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 7.720497{col 26}{space 2} .8853119{col 37}{space 5} 5.982316{col 51}{space 3} 9.458677
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 3.205968{col 26}{space 2} .5208245{col 37}{space 5} 2.183405{col 51}{space 3} 4.228531
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
{res}spg_flex5    {txt}{c |}
{space 3}_subpop_1 {c |}{col 14}{res}{space 2} .5273578{col 26}{space 2} .1564987{col 37}{space 5} .2200955{col 51}{space 3} .8346202
{txt}{space 3}_subpop_2 {c |}{col 14}{res}{space 2} 1.529145{col 26}{space 2} .5725768{col 37}{space 5} .4049742{col 51}{space 3} 2.653316
{txt}{space 5}Eastern {c |}{col 14}{res}{space 2} .5741771{col 26}{space 2} .0853944{col 37}{space 5} .4065178{col 51}{space 3} .7418365
{txt}{space 4}Northern {c |}{col 14}{res}{space 2} 3.766764{col 26}{space 2} .5229574{col 37}{space 5} 2.740013{col 51}{space 3} 4.793514
{txt}{space 5}Western {c |}{col 14}{res}{space 2} 1.261447{col 26}{space 2} .3001134{col 37}{space 5} .6722187{col 51}{space 3} 1.850676
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}
rural was {res}float{txt} now {res}byte
{txt}news was {res}float{txt} now {res}byte
{txt}spdomain was {res}float{txt} now {res}byte
{txt}reg_tpi was {res}float{txt} now {res}byte
{txt}h_flex5 was {res}float{txt} now {res}byte
{txt}file /home/bjvca/data/data/GAP/Haruna/work/cons_real_it5.dta saved

    Variable {c |}     Obs      Weight        Mean   Std. Dev.       Min        Max
{hline 13}{c +}{hline 65}
{space 5}h_flex5 {c |}{res}    6775   200636622    13.27349    33.9313          0        100
{txt}file /home/bjvca/data/data/GAP/Haruna/work/foodshares_it5.dta saved

{com}. **************************************************************************
> * Send results to one big csv-file
> **************************************************************************;
. use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         gen dum=1;
{txt}
{com}.         collapse (mean) dum h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt];
{txt}
{com}. gen geo="National";
{txt}
{com}. gen geono=dum;
{txt}
{com}. tempfile nat;
{txt}
{com}. save `nat';
{txt}file /tmp/St08757.000014 saved

{com}.         use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         collapse (mean) h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt], by(rural);
{txt}
{com}. gen geo="Rural/Urban";
{txt}
{com}. gen geono=rural;
{txt}
{com}. tempfile rur;
{txt}
{com}. save `rur';
{txt}file /tmp/St08757.000015 saved

{com}. use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         collapse (mean) h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt], by(news);
{txt}
{com}. gen geo="North/Center/South";
{txt}
{com}. gen geono=news;
{txt}
{com}. tempfile new;
{txt}
{com}. save `new';
{txt}file /tmp/St08757.000016 saved

{com}. use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         collapse (mean) h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt], by(reg_tpi);
{txt}
{com}. gen geo="TPI - 6 regions";
{txt}
{com}. gen geono=reg_tpi;
{txt}
{com}. tempfile rtp;
{txt}
{com}. save `rtp';
{txt}file /tmp/St08757.000017 saved

{com}. use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         collapse (mean) h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt], by(strata);
{txt}
{com}. gen geo="Provinces";
{txt}
{com}. gen geono=strata;
{txt}
{com}. tempfile str;
{txt}
{com}. save `str';
{txt}file /tmp/St08757.000018 saved

{com}. use "$path/work/cons_real_it`lastpass'.dta", clear ;
{txt}
{com}.         collapse (mean) h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' [aw=popwt], by(spdomain);
{txt}
{com}. gen geo="Spatial domains";
{txt}
{com}. gen geono=spdomain;
{txt}
{com}. tempfile r13;
{txt}
{com}. save `r13';
{txt}file /tmp/St08757.000019 saved

{com}. clear;
{txt}
{com}. set obs 1;
{txt}obs was 0, now 1

{com}. gen geo=" ";
{txt}
{com}. tempfile one;
{txt}
{com}. save `one';
{txt}file /tmp/St08757.00001a saved

{com}. use          `nat';
{txt}
{com}. append using `one';
{txt}
{com}. append using `rur';
{txt}geo was {res}str8{txt} now {res}str11
{txt}
{com}. append using `one';
{txt}
{com}. append using `new';
{txt}geo was {res}str11{txt} now {res}str18
{txt}
{com}. append using `one';
{txt}
{com}. append using `rtp';
{txt}
{com}. append using `one';
{txt}
{com}. append using `str';
{txt}
{com}. append using `one';
{txt}
{com}. append using `r13';
{txt}
{com}. outsheet geo geono h_flex`lastpass' pg_flex`lastpass' spg_flex`lastpass' dum rural news reg_tpi strata spdomain using "$path/work/poverty_flexBask.csv", replace c;
{txt}
{com}. **************************************************************************
> * Convergence graph (based on 5 iterations)
> **************************************************************************;
. #delimit cr
{txt}delimiter now cr
{com}. 
. clear
{txt}
{com}. set obs 1
{txt}obs was 0, now 1

{com}. gen iteration=.
{txt}(1 missing value generated)

{com}. tempfile converg
{txt}
{com}. save `converg'
{txt}file /tmp/St08757.00001b saved

{com}. 
. forvalues X = 1/5 {c -(}
{txt}  2{com}.         use "$path/work/cons_real_it`X'.dta", clear
{txt}  3{com}.         collapse (mean) h_flex`X' pg_flex`X' spg_flex`X' [aw=popwt], by(strata)
{txt}  4{com}.         rename h_flex`X' h_flex
{txt}  5{com}.         rename pg_flex`X' pg_flex
{txt}  6{com}.         rename spg_flex`X' spg_flex
{txt}  7{com}.         gen iteration=`X'
{txt}  8{com}.         order iteration
{txt}  9{com}.         *sum
.         if `X' != 1     {c -(}
{txt} 10{com}.                 append using `converg'
{txt} 11{com}.                         {c )-}
{txt} 12{com}.         save `converg', replace
{txt} 13{com}.         {c )-}
{txt}file /tmp/St08757.00001b saved
(label STRA already defined)
file /tmp/St08757.00001b saved
(label STRA already defined)
file /tmp/St08757.00001b saved
(label STRA already defined)
file /tmp/St08757.00001b saved
(label STRA already defined)
file /tmp/St08757.00001b saved

{com}. 
. use `converg', clear
{txt}
{com}. sum

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 3}iteration {c |}{res}        50           3    1.428571          1          5
{txt}{space 6}strata {c |}{res}        50         5.5    2.901442          1         10
{txt}{space 6}h_flex {c |}{res}        50    17.73624    18.09809   6.883408   70.60767
{txt}{space 5}pg_flex {c |}{res}        50    5.600269    8.361789   1.547392   30.12839
{txt}{space 4}spg_flex {c |}{res}        50    2.579274    4.600304   .4749682   16.10218
{txt}
{com}. 
. twoway (connected h_flex iteration), by(, title(Convergence graph: Poverty rate. %) subtitle(After iterative procedure)) by(strata)
{res}{txt}
{com}. graph export "$path/work/converge_pov_rate.tif", replace
{txt}(file /home/bjvca/data/data/GAP/Haruna/work/converge_pov_rate.tif written in TIFF format)

{com}. 
. sort strata iteration
{txt}
{com}. 
. for var h_flex pg_flex spg_flex: replace X = round(X,0.01)

{res}->  replace h_flex = round(h_flex,0.01)
{txt}(50 real changes made)

{res}->  replace pg_flex = round(pg_flex,0.01)
{txt}(50 real changes made)

{res}->  replace spg_flex = round(spg_flex,0.01)
{txt}(50 real changes made)

{com}. 
. list strata iteration h_flex pg_flex spg_flex
{txt}
     {c TLC}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c TRC}
     {c |} {res}       strata   iterat~n   h_flex   pg_flex   spg_flex {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
  1. {c |} {res}      KAMPALA          1     22.6      8.64       4.18 {txt}{c |}
  2. {c |} {res}      KAMPALA          2    13.68      3.76       1.36 {txt}{c |}
  3. {c |} {res}      KAMPALA          3    15.46      4.42       1.69 {txt}{c |}
  4. {c |} {res}      KAMPALA          4    15.82       4.9       1.93 {txt}{c |}
  5. {c |} {res}      KAMPALA          5    16.01      4.92       1.94 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
  6. {c |} {res}    CENTRAL 1          1     9.34      2.66       1.04 {txt}{c |}
  7. {c |} {res}    CENTRAL 1          2     6.92      1.58        .54 {txt}{c |}
  8. {c |} {res}    CENTRAL 1          3     6.88      1.65        .57 {txt}{c |}
  9. {c |} {res}    CENTRAL 1          4     7.63      1.77        .61 {txt}{c |}
 10. {c |} {res}    CENTRAL 1          5     7.63      1.78        .61 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 11. {c |} {res}    CENTRAL 2          1     9.49      2.13        .77 {txt}{c |}
 12. {c |} {res}    CENTRAL 2          2     8.89       1.9        .63 {txt}{c |}
 13. {c |} {res}    CENTRAL 2          3     9.15      1.86        .63 {txt}{c |}
 14. {c |} {res}    CENTRAL 2          4     9.27      1.91        .65 {txt}{c |}
 15. {c |} {res}    CENTRAL 2          5     9.27      1.91        .65 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 16. {c |} {res} EAST CENTRAL          1     8.54      1.57        .48 {txt}{c |}
 17. {c |} {res} EAST CENTRAL          2     8.46      1.55        .48 {txt}{c |}
 18. {c |} {res} EAST CENTRAL          3     8.46      1.55        .47 {txt}{c |}
 19. {c |} {res} EAST CENTRAL          4     8.54      1.57        .48 {txt}{c |}
 20. {c |} {res} EAST CENTRAL          5     8.54      1.57        .48 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 21. {c |} {res}      EASTERN          1    12.22      2.42        .65 {txt}{c |}
 22. {c |} {res}      EASTERN          2    12.15       2.4        .64 {txt}{c |}
 23. {c |} {res}      EASTERN          3    12.15      2.39        .64 {txt}{c |}
 24. {c |} {res}      EASTERN          4    12.22      2.42        .65 {txt}{c |}
 25. {c |} {res}      EASTERN          5    12.22      2.42        .65 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 26. {c |} {res}  MID-NOTHERN          1    12.48      4.13       1.87 {txt}{c |}
 27. {c |} {res}  MID-NOTHERN          2    12.28       4.1       1.85 {txt}{c |}
 28. {c |} {res}  MID-NOTHERN          3    12.48      4.13       1.87 {txt}{c |}
 29. {c |} {res}  MID-NOTHERN          4    12.48      4.12       1.86 {txt}{c |}
 30. {c |} {res}  MID-NOTHERN          5    12.48      4.12       1.86 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 31. {c |} {res}   NORTH-EAST          1    70.61     30.12       16.1 {txt}{c |}
 32. {c |} {res}   NORTH-EAST          2    70.61     30.01      16.02 {txt}{c |}
 33. {c |} {res}   NORTH-EAST          3    70.61     30.13       16.1 {txt}{c |}
 34. {c |} {res}   NORTH-EAST          4    70.61      30.1      16.08 {txt}{c |}
 35. {c |} {res}   NORTH-EAST          5    70.61     30.07      16.06 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 36. {c |} {res}    WEST-NILE          1     15.2      2.37         .7 {txt}{c |}
 37. {c |} {res}    WEST-NILE          2     15.2      2.33        .69 {txt}{c |}
 38. {c |} {res}    WEST-NILE          3     15.2      2.37         .7 {txt}{c |}
 39. {c |} {res}    WEST-NILE          4     15.2      2.36         .7 {txt}{c |}
 40. {c |} {res}    WEST-NILE          5     15.2      2.35         .7 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 41. {c |} {res}  MID-WESTERN          1    15.53      4.59       1.95 {txt}{c |}
 42. {c |} {res}  MID-WESTERN          2    15.53      4.54       1.93 {txt}{c |}
 43. {c |} {res}  MID-WESTERN          3    15.87       4.6       1.95 {txt}{c |}
 44. {c |} {res}  MID-WESTERN          4    15.87       4.6       1.95 {txt}{c |}
 45. {c |} {res}  MID-WESTERN          5    15.87       4.6       1.95 {txt}{c |}
     {c LT}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c RT}
 46. {c |} {res}SOUTH-WESTERN          1     9.04      1.72        .53 {txt}{c |}
 47. {c |} {res}SOUTH-WESTERN          2     9.04       1.7        .52 {txt}{c |}
 48. {c |} {res}SOUTH-WESTERN          3     9.08      1.73        .53 {txt}{c |}
 49. {c |} {res}SOUTH-WESTERN          4     9.08      1.73        .53 {txt}{c |}
 50. {c |} {res}SOUTH-WESTERN          5     9.08      1.73        .53 {txt}{c |}
     {c BLC}{hline 15}{c -}{hline 10}{c -}{hline 8}{c -}{hline 9}{c -}{hline 10}{c BRC}

{com}.         
. #delimit ;
{txt}delimiter now ;
{com}. **************************************************************************
> * 140_iterate.do        (end)
> **************************************************************************;
. cap log close;
{txt}
{com}. 
{txt}end of do-file

{com}. clear

. use relpov_it1
{err}{p 0 4 2}
file relpov_it1.dta
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. cd work
{res}/home/bjvca/data/data/GAP/Haruna/work

{com}. use relpov_it1
{err}{p 0 4 2}
file relpov_it1.dta
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. ls

{res}total 28824
-rwxrwxrwx 1 root root   521144 May 20 21:24 bottom_basket.dta*
-rwxrwxrwx 1 root root     3069 May 20 21:24 calperg.dta*
-rwxrwxrwx 1 root root     2931 May 20 21:24 calpp.dta*
-rwxrwxrwx 1 root root     3826 May 20 21:24 codes_food_basket_flex.dta*
-rwxrwxrwx 1 root root     4281 May 20 21:26 codes_food_basket_flex_it1.dta*
-rwxrwxrwx 1 root root     4329 May 20 21:27 codes_food_basket_flex_it2.dta*
-rwxrwxrwx 1 root root     4297 May 20 21:27 codes_food_basket_flex_it3.dta*
-rwxrwxrwx 1 root root     4313 May 20 21:27 codes_food_basket_flex_it4.dta*
-rwxrwxrwx 1 root root     4313 May 20 21:27 codes_food_basket_flex_it5.dta*
-rwxrwxrwx 1 root root   193375 May 20 21:24 conpc.dta*
-rwxrwxrwx 1 root root 16485943 May 20 21:24 cons_cod.dta*
-rwxrwxrwx 1 root root  2691625 May 20 21:24 cons_cod_trans.dta*
-rwxrwxrwx 1 root root   928990 May 20 21:24 cons_real.dta*
-rwxrwxrwx 1 root root   209140 May 20 21:26 cons_real_it1.dta*
-rwxrwxrwx 1 root root   209140 May 20 21:27 cons_real_it2.dta*
-rwxrwxrwx 1 root root   209140 May 20 21:27 cons_real_it3.dta*
-rwxrwxrwx 1 root root   209140 May 20 21:27 cons_real_it4.dta*
-rwxrwxrwx 1 root root   209140 May 20 21:27 cons_real_it5.dta*
-rwxrwxrwx 1 root root   742028 May 20 21:16 contpi_.dta*
-rwxrwxrwx 1 root root  1745348 May 20 21:27 converge_pov_rate.tif*
-rwxrwxrwx 1 root root     3354 May 20 21:16 cutoff.dta*
-rwxrwxrwx 1 root root     3354 May 20 21:08 cutoff_file.dta*
-rwxrwxrwx 1 root root     7109 May 20 21:24 food_basket_flex.dta*
-rwxrwxrwx 1 root root     7708 May 20 21:26 foodshares_it1.dta*
-rwxrwxrwx 1 root root     7828 May 20 21:27 foodshares_it2.dta*
-rwxrwxrwx 1 root root     7780 May 20 21:27 foodshares_it3.dta*
-rwxrwxrwx 1 root root     7804 May 20 21:27 foodshares_it4.dta*
-rwxrwxrwx 1 root root     7804 May 20 21:27 foodshares_it5.dta*
-rwxrwxrwx 1 root root   523835 May 20 21:24 hhdata.dta*
-rwxrwxrwx 1 root root   792302 May 20 21:24 indata.dta*
-rwxrwxrwx 1 root root     1685 May 20 21:27 poverty_flexBask.csv*
-rwxrwxrwx 1 root root     3072 May 20 21:24 povline_food_flex.dta*
-rwxrwxrwx 1 root root     3527 May 20 21:26 povline_food_flex_it1.dta*
-rwxrwxrwx 1 root root     3527 May 20 21:27 povline_food_flex_it2.dta*
-rwxrwxrwx 1 root root     3527 May 20 21:27 povline_food_flex_it3.dta*
-rwxrwxrwx 1 root root     3527 May 20 21:27 povline_food_flex_it4.dta*
-rwxrwxrwx 1 root root     3527 May 20 21:27 povline_food_flex_it5.dta*
-rwxrwxrwx 1 root root   603041 May 20 21:24 povlines.dta*
-rwxrwxrwx 1 root root    57687 May 20 21:26 povlines_it1.dta*
-rwxrwxrwx 1 root root    57687 May 20 21:27 povlines_it2.dta*
-rwxrwxrwx 1 root root    57687 May 20 21:27 povlines_it3.dta*
-rwxrwxrwx 1 root root    57687 May 20 21:27 povlines_it4.dta*
-rwxrwxrwx 1 root root    57687 May 20 21:27 povlines_it5.dta*
-rwxrwxrwx 1 root root     4110 May 20 21:24 povmeas.dta*
-rwxrwxrwx 1 root root    17647 May 20 21:24 price_unit_flex.dta*
-rwxrwxrwx 1 root root    17934 May 20 21:26 price_unit_flex_it1.dta*
-rwxrwxrwx 1 root root    18886 May 20 21:27 price_unit_flex_it2.dta*
-rwxrwxrwx 1 root root    18326 May 20 21:27 price_unit_flex_it3.dta*
-rwxrwxrwx 1 root root    18606 May 20 21:27 price_unit_flex_it4.dta*
-rwxrwxrwx 1 root root    18606 May 20 21:27 price_unit_flex_it5.dta*
-rwxrwxrwx 1 root root     9469 May 20 21:26 quan_flex_it1.dta*
-rwxrwxrwx 1 root root     9649 May 20 21:27 quan_flex_it2.dta*
-rwxrwxrwx 1 root root     9577 May 20 21:27 quan_flex_it3.dta*
-rwxrwxrwx 1 root root     9613 May 20 21:27 quan_flex_it4.dta*
-rwxrwxrwx 1 root root     9613 May 20 21:27 quan_flex_it5.dta*
-rwxrwxrwx 1 root root    25538 May 20 21:24 reg_tpi-tpi_trim.gph*
-rwxrwxrwx 1 root root  1745348 May 20 21:24 reg_tpi-tpi_trim.tif*
-rwxrwxrwx 1 root root   139431 May 20 21:26 relpoor_it1.dta*
-rwxrwxrwx 1 root root   139431 May 20 21:26 relpoor_it2.dta*
-rwxrwxrwx 1 root root   139431 May 20 21:27 relpoor_it3.dta*
-rwxrwxrwx 1 root root   139431 May 20 21:27 relpoor_it4.dta*
-rwxrwxrwx 1 root root   139431 May 20 21:27 relpoor_it5.dta*
-rwxrwxrwx 1 root root     3425 May 20 21:24 temp_index_reg_tpi.dta*
-rwxrwxrwx 1 root root     4766 May 20 21:24 tpi_reg_tpi_share.dta*
-rwxrwxrwx 1 root root    31378 May 20 21:24 tpi_unit_val_monthly.dta*
-rwxrwxrwx 1 root root    17983 May 20 21:24 tpi_unit_val_quarterly.dta*

{com}. use relpoor_it1

. exit, clear
