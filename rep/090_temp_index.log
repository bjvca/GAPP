-------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/rep/090_temp_index.log
  log type:  text
 opened on:   6 May 2013, 13:53:01

. clear

. set more off

. #delimit ;
delimiter now ;
. **************************************************************************
> * 090_temp_index.do     (start)
> **************************************************************************;
. *do "$path/new/010_initial.do";
. **************************************************************************
> * Program to compute the temporal price index (intra-survey)
> * 
> * The index is based on 6 regions (North/Center/South by rural/urban) 
> * and four quarters. For IAF 2002/03 (t=t1) it is based on the same 9
> * commodities used for the analysis of the 1996 IAF (t=t0), 
> * except that we have to go to 8 commodities because the 2002-03 survey 
> * does not distinguish between large and small groundnuts, which were 
> * separate items in the old index. For IOF 2008/09 (t=t2) we expand the
> * the food basket to include the 15 most important food products among
> * the poorest.
> *
> * The commodity weights for the items vary by the 6 regions, and are 
> * calculated from the observations in the IAF2002, using the relatively 
> * poor households (below median nominal consumption per capita).
> *
> * The unit values (prices) calculated here are also based on the prices 
> * paid by the relatively poor, using the same definition.
> *
> * K Simler, Sep 2003
> * CA
> * MAH, April 2010
> * URB, Feb 2013 (automatization to any number of n_tpi's)
> **************************************************************************;
. /*
> This file uses:
>         work\own.dta
>         work\receipts.dta
>         work\daily.dta
>         work\hhdata
>         work\cons_cat.dta
> 
> This file creates:
>         work\tpi_unit_val_quarterly.dta
>         work\tpi_unit_val_monthly.dta
>         work\tpi_news_share.dta
>         work\tpi_reg_tpi_share.dta
>         work\temp_index_news.dta
>         work\temp_index_reg_tpi.dta
> */      
> 
> 
> **************************************************************************
> * Either the products used for intertemporal price index is specified
> * explicitly, or they are automatically found as the the n_tpi products
> * with the highest weighted expenditure shares among the $bottom % poorest
> * part of the population
> **************************************************************************;
. * Generating the n_tpi most important food items for the poorest $bottom % ;
. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (start)
> **************************************************************************;
. *------------------------------------------------------------------------*
> * Population weights for each HH
> *------------------------------------------------------------------------*;
. use "$path/work\hhdata.dta", clear;

. keep hhid hhweight hhsize;

. gen popwt = hhweight*hhsize;

. lab var popwt "Population weights = hhsize X hhweight";

. sort hhid;

. tempfile popwt;

. save `popwt', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000001.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000001.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
      hhsize |      6775        4.96     2.75857          1         24
    hhweight |      6775    4533.332    4304.242         54      92511
       popwt |      6775    29614.26    44555.51         62     832599

. *------------------------------------------------------------------------*
> * Make list of all consumed products
> *------------------------------------------------------------------------*;
. *use "$path/in\cons_cod.dta", clear;
. *save "$path/work\cons_cod.dta", replace;
. use "$path/work\cons_cod.dta", clear;

. keep product descript;

. collapse product, by(descript);

. sort product;

. tempfile descript;

. save `descript', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000002.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000002.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
    descript |         1           2           .          2          2
     product |         2    565.0077    613.7578   131.0155        999

. *------------------------------------------------------------------------*
> * Find the poorest part of the population
> *------------------------------------------------------------------------*;
. use
> "$path/work\cons_cod.dta", clear;

. *use
> *"$path/work\cons_cod.dta", clear;
. ********************************************check the COICOP categories to create the var
> iable prod_cat, for the moment it is equal to food_cat******;
. keep hhid prod_cat product cod_hh_nom;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08

. merge hhid using `popwt';
variable hhid does not uniquely identify observations in the master data

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08
      hhsize |    412045    5.313592    2.837438          1         24
-------------+--------------------------------------------------------
    hhweight |    412045    4940.193    4557.506         54      92511
       popwt |    412045    33954.53     49935.3         62     832599
      _merge |    412045           3           0          3          3

. drop _merge;

. preserve;

. collapse (sum) cod_hh_nom (mean) popwt hhweight hhsize, by(hhid);

. gen cod_pc_nom = cod_hh_nom/hhsize;

.         sum cod_pc_nom [aw=popwt] , detail;

                         cod_pc_nom
-------------------------------------------------------------
      Percentiles      Smallest
 1%     332.3661       78.55931
 5%     680.3636       103.0936
10%     872.9067       107.7462       Obs                6775
25%     1328.983       145.4659       Sum of Wgt.   200636622

50%     2175.789                      Mean           9412.851
                        Largest       Std. Dev.        395673
75%     3972.618        1528531
90%      9057.59        1552604       Variance       1.57e+11
95%     17758.21        1790269       Skewness       202.1632
99%     88724.46       8.12e+07       Kurtosis       41456.83

.         global medcpc_= r(p$tpi_bottom);

.         gen bottom_ = cod_pc_nom <= $medcpc_;

. sum [aw=popwt];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    6775   200636622    2.52e+09   1.10e+09   1.01e+09   4.19e+09
  cod_hh_nom |    6775   200636622    67821.64    2005057   232.1918   4.06e+08
       popwt |    6775   200636622    96639.42   125478.2         62     832599
    hhweight |    6775   200636622    10417.53   10233.19         54      92511
      hhsize |    6775   200636622    7.911641   3.294698          1         24
-------------+-----------------------------------------------------------------
  cod_pc_nom |    6775   200636622    9412.851     395673   78.55931   8.12e+07
     bottom_ |    6775   200636622    .5001342   .5000369          0          1

. sum [aw=hhweight];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    6775    30713326    2.51e+09   1.12e+09   1.01e+09   4.19e+09
  cod_hh_nom |    6775    30713326    61490.01    2271154   232.1918   4.06e+08
       popwt |    6775    30713326    68053.16   97418.28         62     832599
    hhweight |    6775    30713326    8619.458   9115.422         54      92511
      hhsize |    6775    30713326    6.532559   3.001711          1         24
-------------+-----------------------------------------------------------------
  cod_pc_nom |    6775    30713326    10464.25   451493.4   78.55931   8.12e+07
     bottom_ |    6775    30713326    .4751522   .4994191          0          1

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
  cod_hh_nom |      6775    97487.28     4938495   232.1918   4.06e+08
       popwt |      6775    29614.26    44555.51         62     832599
    hhweight |      6775    4533.332    4304.242         54      92511
      hhsize |      6775        4.96     2.75857          1         24
-------------+--------------------------------------------------------
  cod_pc_nom |      6775    20773.97    987396.4   78.55931   8.12e+07
     bottom_ |      6775    .4529889    .4978218          0          1

. keep if bottom_==1;
(3706 observations deleted)

. keep hhid;

. sort hhid;

. tempfile hhid;

. save `hhid';
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000004.tmp saved

. restore;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08
      hhsize |    412045    5.313592    2.837438          1         24
-------------+--------------------------------------------------------
    hhweight |    412045    4940.193    4557.506         54      92511
       popwt |    412045    33954.53     49935.3         62     832599

. merge hhid using `hhid';
variable hhid does not uniquely identify observations in the master data

. tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |    239,058       58.02       58.02
          3 |    172,987       41.98      100.00
------------+-----------------------------------
      Total |    412,045      100.00

. keep if _m==3;
(239058 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    172987    2.80e+09    9.34e+08   1.01e+09   4.19e+09
     product |    172987    827.7079     345.362        100        999
    prod_cat |    172987    1.802505    .3981098          1          2
  cod_hh_nom |    172987    123.5388    359.1169          0    10958.9
      hhsize |    172987    5.986531    2.565258          1         19
-------------+--------------------------------------------------------
    hhweight |    172987    5154.068    4379.562        100      60164
       popwt |    172987    37036.91    46121.88        100     782132
      _merge |    172987           3           0          3          3

. *------------------------------------------------------------------------*
> * Keep only food product expenditure by the poor. Calculate food product
> * share of total food expenditure by the poor
> *------------------------------------------------------------------------*;
. keep if prod_cat==1;
(138823 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34164    2.78e+09    9.37e+08   1.01e+09   4.19e+09
     product |     34164    131.6748    15.79307        100        161
    prod_cat |     34164           1           0          1          1
  cod_hh_nom |     34164    297.0688    482.2309          0       9000
      hhsize |     34164    5.843549    2.501487          1         19
-------------+--------------------------------------------------------
    hhweight |     34164    5028.222    4166.388        100      60164
       popwt |     34164    35157.19    43014.83        100     782132
      _merge |     34164           3           0          3          3

. sort product;

. *preserve;
. collapse (sum) cod_hh_nom [aw=hhweight], by(product);

. sort cod;

. egen total=sum(cod_hh_nom);

. gen sh=100*cod_hh_nom/total;

. *------------------------------------------------------------------------*
> * Include product labels
> *------------------------------------------------------------------------*;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        62       130.5    18.04162        100        161
  cod_hh_nom |        62    189847.5      266511   1752.996    1123210
       total |        62    1.18e+07           0   1.18e+07   1.18e+07
          sh |        62    1.612903     2.26422   .0148931   9.542551

. sort product;

. merge product using `descript';
(label descrip already defined)

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         62       96.88       96.88
          2 |          2        3.13      100.00
------------+-----------------------------------
      Total |         64      100.00

. keep if _merge==1 | _merge==3;
(2 observations deleted)

. drop _merge;

. sort sh;

. *list;
. list in -$product_tpi_n/-1;

     +-----------------------------------------------------+
     | product   cod_hh~m      total         sh   descript |
     |-----------------------------------------------------|
 48. |     153   222373.6   1.18e+07   1.889238          . |
 49. |     125   230312.1   1.18e+07   1.956682          . |
 50. |     123   230714.2   1.18e+07   1.960098          . |
 51. |     127   234920.9   1.18e+07   1.995837          . |
 52. |     140   251058.4   1.18e+07   2.132938          . |
     |-----------------------------------------------------|
 53. |     103   316957.7   1.18e+07   2.692804          . |
 54. |     104   335649.7   1.18e+07   2.851607          . |
 55. |     147   418515.3   1.18e+07   3.555615          . |
 56. |     117   440335.5   1.18e+07   3.740995          . |
 57. |     116   479750.5   1.18e+07   4.075856          . |
     |-----------------------------------------------------|
 58. |     107   720970.3   1.18e+07   6.125207          . |
 59. |     141   940596.5   1.18e+07   7.991104          . |
 60. |     108    1056863   1.18e+07   8.978882          . |
 61. |     105    1108255   1.18e+07   9.415496          . |
 62. |     113    1123210   1.18e+07   9.542551          . |
     +-----------------------------------------------------+

. list product descript in -$product_tpi_n/-1;

     +--------------------+
     | product   descript |
     |--------------------|
 48. |     153          . |
 49. |     125          . |
 50. |     123          . |
 51. |     127          . |
 52. |     140          . |
     |--------------------|
 53. |     103          . |
 54. |     104          . |
 55. |     147          . |
 56. |     117          . |
 57. |     116          . |
     |--------------------|
 58. |     107          . |
 59. |     141          . |
 60. |     108          . |
 61. |     105          . |
 62. |     113          . |
     +--------------------+

. *restore;
. *------------------------------------------------------------------------*
> * Keep the required number of most important food products
> *------------------------------------------------------------------------*;
. keep in -$product_tpi_n/-1;
(47 observations deleted)

. list;

     +-----------------------------------------------------+
     | product   cod_hh~m      total         sh   descript |
     |-----------------------------------------------------|
  1. |     153   222373.6   1.18e+07   1.889238          . |
  2. |     125   230312.1   1.18e+07   1.956682          . |
  3. |     123   230714.2   1.18e+07   1.960098          . |
  4. |     127   234920.9   1.18e+07   1.995837          . |
  5. |     140   251058.4   1.18e+07   2.132938          . |
     |-----------------------------------------------------|
  6. |     103   316957.7   1.18e+07   2.692804          . |
  7. |     104   335649.7   1.18e+07   2.851607          . |
  8. |     147   418515.3   1.18e+07   3.555615          . |
  9. |     117   440335.5   1.18e+07   3.740995          . |
 10. |     116   479750.5   1.18e+07   4.075856          . |
     |-----------------------------------------------------|
 11. |     107   720970.3   1.18e+07   6.125207          . |
 12. |     141   940596.5   1.18e+07   7.991104          . |
 13. |     108    1056863   1.18e+07   8.978882          . |
 14. |     105    1108255   1.18e+07   9.415496          . |
 15. |     113    1123210   1.18e+07   9.542551          . |
     +-----------------------------------------------------+

. gen product_tpi=1;

. keep product product_tpi;

. list;

     +--------------------+
     | product   produc~i |
     |--------------------|
  1. |     153          1 |
  2. |     125          1 |
  3. |     123          1 |
  4. |     127          1 |
  5. |     140          1 |
     |--------------------|
  6. |     103          1 |
  7. |     104          1 |
  8. |     147          1 |
  9. |     117          1 |
 10. |     116          1 |
     |--------------------|
 11. |     107          1 |
 12. |     141          1 |
 13. |     108          1 |
 14. |     105          1 |
 15. |     113          1 |
     +--------------------+

. sort product;

. tempfile product_tpi;

. save `product_tpi', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000005.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000005.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        15    121.9333     16.5679        103        153
 product_tpi |        15           1           0          1          1

. clear;

. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (end)
> **************************************************************************;
. **************************************************************************;
. * First, need to calculate the average prices for the food items, by 
> * strata and quarter. For this, we are using the "unit values"
> * (value/quantity) for the observations in the consumption questionnaires,
> * including daily, own and receipts-in-kind.
> *
> * The unit values are constructed as sum(value)/sum(quantity), which effectively
> * weights them by the quantity and value of the transaction. Sampling
> * weights are also used.
> *
> * Get the own consumption file, and limit analysis to the observations
> * in KGs where both value and quantity are available.
> **************************************************************************;
. use "$path/work/cons_cod.dta";

. *use "$path/work/cons_cod.dta";
. keep if prod_cat==1;
(322449 observations deleted)

. drop if quantityd==0 | quantityd==.;
(4392 observations deleted)

. *keep if quantityd!=. & cod_hh_nom2!=.;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     85204    2.44e+09    1.14e+09   1.01e+09   4.19e+09
     product |     85204    131.0922    15.78502        100        161
    food_cat |     85204           1           0          1          1
    prod_cat |     85204           1           0          1          1
    descript |         0
-------------+--------------------------------------------------------
       untcd |     83746    44.25118    30.51372          1         85
   quantityd |     85204     .819643    3.245947   .0000286   364.2857
 cod_hh_nom3 |     85204    403.1168    658.9792          0      18500
  cod_hh_nom |     85204    403.1168    658.9792          0      18500
 cod_hh_nom2 |     84857    404.7653    659.8198   7.142857      18500

. sort product;

. merge product using `product_tpi';
variable product does not uniquely identify observations in the master data

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     50,968       59.82       59.82
          3 |     34,236       40.18      100.00
------------+-----------------------------------
      Total |     85,204      100.00

. drop _merge;

. keep if $product_tpi;
(50968 observations deleted)

. *        replace valued_ac=0 if valued_ac==.;
. *        replace quantityd_ac=0 if quantityd_ac==.;
.         gen valued_tot=cod_hh_nom2;

.         gen quantityd_tot=quantityd;

. *               replace quantityd_tot=0 if (valued_tot>0 & valued_tot<.) & quantityd_tot=
> =.;
.         keep if quantityd_tot!=. & valued_tot!=.;
(0 observations deleted)

.                 collapse (sum) valued_tot quantityd_tot, by(hhid product);

.                 sort hhid;

. tempfile acredd;

. save `acredd' , replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000006.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000006.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34236    2.47e+09    1.13e+09   1.01e+09   4.19e+09
     product |     34236    123.5172     15.5879        103        153
  valued_tot |     34236    578.2445    711.6146   7.142857      12000
quantityd_~t |     34236    1.508504    4.636162   .0028571   364.2857

. /*
> **************************************************************************;
> * Create a data set with an empty 1 observation. Used to avoid empty data
> * sets when the survey do not have the Mozambican set up
> **************************************************************************;
> use "$path/work/own.dta";
> 
> preserve;
> keep in 1;
> drop unit valued quantityd;
> gen unit=2;
> gen valued=0;
> gen quantityd=0;
> tempfile 1obs;
> save `1obs';
> restore;
> 
> **************************************************************************;
> * Own consumption
> **************************************************************************;
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_ac;
>         rename quantityd quantityd_ac;
>         compress;
>         sort hhid product;
>         tempfile ac;
> save `ac', replace;
> 
> **************************************************************************;
> * Now do a similar thing with receipts-in-kind file.
> **************************************************************************;
> use "$path/work/receipts.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> 
> 
> keep if $product_tpi;
> append using `1obs';
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_re;
>         rename quantityd quantityd_re;
>         compress;
>         sort hhid product;
>         tempfile re;
> save `re', replace;
> 
> **************************************************************************;
> * And also with the daily expenditure file.
> **************************************************************************;
> use "$path/work/daily.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> *rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> *rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         collapse (sum) value quantity days , 
>                 by(hhid product unit);
> 
>         gen valued=value/7 if days<=7;
>         replace valued=value/days if days>7 & days<.;
>         gen quantityd=quantity/7 if days<=7;
>         replace quantityd=quantity/days if days>7 & days<.;
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
> 
>         rename valued valued_dd;
>         rename quantityd quantityd_dd;
>         compress;
>         sort hhid product;
>         tempfile dd;
> save `dd', replace;
> 
> 
> 
> 
> **************************************************************************;
> * Merge the three components (own, daily, receipts) together at the HH/product level, 
> * then aggregate to the regional level, using the sample weights (hhweight).
> * We DON'T want to weight by "hhsize" because the quantity and value are
> * already for the household (i.e., other things equal, larger households
> * are buying larger quantities, and therefore already getting more weight).
> * Then calculate sum(val)/sum(quantity) to get the quantity weighted mean
> * unit value in each strata in each quarter.
> **************************************************************************;
> use `ac';
>         sort hhid product;
>         merge hhid product using `re';
>         tab _m;
>         drop _m;
>         
>         sort hhid product;
>         merge hhid product using `dd';
>         tab _m;
>         drop _m;
>         
>         replace valued_ac=0 if valued_ac==.;
>         replace valued_re=0 if valued_re==.;
>         replace valued_dd=0 if valued_dd==.;
>         replace quantityd_ac=0 if quantityd_ac==.;
>         replace quantityd_re=0 if quantityd_re==.;
>         replace quantityd_dd=0 if quantityd_dd==.;
> 
>         gen valued_tot=valued_ac+valued_re+valued_dd;
>         gen quantityd_tot=quantityd_ac+quantityd_re+quantityd_dd;
> 
>         sort hhid;
> 
>         tempfile acredd;
> save `acredd' , replace;
> */
> 
> 
> 
> use "$path/work/hhdata.dta";

.         keep strata hhid hhweight hhsize rural survmon survquar news spdomain reg_tpi;

.         sort hhid;

.         tempfile hhd;

. save `hhd' , replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000007.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000007.tmp saved

. use `acredd', clear;

.         merge hhid using `hhd';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        315        0.91        0.91
          3 |     34,236       99.09      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         drop _merge;

.                 tab survquar , miss;

 Sequential |
     Survey |
    Quarter |
    May-Jun |
      09=1) |      Freq.     Percent        Cum.
------------+-----------------------------------
 May-Jul 09 |      8,742       25.30       25.30
Sept-Oct 09 |      8,992       26.03       51.33
Nov09-Jan10 |      7,404       21.43       72.76
 Feb-Apr 10 |      9,413       27.24      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.                 tab survmon survquar, miss;

Sequential |
    Survey |
Month (May |   Sequential Survey Quarter May-Jun 09=1)
   2009=1) | May-Jul 0  Sept-Oct   Nov09-Jan  Feb-Apr 1 |     Total
-----------+--------------------------------------------+----------
    May 09 |       187          0          0          0 |       187 
    Jun 09 |     6,230          0          0          0 |     6,230 
    Jul 09 |     2,325          0          0          0 |     2,325 
    Sep 09 |         0      3,119          0          0 |     3,119 
    Oct 09 |         0      5,873          0          0 |     5,873 
    Nov 09 |         0          0      3,162          0 |     3,162 
    Dec 09 |         0          0      2,074          0 |     2,074 
    Jan 10 |         0          0      2,168          0 |     2,168 
    Feb 10 |         0          0          0      2,225 |     2,225 
    Mar 10 |         0          0          0      4,683 |     4,683 
    Apr 10 |         0          0          0      2,505 |     2,505 
-----------+--------------------------------------------+----------
     Total |     8,742      8,992      7,404      9,413 |    34,551 


.         compress;
product was float now int
survquar was float now byte
survmon was float now byte
rural was float now byte
news was float now byte
reg_tpi was float now byte
spdomain was float now byte
hhsize was double now byte

.         sort hhid;

. save `acredd', replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000006.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34551    2.47e+09    1.13e+09   1.01e+09   4.19e+09
     product |     34236    123.5172     15.5879        103        153
  valued_tot |     34236    578.2445    711.6146   7.142857      12000
quantityd_~t |     34236    1.508504    4.636162   .0028571   364.2857
      strata |     34551    5.478278    2.879859          1         10
-------------+--------------------------------------------------------
      hhsize |     34551    5.225059     2.74337          1         24
    hhweight |     34551    4924.711    4407.844         54      92511
    survquar |     34551     2.50615    1.140574          1          4
     survmon |     34551    6.729646    3.333076          1         12
       rural |     34551    .8112066    .3913501          0          1
-------------+--------------------------------------------------------
        news |     34551    2.380539    1.120118          1          4
     reg_tpi |     34551    1.188793    .3913501          1          2
    spdomain |     34551    3.200399    1.378315          1          5

. **************************************************************************;
. * Need to merge with the file that has nominal consumption per household,
> * and compute nominal consumption per capita from that, so that we can
> * choose the relatively poor (i.e., below median nominal consumption per
> * capita).
> **************************************************************************;
. use "$path\work\conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta" ;
. *save "$path/work/cons_cat.dta", replace ;
. *use "$path/work/cons_cat.dta" ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path\work\hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |      6,775      100.00      100.00
------------+-----------------------------------
      Total |      6,775      100.00

.  drop _m;

.         collapse (mean) cons_hh_nom hhsize hhweight , by(hhid);

.         gen cpc=cons_hh_nom/hhsize;

.         sum cpc [aw=hhsize*hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%     332.3661       78.55931
 5%     680.3636       103.0936
10%     872.9067       107.7462       Obs                6775
25%     1328.983       145.4659       Sum of Wgt.   200636622

50%     2175.789                      Mean           9412.851
                        Largest       Std. Dev.        395673
75%     3972.618        1528531
90%      9057.59        1552604       Variance       1.57e+11
95%     17758.21        1790269       Skewness       202.1632
99%     88724.46       8.12e+07       Kurtosis       41456.83

.         global medcpc=r(p$tpi_bottom);

.         gen bottom_tpi=cpc<=$medcpc;

.         keep hhid bottom_tpi;

.         sort hhid;

.         tempfile bottom_tpi;

. save `bottom_tpi', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000008.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h000008.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
  bottom_tpi |      6775    .4529889    .4978218          0          1

. use `acredd' ;

.         merge hhid using `bottom_tpi';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |     34,551      100.00      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         drop _merge;

.         keep if bottom_tpi;
(20939 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     13612    2.77e+09    9.56e+08   1.01e+09   4.19e+09
     product |     13473    123.4582    15.75092        103        153
  valued_tot |     13473    513.2872    612.4287   7.142857       9000
quantityd_~t |     13473     1.48159     4.67223   .0051429        362
      strata |     13612    6.282765    2.360666          1         10
-------------+--------------------------------------------------------
      hhsize |     13612    5.921393    2.485605          1         19
    hhweight |     13612    5240.411    4192.181        100      60164
    survquar |     13612    2.550103    1.163222          1          4
     survmon |     13612    6.841316      3.4422          1         12
       rural |     13612    .9381428    .2409048          0          1
-------------+--------------------------------------------------------
        news |     13612    2.668969    .9527972          1          4
     reg_tpi |     13612    1.061857    .2409048          1          2
    spdomain |     13612    3.548266    1.190332          1          5
  bottom_tpi |     13612           1           0          1          1

. * Drop one HH with extremely high quantity and low value in IAF 2002/03 (t=t1) ;
. *        drop if hhid==263001;
.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survmon);

.                         drop if product==.;
(35 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         lab var ppkg "Unit value per kg";

.                         sort reg_tpi product ;

.                         compress;

.                         tempfile uvm;

.                 save `uvm', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000a.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000a.tmp saved

.                 save "$path/work/tpi_unit_val_monthly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_monthly.dta saved

.         restore;

.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(21 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         sort reg_tpi product survquar;

.                         list in  1/3;

     +------------------------------------------------------------------------+
     | product     survquar   news   reg_tpi   valued~t   quanti~t       ppkg |
     |------------------------------------------------------------------------|
  1. |     103   May-Jul 09      4         1   35641.07   120.9178   294.7545 |
  2. |     103   May-Jul 09      2         1   13192.56   35.69681   369.5725 |
  3. |     103   May-Jul 09      3         1   1387.982   4.285715   323.8625 |
     +------------------------------------------------------------------------+

.                         list in -3/-1;

     +-------------------------------------------------------------------------+
     | product      survquar   news   reg_tpi   valued~t   quanti~t       ppkg |
     |-------------------------------------------------------------------------|
396. |     153   Nov09-Jan10      3         2       3000   2.349057   1277.108 |
397. |     153   Nov09-Jan10      1         2   571.4286   .3809524       1500 |
398. |     153    Feb-Apr 10      1         2   285.7143   .2057143   1388.889 |
     +-------------------------------------------------------------------------+

.                         tempfile uvq;

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_quarterly.dta sav
> ed

.                 save `uvq', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000c.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000c.tmp saved

.         restore;

.         **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each reg_tpi & product combination. This should eliminate outliers that
> * may have an undue influence on the price calculation. Then use sample
> * weighting PLUS quantity weighting on those HH-level observations.
> **************************************************************************;
.         preserve;

.                 gen hhppkg=valued_tot/quantityd_tot;
(139 missing values generated)

.                 egen lower5=pctile(hhppkg), p(5) by(reg_tpi product);
(139 missing values generated)

.                 egen upper5=pctile(hhppkg), p(95) by(reg_tpi product);
(139 missing values generated)

.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
(972 observations deleted)

.                                 gen hhqtywt=hhweight*quantityd_tot;
(139 missing values generated)

.                                 collapse (sum) valued_tot quantityd_tot [aw=hhqtywt] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(0 observations deleted)

.                         gen ppkg_trim=valued_tot/quantityd_tot;

.                         lab var ppkg_trim "90% trimmed unit value per kg";

.                         sort reg_tpi product survquar;

.                         list , nol;

     +----------------------------------------------------------------------+
     | product   survquar   news   reg_tpi   valued~t   quanti~t   ppkg_t~m |
     |----------------------------------------------------------------------|
  1. |     103          1      1         1   28319.06   96.17417    294.456 |
  2. |     103          1      4         1   41846.67   152.8278   273.8158 |
  3. |     103          1      3         1   1387.982   4.285715   323.8625 |
  4. |     103          1      2         1   12331.36   35.81787   344.2795 |
  5. |     103          2      1         1   18820.04    63.6893   295.4977 |
     |----------------------------------------------------------------------|
  6. |     103          2      2         1   10384.88   29.72081   349.4143 |
  7. |     103          2      4         1   72394.29   233.4372   310.1232 |
  8. |     103          2      3         1   1714.286   4.285715        400 |
  9. |     103          3      4         1   31806.17   97.61178   325.8436 |
 10. |     103          3      1         1   9132.665   27.16821   336.1527 |
     |----------------------------------------------------------------------|
 11. |     103          3      3         1   10114.38   37.68812   268.3706 |
 12. |     103          3      2         1   2621.611   8.571429   305.8545 |
 13. |     103          4      2         1   11809.92   38.17354   309.3746 |
 14. |     103          4      1         1   27228.33    88.0705   309.1652 |
 15. |     103          4      4         1   112989.5    364.812   309.7197 |
     |----------------------------------------------------------------------|
 16. |     104          1      4         1   137732.1   176.4194   780.7081 |
 17. |     104          1      1         1   35831.35   55.45506   646.1331 |
 18. |     104          1      3         1   668.7192   .7142857   936.2068 |
 19. |     104          1      2         1   1339.313   1.785714   750.0153 |
 20. |     104          2      1         1   14192.94    14.0708    1008.68 |
     |----------------------------------------------------------------------|
 21. |     104          2      3         1   2727.042   2.419824   1126.959 |
 22. |     104          2      2         1   4090.226   4.859248   841.7404 |
 23. |     104          2      4         1   115863.6   151.6348   764.0965 |
 24. |     104          3      1         1   23757.38   33.56893   707.7194 |
 25. |     104          3      2         1   1973.631    3.22393   612.1818 |
     |----------------------------------------------------------------------|
 26. |     104          3      4         1   30398.32   27.86736   1090.822 |
 27. |     104          3      3         1   571.4286   .7142857        800 |
 28. |     104          4      4         1   46275.97   50.80224   910.9042 |
 29. |     104          4      3         1   6421.369   14.98156   428.6182 |
 30. |     104          4      1         1   10620.11    13.5381   784.4606 |
     |----------------------------------------------------------------------|
 31. |     104          4      2         1   714.2857   .7142857   999.9999 |
 32. |     105          1      1         1    85835.1   364.7556   235.3222 |
 33. |     105          1      3         1   26956.07   58.02394   464.5681 |
 34. |     105          1      4         1   75685.91   353.5317   214.0852 |
 35. |     105          1      2         1   110893.2   530.7202   208.9486 |
     |----------------------------------------------------------------------|
 36. |     105          2      2         1   224928.8   826.2477   272.2292 |
 37. |     105          2      1         1   54149.07   226.3349   239.2431 |
 38. |     105          2      4         1   82847.45   346.1394   239.3471 |
 39. |     105          2      3         1   151520.2   457.6317   331.0963 |
 40. |     105          3      1         1   78451.45   224.1804   349.9478 |
     |----------------------------------------------------------------------|
 41. |     105          3      4         1   106403.7   491.2505   216.5976 |
 42. |     105          3      3         1   147029.3   380.7123   386.1953 |
 43. |     105          3      2         1     206568   662.0595   312.0082 |
 44. |     105          4      4         1   131072.2   528.1904   248.1533 |
 45. |     105          4      3         1   168381.8   448.4791   375.4507 |
     |----------------------------------------------------------------------|
 46. |     105          4      2         1   170147.4   843.8369   201.6354 |
 47. |     105          4      1         1   100834.2   620.9468   162.3879 |
 48. |     107          1      4         1   82677.26   953.2077   86.73583 |
 49. |     107          1      2         1   110457.5   1408.239   78.43666 |
 50. |     107          1      3         1     142807   2112.519   67.60035 |
     |----------------------------------------------------------------------|
 51. |     107          1      1         1   82722.77   821.4803   100.6996 |
 52. |     107          2      1         1   30587.14   353.2005   86.59994 |
 53. |     107          2      2         1   80616.85   1267.057   63.62529 |
 54. |     107          2      3         1    86498.9   1169.498   73.96242 |
 55. |     107          2      4         1   63164.99   817.0069   77.31268 |
     |----------------------------------------------------------------------|
 56. |     107          3      4         1   32936.36   480.7773   68.50648 |
 57. |     107          3      2         1   75445.79   833.3967   90.52807 |
 58. |     107          3      3         1   42848.41   739.6446   57.93108 |
 59. |     107          3      1         1   18412.31   172.5484   106.7081 |
 60. |     107          4      3         1   208717.1   3406.566   61.26908 |
     |----------------------------------------------------------------------|
 61. |     107          4      2         1   42145.69   585.6392   71.96529 |
 62. |     107          4      1         1   21312.65   288.0293   73.99475 |
 63. |     107          4      4         1   35103.88   287.1842   122.2347 |
 64. |     108          1      3         1    97830.6   97.82584   1000.049 |
 65. |     108          1      1         1   24004.58   130.5992   183.8034 |
     |----------------------------------------------------------------------|
 66. |     108          1      2         1     216590   289.5021   748.1463 |
 67. |     108          1      4         1    81958.5    367.285   223.1469 |
 68. |     108          2      2         1   157358.9   208.0819   756.2352 |
 69. |     108          2      3         1   83467.95   199.5907   418.1956 |
 70. |     108          2      1         1   14916.99   14.45489   1031.968 |
     |----------------------------------------------------------------------|
 71. |     108          2      4         1   40350.73   69.73661   578.6161 |
 72. |     108          3      1         1   20203.14   22.62487   892.9616 |
 73. |     108          3      4         1   32316.56   61.21784   527.8944 |
 74. |     108          3      3         1   106679.6   134.0281   795.9493 |
 75. |     108          3      2         1   101096.5    126.755   797.5739 |
     |----------------------------------------------------------------------|
 76. |     108          4      1         1   4030.669   4.030669       1000 |
 77. |     108          4      4         1   10573.29    14.5281   727.7824 |
 78. |     108          4      3         1   252963.8   365.9123   691.3235 |
 79. |     108          4      2         1   78278.41   124.1961   630.2805 |
 80. |     113          1      1         1   43053.51   38.45917    1119.46 |
     |----------------------------------------------------------------------|
 81. |     113          1      3         1   63118.04   46.14314   1367.875 |
 82. |     113          1      2         1   115095.6   110.3238   1043.252 |
 83. |     113          1      4         1   88301.26   75.89532   1163.461 |
 84. |     113          2      2         1   255387.1   246.9376   1034.217 |
 85. |     113          2      1         1   120476.6   95.07635   1267.156 |
     |----------------------------------------------------------------------|
 86. |     113          2      3         1   110388.4   96.20217   1147.463 |
 87. |     113          2      4         1   119030.8   135.9409   875.6071 |
 88. |     113          3      2         1   125144.4    117.175   1068.013 |
 89. |     113          3      3         1   47210.46   41.76289   1130.441 |
 90. |     113          3      4         1   173842.9   215.9366   805.0648 |
     |----------------------------------------------------------------------|
 91. |     113          3      1         1   51669.12   42.27932    1222.09 |
 92. |     113          4      4         1   58064.97   79.76872   727.9165 |
 93. |     113          4      3         1   102741.9   110.4949   929.8336 |
 94. |     113          4      2         1   115322.7   157.1783   733.7063 |
 95. |     113          4      1         1   73039.96   67.77036   1077.757 |
     |----------------------------------------------------------------------|
 96. |     116          1      3         1   126215.3   207.1279   609.3591 |
 97. |     116          1      1         1   114.2857   .2857143        400 |
 98. |     116          1      2         1   66574.02   160.0485   415.9616 |
 99. |     116          1      4         1   1022.575   1.225386   834.4922 |
100. |     116          2      2         1   53231.25   126.5735    420.556 |
     |----------------------------------------------------------------------|
101. |     116          2      4         1   3527.077   5.424232   650.2446 |
102. |     116          2      3         1   37001.17   62.30716    593.851 |
103. |     116          2      1         1   42.85714   .0357143       1200 |
104. |     116          3      2         1   8215.117    12.3099   667.3583 |
105. |     116          3      4         1   1939.862   3.350982   578.8937 |
     |----------------------------------------------------------------------|
106. |     116          3      1         1   142.8571   .1428571       1000 |
107. |     116          3      3         1   120366.2   218.5446   550.7625 |
108. |     116          4      2         1   25680.73   59.49715   431.6295 |
109. |     116          4      1         1   714.2857   .7142857   999.9999 |
110. |     116          4      4         1    1677.04   2.376296   705.7369 |
     |----------------------------------------------------------------------|
111. |     116          4      3         1     278767   560.4436   497.4041 |
112. |     117          1      4         1   23216.33    6.04788   3838.754 |
113. |     117          1      1         1   12718.11   2.997132   4243.426 |
114. |     117          1      2         1   25301.43   5.970792   4237.533 |
115. |     117          1      3         1   40132.54   9.889278   4058.187 |
     |----------------------------------------------------------------------|
116. |     117          2      2         1   59590.94    14.6633   4063.951 |
117. |     117          2      1         1   6724.286   1.731291   3883.972 |
118. |     117          2      4         1   27350.26   6.544486    4179.13 |
119. |     117          2      3         1   80023.45   18.78896   4259.068 |
120. |     117          3      3         1   39795.54   9.318532    4270.58 |
     |----------------------------------------------------------------------|
121. |     117          3      2         1    30071.8   7.313157   4112.013 |
122. |     117          3      4         1   6515.356   1.589221   4099.716 |
123. |     117          3      1         1      22730   5.053998    4497.43 |
124. |     117          4      3         1   77151.85   19.19659    4019.04 |
125. |     117          4      4         1   19625.17   5.160518   3802.946 |
     |----------------------------------------------------------------------|
126. |     117          4      1         1   11541.39   3.231076   3571.996 |
127. |     117          4      2         1   46554.72   11.39253   4086.424 |
128. |     123          1      3         1   33864.94   155.2341   218.1539 |
129. |     123          1      2         1   20241.32   111.7814   181.0794 |
130. |     123          1      1         1   6090.107   8.920879   682.6802 |
     |----------------------------------------------------------------------|
131. |     123          1      4         1   12333.12   18.33054   672.8181 |
132. |     123          2      2         1   22935.11   88.47416   259.2295 |
133. |     123          2      4         1   25085.14    109.447   229.1989 |
134. |     123          2      1         1   6906.617   42.69689   161.7592 |
135. |     123          2      3         1   23214.84   54.64881   424.8005 |
     |----------------------------------------------------------------------|
136. |     123          3      2         1    29201.8   96.01946   304.1237 |
137. |     123          3      4         1   3401.328   22.35786   152.1312 |
138. |     123          3      1         1   5028.486   12.91539   389.3405 |
139. |     123          3      3         1   39192.42   86.50952   453.0417 |
140. |     123          4      2         1   12075.58    39.7925   303.4638 |
     |----------------------------------------------------------------------|
141. |     123          4      1         1   6811.288   40.95889   166.2957 |
142. |     123          4      4         1   4187.914   3.498721   1196.984 |
143. |     123          4      3         1   51329.11    102.645   500.0643 |
144. |     125          1      1         1    20310.1   322.3282   63.01062 |
145. |     125          1      2         1   10905.29   139.8439   77.98186 |
     |----------------------------------------------------------------------|
146. |     125          1      3         1   26686.71   336.8191   79.23158 |
147. |     125          1      4         1   13269.36   168.3128   78.83746 |
148. |     125          2      4         1   28044.84   306.6477   91.45622 |
149. |     125          2      3         1   40327.22   543.5835   74.18772 |
150. |     125          2      2         1   29205.53   439.5852   66.43884 |
     |----------------------------------------------------------------------|
151. |     125          2      1         1   10878.33   132.2904   82.23067 |
152. |     125          3      1         1   7719.847   107.8986   71.54726 |
153. |     125          3      3         1   10088.12   157.2965   64.13445 |
154. |     125          3      2         1   15719.08   228.1121   68.90946 |
155. |     125          3      4         1    15624.2   224.3097   69.65456 |
     |----------------------------------------------------------------------|
156. |     125          4      2         1   24096.16   288.1129   83.63444 |
157. |     125          4      3         1   72210.77   774.3654   93.25153 |
158. |     125          4      4         1   39501.82   386.4713   102.2115 |
159. |     125          4      1         1   26043.83   278.5963   93.48235 |
160. |     127          1      2         1   16679.69   22.16946   752.3723 |
     |----------------------------------------------------------------------|
161. |     127          1      3         1   35782.62   17.76497   2014.224 |
162. |     127          1      4         1   7398.482   7.891929   937.4744 |
163. |     127          1      1         1    6911.74   7.638372   904.8708 |
164. |     127          2      1         1   6340.895   9.259837   684.7739 |
165. |     127          2      4         1   4693.995   5.661407   829.1216 |
     |----------------------------------------------------------------------|
166. |     127          2      3         1   36051.68   32.23697   1118.333 |
167. |     127          2      2         1   17787.03   29.50617    602.824 |
168. |     127          3      1         1   6257.468   8.532853   733.3383 |
169. |     127          3      2         1    14077.9   23.26872   605.0137 |
170. |     127          3      3         1   24660.41   23.30393   1058.208 |
     |----------------------------------------------------------------------|
171. |     127          3      4         1   8321.004   7.638924    1089.29 |
172. |     127          4      1         1   7253.347   9.929506   730.4842 |
173. |     127          4      3         1   51423.85     41.469   1240.055 |
174. |     127          4      2         1   15046.16   20.34563   739.5276 |
175. |     127          4      4         1   9813.533   7.246903   1354.169 |
     |----------------------------------------------------------------------|
176. |     140          1      1         1     161902   300.5081   538.7609 |
177. |     140          1      4         1   85581.37   85.12599   1005.349 |
178. |     140          1      3         1   23960.85   22.78705   1051.512 |
179. |     140          1      2         1   39891.63   31.14909   1280.667 |
180. |     140          2      1         1   13098.93    9.11168   1437.598 |
     |----------------------------------------------------------------------|
181. |     140          2      3         1   26419.59   24.35346   1084.839 |
182. |     140          2      4         1   15900.28   15.04497    1056.85 |
183. |     140          2      2         1    46750.7   42.26354   1106.171 |
184. |     140          3      1         1   14762.72   18.96679   778.3455 |
185. |     140          3      2         1   8196.775   6.590785   1243.672 |
     |----------------------------------------------------------------------|
186. |     140          3      3         1   3949.273   7.958361    496.242 |
187. |     140          3      4         1   28262.17   25.27161   1118.337 |
188. |     140          4      1         1   1476.889   .9765226   1512.397 |
189. |     140          4      3         1   1520.557   2.109506   720.8116 |
190. |     140          4      2         1   2109.772   .9312524   2265.521 |
     |----------------------------------------------------------------------|
191. |     140          4      4         1   6416.295   4.845619   1324.143 |
192. |     141          1      1         1   39327.19   32.88084   1196.052 |
193. |     141          1      2         1   46882.37   29.60419    1583.64 |
194. |     141          1      3         1   157167.6   81.73759   1922.831 |
195. |     141          1      4         1   140736.5   95.25791   1477.426 |
     |----------------------------------------------------------------------|
196. |     141          2      4         1    80079.3   49.44096   1619.695 |
197. |     141          2      1         1   11767.76   6.594709   1784.424 |
198. |     141          2      3         1   90901.21   42.62847   2132.406 |
199. |     141          2      2         1   44040.59    28.9514    1521.19 |
200. |     141          3      2         1   19560.13    15.8244   1236.074 |
     |----------------------------------------------------------------------|
201. |     141          3      1         1   55588.41   36.36207   1528.747 |
202. |     141          3      4         1   66110.98   45.70781   1446.382 |
203. |     141          3      3         1      91956   50.35058   1826.314 |
204. |     141          4      4         1   57307.04   31.20506   1836.466 |
205. |     141          4      2         1   43447.75   20.69524   2099.408 |
     |----------------------------------------------------------------------|
206. |     141          4      1         1   35181.79   26.48932    1328.15 |
207. |     141          4      3         1   258604.8   108.6249   2380.715 |
208. |     147          1      2         1   59044.31   27.08213   2180.195 |
209. |     147          1      3         1   30112.31   13.70485   2197.201 |
210. |     147          1      4         1    19542.7   8.790923   2223.054 |
     |----------------------------------------------------------------------|
211. |     147          1      1         1   38382.07   16.59448   2312.941 |
212. |     147          2      4         1   15720.01   6.742126    2331.61 |
213. |     147          2      1         1   15653.06   6.781597   2308.167 |
214. |     147          2      2         1   47165.81   20.72525   2275.766 |
215. |     147          2      3         1    44735.3   20.32564    2200.93 |
     |----------------------------------------------------------------------|
216. |     147          3      1         1   22747.05   9.878564   2302.668 |
217. |     147          3      4         1   9350.513   3.925496   2381.995 |
218. |     147          3      3         1   29986.38   12.68983   2363.024 |
219. |     147          3      2         1   34514.68   14.66574   2353.422 |
220. |     147          4      3         1   60579.18   25.49772   2375.866 |
     |----------------------------------------------------------------------|
221. |     147          4      2         1    69414.7   30.70572   2260.644 |
222. |     147          4      1         1   22461.61   9.464099   2373.349 |
223. |     147          4      4         1   11068.55    4.60249   2404.904 |
224. |     153          1      3         1   27546.25    51.5345   534.5204 |
225. |     153          1      1         1   4304.512    2.85301   1508.761 |
     |----------------------------------------------------------------------|
226. |     153          1      4         1   15983.09   15.80779   1011.089 |
227. |     153          1      2         1   20145.98   37.43933   538.0968 |
228. |     153          2      4         1   9800.777   13.10277   747.9926 |
229. |     153          2      2         1   24294.25    56.5157   429.8674 |
230. |     153          2      1         1   4594.598   2.546755   1804.099 |
     |----------------------------------------------------------------------|
231. |     153          2      3         1   28714.01   53.60474   535.6617 |
232. |     153          3      4         1   19314.54   16.82786   1147.771 |
233. |     153          3      1         1   2160.842   1.870472   1155.239 |
234. |     153          3      3         1   49231.88   96.46074   510.3826 |
235. |     153          3      2         1   13806.17   27.70322   498.3598 |
     |----------------------------------------------------------------------|
236. |     153          4      4         1   6112.656   4.983305   1226.627 |
237. |     153          4      2         1   20709.89   73.44278   281.9867 |
238. |     153          4      3         1   61021.14   125.8182   484.9944 |
239. |     153          4      1         1   3506.814    4.33482   808.9872 |
240. |     103          1      4         2   2508.368    9.40638   266.6667 |
     |----------------------------------------------------------------------|
241. |     104          1      3         2   285.7143   .3571429        800 |
242. |     104          1      1         2   6120.233   14.86355   411.7613 |
243. |     104          1      2         2   535.5482   2.667774   200.7472 |
244. |     104          1      4         2   3491.378   7.411552   471.0725 |
245. |     104          2      4         2   848.0122    2.12003        400 |
     |----------------------------------------------------------------------|
246. |     104          2      3         2   357.1429   .3571429   999.9999 |
247. |     104          2      2         2   285.7143   .7142857        400 |
248. |     104          2      1         2   2537.385   5.729107   442.8936 |
249. |     104          3      2         2   142.8571   .3571429        400 |
250. |     104          3      1         2   1833.397   7.363876   248.9718 |
     |----------------------------------------------------------------------|
251. |     104          4      1         2   1995.889   13.71969   145.4763 |
252. |     105          1      4         2   4374.055   20.04286   218.2351 |
253. |     105          1      1         2   420.4312   1.245013   337.6922 |
254. |     105          1      3         2   1684.175   3.020988   557.4916 |
255. |     105          2      3         2    2043.96   6.085336   335.8829 |
     |----------------------------------------------------------------------|
256. |     105          2      4         2   1692.978   5.072966   333.7255 |
257. |     105          2      2         2   285.7143   .4285715   666.6666 |
258. |     105          2      1         2   819.1058   2.343206   349.5663 |
259. |     105          3      3         2   3603.399   10.79421   333.8271 |
260. |     105          3      1         2   3293.028   9.129387   360.7064 |
     |----------------------------------------------------------------------|
261. |     105          3      2         2   17729.61   59.40987   298.4286 |
262. |     105          4      3         2   3553.583   4.277947   830.6749 |
263. |     105          4      1         2   1919.172    5.21245   368.1899 |
264. |     107          1      3         2   16775.05   187.8805   89.28571 |
265. |     107          1      1         2   2078.094   44.53966   46.65716 |
     |----------------------------------------------------------------------|
266. |     107          1      2         2   71.42857        1.6   44.64286 |
267. |     107          1      4         2   8607.268   122.0005   70.55107 |
268. |     107          2      3         2   2632.926   30.11166   87.43876 |
269. |     107          2      1         2   717.2596   8.033308   89.28571 |
270. |     107          2      4         2   636.0902    5.99579   106.0895 |
     |----------------------------------------------------------------------|
271. |     107          3      3         2   285.7143        3.2   89.28571 |
272. |     107          3      2         2   3113.452   34.49185   90.26631 |
273. |     107          3      1         2   285.7143        3.2   89.28571 |
274. |     107          4      1         2    1363.41   13.67562   99.69639 |
275. |     107          4      3         2   966.3544   18.19606    53.1079 |
     |----------------------------------------------------------------------|
276. |     108          1      3         2   15005.76    12.5048       1200 |
277. |     108          1      2         2   71.42857   .0714286       1000 |
278. |     108          1      1         2   13251.01   13.25101   999.9999 |
279. |     108          1      4         2   468.0804   .9441965   495.7447 |
280. |     108          2      2         2       1000          1       1000 |
     |----------------------------------------------------------------------|
281. |     108          2      3         2   20668.58   31.40955   658.0349 |
282. |     108          2      4         2   473.2844   .5418977   873.3832 |
283. |     108          3      1         2   1163.922   1.163922   999.9999 |
284. |     108          3      2         2   10805.18   13.37222   808.0315 |
285. |     108          3      3         2   6647.302   16.10399   412.7737 |
     |----------------------------------------------------------------------|
286. |     108          4      1         2   171.4286   .2857143        600 |
287. |     108          4      3         2   9726.348    12.0963   804.0764 |
288. |     113          1      3         2    12144.7   9.655096   1257.854 |
289. |     113          1      1         2   19584.66   16.16435   1211.596 |
290. |     113          1      4         2   5845.635   4.739469   1233.395 |
     |----------------------------------------------------------------------|
291. |     113          1      2         2   92.85714   .0714286       1300 |
292. |     113          2      4         2   603.4182   .3915974   1540.915 |
293. |     113          2      1         2   1309.067   .8506197   1538.957 |
294. |     113          2      3         2   12196.47   11.85967   1028.399 |
295. |     113          2      2         2   6839.245   5.699371       1200 |
     |----------------------------------------------------------------------|
296. |     113          3      1         2    9885.33   6.315544   1565.238 |
297. |     113          3      3         2   457.1429   .2857143       1600 |
298. |     113          3      2         2    17164.4   15.31403   1120.829 |
299. |     113          4      1         2   17735.16   12.66842    1399.95 |
300. |     113          4      3         2   1747.899   1.747899       1000 |
     |----------------------------------------------------------------------|
301. |     116          1      3         2   1430.769    1.32967   1076.033 |
302. |     116          2      3         2   2711.378   2.576645    1052.29 |
303. |     116          3      3         2   5373.091   8.993091   597.4688 |
304. |     116          3      2         2   1589.793   2.418428   657.3664 |
305. |     116          4      3         2    258.268   .6045005    427.242 |
     |----------------------------------------------------------------------|
306. |     117          1      3         2   4090.065   .8180131       5000 |
307. |     117          1      1         2   2635.065    .527013       5000 |
308. |     117          1      4         2   1214.286   .2428572       5000 |
309. |     117          2      1         2   1071.429   .2142857       5000 |
310. |     117          2      3         2   5691.337   1.372547    4146.55 |
     |----------------------------------------------------------------------|
311. |     117          2      4         2   2317.435   .5714286    4055.51 |
312. |     117          3      2         2   9845.618   2.232462   4410.207 |
313. |     117          3      1         2   1025.392   .2050785       5000 |
314. |     117          3      3         2   2075.045   .5007234   4144.095 |
315. |     117          4      1         2   964.2857   .2142857       4500 |
     |----------------------------------------------------------------------|
316. |     117          4      3         2   1428.571   .2857143       5000 |
317. |     123          1      4         2   1579.592   1.057143   1494.208 |
318. |     123          1      3         2   2151.918   1.347288   1597.222 |
319. |     123          1      1         2   1550.586   31.27995   49.57126 |
320. |     123          1      2         2   71.42857   .9571429   74.62687 |
     |----------------------------------------------------------------------|
321. |     123          2      1         2   1028.571   1.285714        800 |
322. |     123          2      2         2   428.5714   1.928571   222.2222 |
323. |     123          2      4         2   357.1429   .9571429   373.1343 |
324. |     123          2      3         2   4098.149   1.972387   2077.761 |
325. |     123          3      1         2   1458.296   .8042824   1813.164 |
     |----------------------------------------------------------------------|
326. |     123          3      3         2   285.7143   .5714286        500 |
327. |     123          3      2         2   2819.977   7.730679   364.7773 |
328. |     123          4      1         2   449.2443   8.105121   55.42721 |
329. |     123          4      3         2   4199.864   1.743397   2409.012 |
330. |     125          1      4         2   940.1792    8.60183   109.2999 |
     |----------------------------------------------------------------------|
331. |     125          1      2         2   114.2857   1.485714   76.92307 |
332. |     125          1      3         2   257.1429   3.820408   67.30769 |
333. |     125          1      1         2   2325.994   38.95246   59.71365 |
334. |     125          2      4         2   1220.941   10.94447   111.5578 |
335. |     125          2      3         2   715.6647   7.398276   96.73397 |
     |----------------------------------------------------------------------|
336. |     125          2      1         2   179.1664     1.3845   129.4087 |
337. |     125          2      2         2    249.235   3.645751   68.36314 |
338. |     125          3      2         2    2854.26    30.6571   93.10271 |
339. |     125          3      1         2   842.2297   8.619601   97.71098 |
340. |     125          3      3         2        500        5.2   96.15385 |
     |----------------------------------------------------------------------|
341. |     125          4      1         2   1226.539   9.053708   135.4737 |
342. |     127          1      4         2   580.0447   .5570122    1041.35 |
343. |     127          1      3         2   1934.608   1.786799   1082.723 |
344. |     127          1      2         2        300        .45   666.6666 |
345. |     127          1      1         2   2884.152   2.002804   1440.057 |
     |----------------------------------------------------------------------|
346. |     127          2      4         2   208.0351   .1996654   1041.919 |
347. |     127          2      1         2   743.8151   .7300725   1018.824 |
348. |     127          2      2         2   250.0653   .3622915   690.2324 |
349. |     127          2      3         2   4584.141   3.139887    1459.97 |
350. |     127          3      3         2   2920.459   1.000011   2920.426 |
     |----------------------------------------------------------------------|
351. |     127          3      2         2   2924.778   5.318935   549.8803 |
352. |     127          3      1         2   4112.022   4.537652   906.2004 |
353. |     127          4      1         2   788.6249   1.158849   680.5245 |
354. |     127          4      3         2   1459.337   .8907088     1638.4 |
355. |     140          1      4         2   3582.324   2.538187   1411.371 |
     |----------------------------------------------------------------------|
356. |     140          1      1         2   142.8571   .0285714       5000 |
357. |     140          2      1         2   142.8571   .0357143       4000 |
358. |     140          2      3         2   176.0359   .2033807   865.5487 |
359. |     140          2      4         2   2562.819   1.100562   2328.645 |
360. |     140          3      2         2   328.9343   .1218564    2699.36 |
     |----------------------------------------------------------------------|
361. |     140          3      1         2   547.8364   .3633339   1507.804 |
362. |     140          4      3         2   142.8571   .1785714        800 |
363. |     140          4      1         2   142.8571   .0142857      10000 |
364. |     141          1      3         2   6709.831   2.800662   2395.802 |
365. |     141          1      1         2   21528.57   12.76519   1686.506 |
     |----------------------------------------------------------------------|
366. |     141          1      4         2   7273.269    5.66775   1283.273 |
367. |     141          1      2         2   57.14286   .0714286   799.9999 |
368. |     141          2      2         2   71.42857   .0714286       1000 |
369. |     141          2      1         2   732.7731   .3445378   2126.829 |
370. |     141          2      4         2        100   .0285714       3500 |
     |----------------------------------------------------------------------|
371. |     141          2      3         2   6718.463   3.846778   1746.517 |
372. |     141          3      1         2   1567.953   1.192073   1315.316 |
373. |     141          3      2         2   3687.676   2.160006   1707.253 |
374. |     141          3      3         2   1717.093   .8061952   2129.873 |
375. |     141          4      1         2   1816.492   1.227913   1479.332 |
     |----------------------------------------------------------------------|
376. |     141          4      3         2   1359.096   .6358013   2137.612 |
377. |     147          1      4         2   3620.752   1.515476   2389.185 |
378. |     147          1      1         2   13223.04   6.078053   2175.538 |
379. |     147          1      2         2   365.9271    .240176   1523.579 |
380. |     147          1      3         2   4174.301    2.12245   1966.736 |
     |----------------------------------------------------------------------|
381. |     147          2      4         2   3114.477   1.297339   2400.665 |
382. |     147          2      2         2    479.486   .2179482       2200 |
383. |     147          2      3         2   7708.779   3.502473   2200.953 |
384. |     147          2      1         2   1981.565   .8926306   2219.917 |
385. |     147          3      3         2   1994.523   .8317263   2398.052 |
     |----------------------------------------------------------------------|
386. |     147          3      2         2    6216.12   2.700859   2301.534 |
387. |     147          3      1         2   5527.384   2.390556   2312.175 |
388. |     147          4      1         2   3176.027   1.470229   2160.225 |
389. |     147          4      3         2   2064.228   .9402248   2195.462 |
390. |     153          1      4         2   1342.131   1.519203    883.444 |
     |----------------------------------------------------------------------|
391. |     153          1      1         2   142.8571   .0285714       5000 |
392. |     153          2      3         2   1290.582   4.441609   290.5663 |
393. |     153          3      3         2       3000   3.127268   959.3039 |
394. |     153          3      1         2   571.4286   .3809524       1500 |
395. |     153          3      2         2   402.2241   .0863533   4657.891 |
     |----------------------------------------------------------------------|
396. |     153          4      1         2   285.7143   .2057143   1388.889 |
     +----------------------------------------------------------------------+

.                         tempfile uvq2;

.                         keep reg_tpi product survquar ppkg_trim;

.                 save `uvq2', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000e.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000e.tmp saved

.                                 use `uvq' ;

.                         merge reg_tpi product survquar using `uvq2';
variables reg_tpi product survquar do not uniquely identify observations in the master
    data
variables reg_tpi product survquar do not uniquely identify observations in
    C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000e.tmp
(label lsurvquar already defined)

.                         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |        398      100.00      100.00
------------+-----------------------------------
      Total |        398      100.00

.                         drop _merge;

.                 save `uvq', replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000c.tmp saved

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_quarterly.dta sav
> ed

.         restore;

. **************************************************************************;
. * Now calculate the weights for the temporal price index. The weights
> * will be based on the bottom 50% of the national nominal consumption
> * per capita (see below). We let the weights vary by strata (3 regions X rural/urban).
> *
> * First, make a small file that has the total nominal HH daily consumption,
> * to use as our denominator. We cannot simply use the `bottom_tpi' file that
> * was created earlier because we will need some other variables from
> * the cons_cat.dta file.
> **************************************************************************;
. use "$path\work\conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta", clear ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path\work\hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |      6,775      100.00      100.00
------------+-----------------------------------
      Total |      6,775      100.00

.         collapse (mean) cons_hh_nom hhsize strata hhweight rural news survquar reg_tpi,
>                 by(hhid);

.         lab var cons_hh_nom "Nominal daily HH consumption";

.         rename hhsize   cc_hhs;

.         rename strata   cc_reg;

.         rename hhweight cc_hhw;

.         rename rural    cc_rur;

.         rename news     cc_news;

.         rename survquar cc_qua;

.         rename reg_tpi  cc_reg_tpi;

.         sort hhid;

.         tempfile thhcons;

. save `thhcons', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000f.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000f.tmp saved

. **************************************************************************;
. * Merge the file with consumption on the food products with HH consumption file,
> * then use "fillin" to take care of cases where a household did not
> * consume all n_tpi commodities. Note that we need to do the merge
> * first because there are some households that are not in `acredd' at
> * all, because they did not consume *any* of the n_tpi items. Then replace
> * missing values in the "filled in" observations with the relevant values 
> * for that household.
> **************************************************************************;
. use `acredd';

.         cap drop _merge;

.         drop if product==.;
(315 observations deleted)

.         merge hhid using `thhcons';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        315        0.91        0.91
          3 |     34,236       99.09      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         for var valued_tot quantityd_tot : replace X=0 if _merge==2;

->  replace valued_tot=0 if _merge==2
(315 real changes made)

->  replace quantityd_tot=0 if _merge==2
(315 real changes made)

.                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 valued_tot quantityd_tot : replace X=0 if _merge==2;
>                                 */
> 
>         replace hhsize  =cc_hhs     if _merge==2;
(315 real changes made)

.         replace strata  =cc_reg     if _merge==2;
(315 real changes made)

.         replace hhweight=cc_hhw     if _merge==2;
(315 real changes made)

.         replace rural   =cc_rur     if _merge==2;
(315 real changes made)

.         replace news    =cc_news        if _merge==2;
(315 real changes made)

.         replace survquar=cc_qua     if _merge==2;
(315 real changes made)

.         replace reg_tpi =cc_reg_tpi     if _merge==2;
(315 real changes made)

.         drop _merge cc_* ;

.                 fillin hhid product;

.         replace valued_tot=0 if _fillin;
(73849 real changes made)

.                 for var quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;

->  egen tmp=mean(quantityd_tot), by(hhid)

->  replace quantityd_tot=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(strata), by(hhid)

->  replace strata=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(rural), by(hhid)

->  replace rural=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(hhweight), by(hhid)

->  replace hhweight=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(hhsize), by(hhid)

->  replace hhsize=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(survquar), by(hhid)

->  replace survquar=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(survmon), by(hhid)
(5040 missing values generated)

->  replace survmon=tmp if _fillin
(69124 real changes made)

->  drop tmp

->  egen tmp=mean(news), by(hhid)

->  replace news=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(reg_tpi), by(hhid)

->  replace reg_tpi=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(cons_hh_nom), by(hhid)

->  replace cons_hh_nom=tmp if _fillin
(73849 real changes made)

->  drop tmp

.                                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;
>                                 */
> 
> **************************************************************************;
. * Now calculate the shares, and then the mean shares in each strata, 
> * using hhweight*hhsize weighting. 
> * Note that we are not doing quantity weighting now for the shares.
> **************************************************************************;
.         gen share = valued_tot/cons_hh_nom ;

.         gen popwt = hhsize*hhweight;

.         lab var share "HH share in total consumption";

.         lab var popwt "Population weight: hhsize*hhweight";

. **************************************************************************;
. * Select the bottom 50% (weighted) of the distribution of nominal per 
> * capita consumption.
> **************************************************************************;
.         gen cpc=cons_hh_nom/hhsize;

.         sum cpc [aw=hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%     341.2898       78.55931
 5%     695.3857       78.55932
10%     897.8539       78.55932       Obs              108400
25%     1376.486       78.55932       Sum of Wgt.   491413216

50%     2259.297                      Mean           10464.25
                        Largest       Std. Dev.      451462.1
75%     4217.707       8.12e+07
90%     9842.668       8.12e+07       Variance       2.04e+11
95%     19766.71       8.12e+07       Skewness       177.7597
99%     111655.2       8.12e+07       Kurtosis       31946.76

.         global medcpc=r(p$tpi_bottom);

. * MAH ;
.  sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    108400    2.51e+09    1.13e+09   1.01e+09   4.19e+09
     product |    101625    121.9333    16.00619        103        153
  valued_tot |    108400    182.6271    481.8536          0      12000
quantityd_~t |    108400      1.4749     3.25775          0   364.2857
      strata |    108400    5.551734    2.873473          1         10
-------------+--------------------------------------------------------
      hhsize |    108400        4.96    2.758379          1         24
    hhweight |    108400    4533.332    4303.944         54      92511
    survquar |    108400    2.499336    1.143945          1          4
     survmon |    103360    6.719814    3.353746          1         12
       rural |    108400    .8199262    .3842507          0          1
-------------+--------------------------------------------------------
        news |    108400    2.416827    1.118312          1          4
     reg_tpi |    108400    1.180074    .3842507          1          2
    spdomain |     34236    3.202126    1.379049          1          5
 cons_hh_nom |    108400    97487.28     4938154   232.1918   4.06e+08
     _fillin |    108400    .6812638    .4659887          0          1
-------------+--------------------------------------------------------
       share |    108400    .0152195    .0411734          0   .7534428
       popwt |    108400    29614.26    44552.43         62     832599
         cpc |    108400    20773.97      987328   78.55931   8.12e+07

.  codebook hhid;

-------------------------------------------------------------------------------------------
hhid                                                                         Household Code
-------------------------------------------------------------------------------------------

                  type:  numeric (double)

                 range:  [1.013e+09,4.193e+09]        units:  1
         unique values:  6775                     missing .:  0/108400

                  mean:   2.5e+09
              std. dev:   1.1e+09

           percentiles:        10%       25%       50%       75%       90%
                           1.0e+09   1.1e+09   2.2e+09   3.2e+09   4.1e+09

.         keep if cpc<=$medcpc;
(57072 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     51328    2.81e+09    9.50e+08   1.01e+09   4.19e+09
     product |     48120    121.9333    16.00628        103        153
  valued_tot |     51328    144.5371    402.5764          0       9000
quantityd_~t |     51328    1.488656     3.31426          0        362
      strata |     51328    6.332606    2.333378          1         10
-------------+--------------------------------------------------------
      hhsize |     51328    5.628741    2.566767          1         24
    hhweight |     51328    4789.738    4259.487        100      60164
    survquar |     51328    2.546135    1.163029          1          4
     survmon |     49024    6.838773     3.45944          1         12
       rural |     51328    .9466958    .2246417          0          1
-------------+--------------------------------------------------------
        news |     51328    2.703865    .9463027          1          4
     reg_tpi |     51328    1.053304    .2246417          1          2
    spdomain |     14268    3.522638    1.217835          1          5
 cons_hh_nom |     51328    7198.385    4750.943   232.1918   53180.82
     _fillin |     51328    .7192176    .4493858          0          1
-------------+--------------------------------------------------------
       share |     51328    .0198654    .0515374          0   .7534428
       popwt |     51328    33070.38    43851.13        100     782132
         cpc |     51328    1292.952    550.5071   78.55931   2259.297

.                 collapse (mean) share (median) medshare=share [aw=popwt] , 
>                         by(reg_tpi product);

.                 egen sumsh=sum(share) , by(reg_tpi);

.                 replace share=share/sumsh;
(30 real changes made)

.                 drop sumsh;

.                 egen sumsh=sum(medshare) , by(reg_tpi);

.                 replace medshare=medshare/sumsh;
(7 real changes made)

.                 drop sumsh;

.                 lab var share "Reg 6: Mean HH share of total consumption";

.                 lab var medshare "Reg 6: Median HH share of total consumption";

.                 sort reg_tpi product;

.                 save "$path/work/tpi_reg_tpi_share.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_reg_tpi_share.dta saved

.                 tempfile tempwt6;

.                 save `tempwt6', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000g.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000g.tmp saved

. use `uvq', clear;

.         sort reg_tpi product;

. save , replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000c.tmp saved

. use `tempwt6';

.         merge reg_tpi product using `uvq';
variables reg_tpi product do not uniquely identify observations in
    C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0h00000c.tmp

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          2        0.50        0.50
          3 |        398       99.50      100.00
------------+-----------------------------------
      Total |        400      100.00

.         gen tpi1     =ppkg     *share;
(2 missing values generated)

.         gen tpi1_trim=ppkg_trim*share;
(2 missing values generated)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       398    122.1935    15.72786        103        153
     reg_tpi |       400         1.4    .4905115          1          2
       share |       400    .0702878     .046569          0   .1900794
    medshare |       400       .0725     .155438          0   .6375976
    survquar |       398    2.399497     1.09898          1          4
-------------+--------------------------------------------------------
        news |       398    2.422111    1.114463          1          4
  valued_tot |       398    19488.69    29216.17   42.85714   194922.5
quantityd_~t |       398    56.49364    147.7743   .0142857   1890.576
        ppkg |       398    1216.895    1243.777   44.64286      10000
   ppkg_trim |       398     1162.45    1242.167   44.64286      10000
-------------+--------------------------------------------------------
      _merge |       400        2.99     .141244          1          3
        tpi1 |       398     80.5499    84.08219   1.570198   330.8668
   tpi1_trim |       398    79.36036    85.58122   1.570198   336.9185

. keep if survquar!=.;
(2 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       398    122.1935    15.72786        103        153
     reg_tpi |       398    1.399497    .4904116          1          2
       share |       398    .0706411    .0464175   .0058882   .1900794
    medshare |       398    .0728643    .1557436          0   .6375976
    survquar |       398    2.399497     1.09898          1          4
-------------+--------------------------------------------------------
        news |       398    2.422111    1.114463          1          4
  valued_tot |       398    19488.69    29216.17   42.85714   194922.5
quantityd_~t |       398    56.49364    147.7743   .0142857   1890.576
        ppkg |       398    1216.895    1243.777   44.64286      10000
   ppkg_trim |       398     1162.45    1242.167   44.64286      10000
-------------+--------------------------------------------------------
      _merge |       398           3           0          3          3
        tpi1 |       398     80.5499    84.08219   1.570198   330.8668
   tpi1_trim |       398    79.36036    85.58122   1.570198   336.9185

. list in  1/3;

     +-----------------------------------------------------------------------------------+
  1. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     103 |       1 | .0428535 |        0 | May-Jul 09 |    4 | 35641.07 | 120.9178 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    294.7545    |     294.456    |         3    |    12.63126    |    12.61847     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
  2. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     104 |       1 | .0414874 |        0 | May-Jul 09 |    3 | 668.7192 | .7142857 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    936.2068    |    780.7081    |         3    |    38.84075    |    32.38952     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
  3. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     105 |       1 | .1434704 |        0 | May-Jul 09 |    4 |  59033.3 |  300.496 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    196.4529    |    235.3222    |         3    |    28.18517    |    33.76177     |
     +-----------------------------------------------------------------------------------+

. list in -3/-1;

     +------------------------------------------------------------------------------------+
396. | product | reg_tpi |    share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 |       2 | .0089337 |        0 | Nov09-Jan10 |    3 |     3000 | 2.349057 |
     |------------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1     |    tpi1_t~m     |
     |    1277.108    |        1500    |         3    |    11.40932     |    13.40056     |
     +------------------------------------------------------------------------------------+

     +------------------------------------------------------------------------------------+
397. | product | reg_tpi |    share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 |       2 | .0089337 |        0 | Nov09-Jan10 |    1 | 571.4286 | .3809524 |
     |------------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1     |    tpi1_t~m     |
     |        1500    |    4657.891    |         3    |    13.40056     |    41.61224     |
     +------------------------------------------------------------------------------------+

     +------------------------------------------------------------------------------------+
398. | product | reg_tpi |    share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 |       2 | .0089337 |        0 |  Feb-Apr 10 |    1 | 285.7143 | .2057143 |
     |------------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1     |    tpi1_t~m     |
     |    1388.889    |    1388.889    |         3    |    12.40793     |    12.40793     |
     +------------------------------------------------------------------------------------+

.         **************************************************************************;
. * Find TPI level and indexes for non-trimmed and trimmed prices
> **************************************************************************;
. * Not trimmed ;
.         collapse (sum) tpi1 tpi1_trim  , by(reg_tpi survquar);

.                 for num 1/$n_tpi :
>                         sum tpi1 if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1 if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1 if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1 if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

.                 lab var tpi1 "Temporal price index before normalization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi=tpi1/${base`v'} if reg_tpi==`v
> ' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi=tpi1/${base`v'} if reg_tpi
> ==`v' ;
  7.                                         } ;
  8.                                 } ;
(4 missing values generated)
(4 real changes made)

.                                                                                          
>        *gen     tpi=tpi1/$base1 if reg_tpi==1;
.                 *replace tpi=tpi1/$base2 if reg_tpi==2;
.                 *replace tpi=tpi1/$base3 if reg_tpi==3;
.                 *replace tpi=tpi1/$base4 if reg_tpi==4;
.                 *replace tpi=tpi1/$base5 if reg_tpi==5;
.                 *replace tpi=tpi1/$base6 if reg_tpi==6;
.                                                                                 lab var t
> pi "Temporal price index (Q4=1)";

. * Trimmed ;
.                 for num 1/$n_tpi :
>                         sum tpi1_trim if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1_trim if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1_trim if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1_trim if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

.                 lab var tpi1_trim "Six regions: TRIMMED Temporal price index before norma
> lization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi_trim=tpi1_trim/${base`v'} if r
> eg_tpi==`v' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi_trim=tpi1_trim/${base`v'} 
> if reg_tpi==`v' ;
  7.                                         } ;
  8.                                 } ;
(4 missing values generated)
(4 real changes made)

.                                                 lab var tpi_trim "TRIMMED Temporal price 
> index (Q4=1)";

.                 sort reg_tpi survquar;

.             drop if reg_tpi<1 | reg_tpi>$n_tpi;
(0 observations deleted)

. gen tpi_diff = tpi - tpi_trim;

. lab var tpi_diff "TPI difference btw trimmed/untrimmed";

. twoway (connected tpi_trim survquar),yline(1) by(, title("TPI: Trimmed"))
> by(reg_tpi) sav("$path/work/reg_tpi-tpi_trim", replace);
(file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/reg_tpi-tpi_trim.gph saved)

. graph export "$path/work/reg_tpi-tpi_trim.tif", replace;
(file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/reg_tpi-tpi_trim.tif written 
> in TIFF format)

. list reg_tpi survquar tpi tpi_trim tpi_diff;

     +---------------------------------------------------------+
     | reg_tpi      survquar        tpi   tpi_trim    tpi_diff |
     |---------------------------------------------------------|
  1. |       1    May-Jul 09   .9627066   .9580296     .004677 |
  2. |       1   Sept-Oct 09   1.067421   1.005921    .0615005 |
  3. |       1   Nov09-Jan10    1.01604   .9845449     .031495 |
  4. |       1    Feb-Apr 10          1          1           0 |
  5. |       2    May-Jul 09   1.723915   1.712407    .0115073 |
     |---------------------------------------------------------|
  6. |       2   Sept-Oct 09   1.722894   1.808787   -.0858935 |
  7. |       2   Nov09-Jan10   1.381938   1.426216   -.0442778 |
  8. |       2    Feb-Apr 10          1          1           0 |
     +---------------------------------------------------------+

.                 sort reg_tpi survquar;

. keep reg_tpi survquar tpi_trim;

. save "$path/work/temp_index_reg_tpi.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/temp_index_reg_tpi.dta saved

.                        ******************************************************************
> ********
> * 090_temp_index.do     (end)
> **************************************************************************;
. cap log close;
