-------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/rep/090_temp_index.log
  log type:  text
 opened on:  17 May 2013, 09:52:36

. clear

. set more off

. #delimit ;
delimiter now ;
. **************************************************************************
> * 090_temp_index.do     (start)
> **************************************************************************;
. *do "$path/new/010_initial.do";
. **************************************************************************
> * Program to compute the temporal price index (intra-survey)
> * 
> * The index is based on 6 regions (North/Center/South by rural/urban) 
> * and four quarters. For IAF 2002/03 (t=t1) it is based on the same 9
> * commodities used for the analysis of the 1996 IAF (t=t0), 
> * except that we have to go to 8 commodities because the 2002-03 survey 
> * does not distinguish between large and small groundnuts, which were 
> * separate items in the old index. For IOF 2008/09 (t=t2) we expand the
> * the food basket to include the 15 most important food products among
> * the poorest.
> *
> * The commodity weights for the items vary by the 6 regions, and are 
> * calculated from the observations in the IAF2002, using the relatively 
> * poor households (below median nominal consumption per capita).
> *
> * The unit values (prices) calculated here are also based on the prices 
> * paid by the relatively poor, using the same definition.
> *
> * K Simler, Sep 2003
> * CA
> * MAH, April 2010
> * URB, Feb 2013 (automatization to any number of n_tpi's)
> **************************************************************************;
. /*
> This file uses:
>         work\own.dta
>         work\receipts.dta
>         work\daily.dta
>         work\hhdata
>         work\cons_cat.dta
> 
> This file creates:
>         work\tpi_unit_val_quarterly.dta
>         work\tpi_unit_val_monthly.dta
>         work\tpi_news_share.dta
>         work\tpi_reg_tpi_share.dta
>         work\temp_index_news.dta
>         work\temp_index_reg_tpi.dta
> */      
> 
> 
> **************************************************************************
> * Either the products used for intertemporal price index is specified
> * explicitly, or they are automatically found as the the n_tpi products
> * with the highest weighted expenditure shares among the $bottom % poorest
> * part of the population
> **************************************************************************;
. * Generating the n_tpi most important food items for the poorest $bottom % ;
. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (start)
> **************************************************************************;
. *------------------------------------------------------------------------*
> * Population weights for each HH
> *------------------------------------------------------------------------*;
. use "$path/work\hhdata.dta", clear;

. keep hhid hhweight hhsize;

. gen popwt = hhweight*hhsize;

. lab var popwt "Population weights = hhsize X hhweight";

. sort hhid;

. tempfile popwt;

. save `popwt', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000001.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000001.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
      hhsize |      6775        4.96     2.75857          1         24
    hhweight |      6775    4533.332    4304.242         54      92511
       popwt |      6775    29614.26    44555.51         62     832599

. *------------------------------------------------------------------------*
> * Make list of all consumed products
> *------------------------------------------------------------------------*;
. *use "$path/in\cons_cod.dta", clear;
. *save "$path/work\cons_cod.dta", replace;
. use "$path/work\cons_cod.dta", clear;

. keep product descript;

. collapse product, by(descript);

. sort product;

. tempfile descript;

. save `descript', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000002.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000002.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
    descript |         2         1.5    .7071068          1          2
     product |         2    565.0077    613.7578   131.0155        999

. *------------------------------------------------------------------------*
> * Find the poorest part of the population
> *------------------------------------------------------------------------*;
. use
> "$path/work\cons_cod.dta", clear;

. *use
> *"$path/work\cons_cod.dta", clear;
. ********************************************check the COICOP categories to create the var
> iable prod_cat, for the moment it is equal to food_cat******;
. keep hhid prod_cat product cod_hh_nom;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08

. merge hhid using `popwt';
variable hhid does not uniquely identify observations in the master data

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08
      hhsize |    412045    5.313592    2.837438          1         24
-------------+--------------------------------------------------------
    hhweight |    412045    4940.193    4557.506         54      92511
       popwt |    412045    33954.53     49935.3         62     832599
      _merge |    412045           3           0          3          3

. drop _merge;

. preserve;

. collapse (sum) cod_hh_nom (mean) popwt hhweight hhsize, by(hhid);

. gen cod_pc_nom = cod_hh_nom/hhsize;

.         sum cod_pc_nom [aw=popwt] , detail;

                         cod_pc_nom
-------------------------------------------------------------
      Percentiles      Smallest
 1%     332.3661       78.55931
 5%     680.3636       103.0936
10%     872.9067       107.7462       Obs                6775
25%     1328.983       145.4659       Sum of Wgt.   200636622

50%     2175.789                      Mean           9412.851
                        Largest       Std. Dev.        395673
75%     3972.618        1528531
90%      9057.59        1552604       Variance       1.57e+11
95%     17758.21        1790269       Skewness       202.1632
99%     88724.46       8.12e+07       Kurtosis       41456.83

.         global medcpc_= r(p$tpi_bottom);

.         gen bottom_ = cod_pc_nom <= $medcpc_;

. sum [aw=popwt];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    6775   200636622    2.52e+09   1.10e+09   1.01e+09   4.19e+09
  cod_hh_nom |    6775   200636622    67821.64    2005057   232.1918   4.06e+08
       popwt |    6775   200636622    96639.42   125478.2         62     832599
    hhweight |    6775   200636622    10417.53   10233.19         54      92511
      hhsize |    6775   200636622    7.911641   3.294698          1         24
-------------+-----------------------------------------------------------------
  cod_pc_nom |    6775   200636622    9412.851     395673   78.55931   8.12e+07
     bottom_ |    6775   200636622    .5001342   .5000369          0          1

. sum [aw=hhweight];

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        hhid |    6775    30713326    2.51e+09   1.12e+09   1.01e+09   4.19e+09
  cod_hh_nom |    6775    30713326    61490.01    2271154   232.1918   4.06e+08
       popwt |    6775    30713326    68053.16   97418.28         62     832599
    hhweight |    6775    30713326    8619.458   9115.422         54      92511
      hhsize |    6775    30713326    6.532559   3.001711          1         24
-------------+-----------------------------------------------------------------
  cod_pc_nom |    6775    30713326    10464.25   451493.4   78.55931   8.12e+07
     bottom_ |    6775    30713326    .4751522   .4994191          0          1

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
  cod_hh_nom |      6775    97487.28     4938495   232.1918   4.06e+08
       popwt |      6775    29614.26    44555.51         62     832599
    hhweight |      6775    4533.332    4304.242         54      92511
      hhsize |      6775        4.96     2.75857          1         24
-------------+--------------------------------------------------------
  cod_pc_nom |      6775    20773.97    987396.4   78.55931   8.12e+07
     bottom_ |      6775    .4529889    .4978218          0          1

. keep if bottom_==1;
(3706 observations deleted)

. keep hhid;

. sort hhid;

. tempfile hhid;

. save `hhid';
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000004.tmp saved

. restore;

. sort hhid;

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    412045    2.48e+09    1.13e+09   1.01e+09   4.19e+09
     product |    412045    810.2635    358.1243        100        999
    prod_cat |    412045    1.782558    .4125064          1          2
  cod_hh_nom |    412045    1602.923    615777.4          0   3.95e+08
      hhsize |    412045    5.313592    2.837438          1         24
-------------+--------------------------------------------------------
    hhweight |    412045    4940.193    4557.506         54      92511
       popwt |    412045    33954.53     49935.3         62     832599

. merge hhid using `hhid';
variable hhid does not uniquely identify observations in the master data

. tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |    239,058       58.02       58.02
          3 |    172,987       41.98      100.00
------------+-----------------------------------
      Total |    412,045      100.00

. keep if _m==3;
(239058 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    172987    2.80e+09    9.34e+08   1.01e+09   4.19e+09
     product |    172987    827.7079     345.362        100        999
    prod_cat |    172987    1.802505    .3981098          1          2
  cod_hh_nom |    172987    123.5388    359.1169          0    10958.9
      hhsize |    172987    5.986531    2.565258          1         19
-------------+--------------------------------------------------------
    hhweight |    172987    5154.068    4379.562        100      60164
       popwt |    172987    37036.91    46121.88        100     782132
      _merge |    172987           3           0          3          3

. *------------------------------------------------------------------------*
> * Keep only food product expenditure by the poor. Calculate food product
> * share of total food expenditure by the poor
> *------------------------------------------------------------------------*;
. keep if prod_cat==1;
(138823 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34164    2.78e+09    9.37e+08   1.01e+09   4.19e+09
     product |     34164    131.6748    15.79307        100        161
    prod_cat |     34164           1           0          1          1
  cod_hh_nom |     34164    297.0688    482.2309          0       9000
      hhsize |     34164    5.843549    2.501487          1         19
-------------+--------------------------------------------------------
    hhweight |     34164    5028.222    4166.388        100      60164
       popwt |     34164    35157.19    43014.83        100     782132
      _merge |     34164           3           0          3          3

. sort product;

. *preserve;
. collapse (sum) cod_hh_nom [aw=hhweight], by(product);

. sort cod;

. egen total=sum(cod_hh_nom);

. gen sh=100*cod_hh_nom/total;

. *------------------------------------------------------------------------*
> * Include product labels
> *------------------------------------------------------------------------*;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        62       130.5    18.04162        100        161
  cod_hh_nom |        62    189847.5      266511   1752.996    1123210
       total |        62    1.18e+07           0   1.18e+07   1.18e+07
          sh |        62    1.612903     2.26422   .0148931   9.542551

. sort product;

. merge product using `descript';

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         62       96.88       96.88
          2 |          2        3.13      100.00
------------+-----------------------------------
      Total |         64      100.00

. keep if _merge==1 | _merge==3;
(2 observations deleted)

. drop _merge;

. sort sh;

. *list;
. list in -$product_tpi_n/-1;

     +-----------------------------------------------------+
     | product   cod_hh~m      total         sh   descript |
     |-----------------------------------------------------|
 48. |     153   222373.6   1.18e+07   1.889238          . |
 49. |     125   230312.1   1.18e+07   1.956682          . |
 50. |     123   230714.2   1.18e+07   1.960098          . |
 51. |     127   234920.9   1.18e+07   1.995837          . |
 52. |     140   251058.4   1.18e+07   2.132938          . |
     |-----------------------------------------------------|
 53. |     103   316957.7   1.18e+07   2.692804          . |
 54. |     104   335649.7   1.18e+07   2.851607          . |
 55. |     147   418515.3   1.18e+07   3.555615          . |
 56. |     117   440335.5   1.18e+07   3.740995          . |
 57. |     116   479750.5   1.18e+07   4.075856          . |
     |-----------------------------------------------------|
 58. |     107   720970.3   1.18e+07   6.125207          . |
 59. |     141   940596.5   1.18e+07   7.991104          . |
 60. |     108    1056863   1.18e+07   8.978882          . |
 61. |     105    1108255   1.18e+07   9.415496          . |
 62. |     113    1123210   1.18e+07   9.542551          . |
     +-----------------------------------------------------+

. list product descript in -$product_tpi_n/-1;

     +--------------------+
     | product   descript |
     |--------------------|
 48. |     153          . |
 49. |     125          . |
 50. |     123          . |
 51. |     127          . |
 52. |     140          . |
     |--------------------|
 53. |     103          . |
 54. |     104          . |
 55. |     147          . |
 56. |     117          . |
 57. |     116          . |
     |--------------------|
 58. |     107          . |
 59. |     141          . |
 60. |     108          . |
 61. |     105          . |
 62. |     113          . |
     +--------------------+

. *restore;
. *------------------------------------------------------------------------*
> * Keep the required number of most important food products
> *------------------------------------------------------------------------*;
. keep in -$product_tpi_n/-1;
(47 observations deleted)

. list;

     +-----------------------------------------------------+
     | product   cod_hh~m      total         sh   descript |
     |-----------------------------------------------------|
  1. |     153   222373.6   1.18e+07   1.889238          . |
  2. |     125   230312.1   1.18e+07   1.956682          . |
  3. |     123   230714.2   1.18e+07   1.960098          . |
  4. |     127   234920.9   1.18e+07   1.995837          . |
  5. |     140   251058.4   1.18e+07   2.132938          . |
     |-----------------------------------------------------|
  6. |     103   316957.7   1.18e+07   2.692804          . |
  7. |     104   335649.7   1.18e+07   2.851607          . |
  8. |     147   418515.3   1.18e+07   3.555615          . |
  9. |     117   440335.5   1.18e+07   3.740995          . |
 10. |     116   479750.5   1.18e+07   4.075856          . |
     |-----------------------------------------------------|
 11. |     107   720970.3   1.18e+07   6.125207          . |
 12. |     141   940596.5   1.18e+07   7.991104          . |
 13. |     108    1056863   1.18e+07   8.978882          . |
 14. |     105    1108255   1.18e+07   9.415496          . |
 15. |     113    1123210   1.18e+07   9.542551          . |
     +-----------------------------------------------------+

. gen product_tpi=1;

. keep product product_tpi;

. list;

     +--------------------+
     | product   produc~i |
     |--------------------|
  1. |     153          1 |
  2. |     125          1 |
  3. |     123          1 |
  4. |     127          1 |
  5. |     140          1 |
     |--------------------|
  6. |     103          1 |
  7. |     104          1 |
  8. |     147          1 |
  9. |     117          1 |
 10. |     116          1 |
     |--------------------|
 11. |     107          1 |
 12. |     141          1 |
 13. |     108          1 |
 14. |     105          1 |
 15. |     113          1 |
     +--------------------+

. sort product;

. tempfile product_tpi;

. save `product_tpi', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000005.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000005.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |        15    121.9333     16.5679        103        153
 product_tpi |        15           1           0          1          1

. clear;

. **************************************************************************
> * Find the n_tpi most important food products among the lowest $bottom %
> * (end)
> **************************************************************************;
. **************************************************************************;
. * First, need to calculate the average prices for the food items, by 
> * strata and quarter. For this, we are using the "unit values"
> * (value/quantity) for the observations in the consumption questionnaires,
> * including daily, own and receipts-in-kind.
> *
> * The unit values are constructed as sum(value)/sum(quantity), which effectively
> * weights them by the quantity and value of the transaction. Sampling
> * weights are also used.
> *
> * Get the own consumption file, and limit analysis to the observations
> * in KGs where both value and quantity are available.
> **************************************************************************;
. use "$path/work/cons_cod.dta";

. *use "$path/work/cons_cod.dta";
. keep if prod_cat==1;
(322449 observations deleted)

. drop if quantityd==0 | quantityd==.;
(4392 observations deleted)

. *keep if quantityd!=. & cod_hh_nom2!=.;
. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     85204    2.44e+09    1.14e+09   1.01e+09   4.19e+09
     product |     85204    131.0922    15.78502        100        161
    food_cat |     85204           1           0          1          1
    prod_cat |     85204           1           0          1          1
    descript |     85204           1           0          1          1
-------------+--------------------------------------------------------
   quantityd |     85204     .819643    3.245947   .0000286   364.2857
 cod_hh_nom3 |     85204    403.1168    658.9792          0      18500
  cod_hh_nom |     85204    403.1168    658.9792          0      18500
 cod_hh_nom2 |     84857    404.7653    659.8198   7.142857      18500

. sort product;

. merge product using `product_tpi';
variable product does not uniquely identify observations in the master data

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     50,968       59.82       59.82
          3 |     34,236       40.18      100.00
------------+-----------------------------------
      Total |     85,204      100.00

. drop _merge;

. keep if $product_tpi;
(50968 observations deleted)

. *        replace valued_ac=0 if valued_ac==.;
. *        replace quantityd_ac=0 if quantityd_ac==.;
.         gen valued_tot=cod_hh_nom2;

.         gen quantityd_tot=quantityd;

. *               replace quantityd_tot=0 if (valued_tot>0 & valued_tot<.) & quantityd_tot=
> =.;
.         keep if quantityd_tot!=. & valued_tot!=.;
(0 observations deleted)

.                 collapse (sum) valued_tot quantityd_tot, by(hhid product);

.                 sort hhid;

. tempfile acredd;

. save `acredd' , replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000006.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000006.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34236    2.47e+09    1.13e+09   1.01e+09   4.19e+09
     product |     34236    123.5172     15.5879        103        153
  valued_tot |     34236    578.2445    711.6146   7.142857      12000
quantityd_~t |     34236    1.508504    4.636162   .0028571   364.2857

. /*
> **************************************************************************;
> * Create a data set with an empty 1 observation. Used to avoid empty data
> * sets when the survey do not have the Mozambican set up
> **************************************************************************;
> use "$path/work/own.dta";
> 
> preserve;
> keep in 1;
> drop unit valued quantityd;
> gen unit=2;
> gen valued=0;
> gen quantityd=0;
> tempfile 1obs;
> save `1obs';
> restore;
> 
> **************************************************************************;
> * Own consumption
> **************************************************************************;
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_ac;
>         rename quantityd quantityd_ac;
>         compress;
>         sort hhid product;
>         tempfile ac;
> save `ac', replace;
> 
> **************************************************************************;
> * Now do a similar thing with receipts-in-kind file.
> **************************************************************************;
> use "$path/work/receipts.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> 
> 
> keep if $product_tpi;
> append using `1obs';
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
>         rename valued valued_re;
>         rename quantityd quantityd_re;
>         compress;
>         sort hhid product;
>         tempfile re;
> save `re', replace;
> 
> **************************************************************************;
> * And also with the daily expenditure file.
> **************************************************************************;
> use "$path/work/daily.dta";
> 
> sum;
> sort product;
> merge product using `product_tpi';
> tab _merge;
> drop _merge;
> 
> keep if $product_tpi;
> 
> 
> 
> * Comment out below if IAF 2002/03 ( START ) ;
> 
> *rename quantityd quantity;
> do "$path/new/110a_conversions.do";
> *rename quantity quantityd;
> 
> * Comment out below if IAF 2002/03 ( END ) ;
> 
> 
> 
>         collapse (sum) value quantity days , 
>                 by(hhid product unit);
> 
>         gen valued=value/7 if days<=7;
>         replace valued=value/days if days>7 & days<.;
>         gen quantityd=quantity/7 if days<=7;
>         replace quantityd=quantity/days if days>7 & days<.;
> 
>         keep if unit==2 & quantityd!=. & valued!=.;
>         collapse (sum) valued quantityd , by(hhid product);
> 
>         rename valued valued_dd;
>         rename quantityd quantityd_dd;
>         compress;
>         sort hhid product;
>         tempfile dd;
> save `dd', replace;
> 
> 
> 
> 
> **************************************************************************;
> * Merge the three components (own, daily, receipts) together at the HH/product level, 
> * then aggregate to the regional level, using the sample weights (hhweight).
> * We DON'T want to weight by "hhsize" because the quantity and value are
> * already for the household (i.e., other things equal, larger households
> * are buying larger quantities, and therefore already getting more weight).
> * Then calculate sum(val)/sum(quantity) to get the quantity weighted mean
> * unit value in each strata in each quarter.
> **************************************************************************;
> use `ac';
>         sort hhid product;
>         merge hhid product using `re';
>         tab _m;
>         drop _m;
>         
>         sort hhid product;
>         merge hhid product using `dd';
>         tab _m;
>         drop _m;
>         
>         replace valued_ac=0 if valued_ac==.;
>         replace valued_re=0 if valued_re==.;
>         replace valued_dd=0 if valued_dd==.;
>         replace quantityd_ac=0 if quantityd_ac==.;
>         replace quantityd_re=0 if quantityd_re==.;
>         replace quantityd_dd=0 if quantityd_dd==.;
> 
>         gen valued_tot=valued_ac+valued_re+valued_dd;
>         gen quantityd_tot=quantityd_ac+quantityd_re+quantityd_dd;
> 
>         sort hhid;
> 
>         tempfile acredd;
> save `acredd' , replace;
> */
> 
> 
> 
> use "$path/work/hhdata.dta";

.         keep strata hhid hhweight hhsize rural survmon survquar news spdomain reg_tpi;

.         sort hhid;

.         tempfile hhd;

. save `hhd' , replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000007.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000007.tmp saved

. use `acredd', clear;

.         merge hhid using `hhd';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        315        0.91        0.91
          3 |     34,236       99.09      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         drop _merge;

.                 tab survquar , miss;

 Sequential |
     Survey |
    Quarter |
    May-Jun |
      09=1) |      Freq.     Percent        Cum.
------------+-----------------------------------
 May-Jul 09 |      8,742       25.30       25.30
Sept-Oct 09 |      8,992       26.03       51.33
Nov09-Jan10 |      7,404       21.43       72.76
 Feb-Apr 10 |      9,413       27.24      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.                 tab survmon survquar, miss;

Sequential |
    Survey |
Month (May |   Sequential Survey Quarter May-Jun 09=1)
   2009=1) | May-Jul 0  Sept-Oct   Nov09-Jan  Feb-Apr 1 |     Total
-----------+--------------------------------------------+----------
    May 09 |       187          0          0          0 |       187 
    Jun 09 |     6,230          0          0          0 |     6,230 
    Jul 09 |     2,325          0          0          0 |     2,325 
    Sep 09 |         0      3,119          0          0 |     3,119 
    Oct 09 |         0      5,873          0          0 |     5,873 
    Nov 09 |         0          0      3,162          0 |     3,162 
    Dec 09 |         0          0      2,074          0 |     2,074 
    Jan 10 |         0          0      2,168          0 |     2,168 
    Feb 10 |         0          0          0      2,225 |     2,225 
    Mar 10 |         0          0          0      4,683 |     4,683 
    Apr 10 |         0          0          0      2,505 |     2,505 
-----------+--------------------------------------------+----------
     Total |     8,742      8,992      7,404      9,413 |    34,551 


.         compress;
product was float now int
survquar was float now byte
survmon was float now byte
rural was float now byte
news was float now byte
spdomain was float now byte
reg_tpi was float now byte
hhsize was double now byte

.         sort hhid;

. save `acredd', replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000006.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     34551    2.47e+09    1.13e+09   1.01e+09   4.19e+09
     product |     34236    123.5172     15.5879        103        153
  valued_tot |     34236    578.2445    711.6146   7.142857      12000
quantityd_~t |     34236    1.508504    4.636162   .0028571   364.2857
      strata |     34551    5.478278    2.879859          1         10
-------------+--------------------------------------------------------
      hhsize |     34551    5.225059     2.74337          1         24
    hhweight |     34551    4924.711    4407.844         54      92511
    survquar |     34551     2.50615    1.140574          1          4
     survmon |     34551    6.729646    3.333076          1         12
       rural |     34551    .8112066    .3913501          0          1
-------------+--------------------------------------------------------
        news |     34551    2.380539    1.120118          1          4
    spdomain |     34551    3.200399    1.378315          1          5
     reg_tpi |     34551    2.380539    1.120118          1          4

. **************************************************************************;
. * Need to merge with the file that has nominal consumption per household,
> * and compute nominal consumption per capita from that, so that we can
> * choose the relatively poor (i.e., below median nominal consumption per
> * capita).
> **************************************************************************;
. use "$path\work\conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta" ;
. *save "$path/work/cons_cat.dta", replace ;
. *use "$path/work/cons_cat.dta" ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path\work\hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |      6,775      100.00      100.00
------------+-----------------------------------
      Total |      6,775      100.00

.  drop _m;

.         collapse (mean) cons_hh_nom hhsize hhweight , by(hhid);

.         gen cpc=cons_hh_nom/hhsize;

.         sum cpc [aw=hhsize*hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%     332.3661       78.55931
 5%     680.3636       103.0936
10%     872.9067       107.7462       Obs                6775
25%     1328.983       145.4659       Sum of Wgt.   200636622

50%     2175.789                      Mean           9412.851
                        Largest       Std. Dev.        395673
75%     3972.618        1528531
90%      9057.59        1552604       Variance       1.57e+11
95%     17758.21        1790269       Skewness       202.1632
99%     88724.46       8.12e+07       Kurtosis       41456.83

.         global medcpc=r(p$tpi_bottom);

.         gen bottom_tpi=cpc<=$medcpc;

.         keep hhid bottom_tpi;

.         sort hhid;

.         tempfile bottom_tpi;

. save `bottom_tpi', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000008.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j000008.tmp saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |      6775    2.51e+09    1.13e+09   1.01e+09   4.19e+09
  bottom_tpi |      6775    .4529889    .4978218          0          1

. use `acredd' ;

.         merge hhid using `bottom_tpi';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |     34,551      100.00      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         drop _merge;

.         keep if bottom_tpi;
(20939 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     13612    2.77e+09    9.56e+08   1.01e+09   4.19e+09
     product |     13473    123.4582    15.75092        103        153
  valued_tot |     13473    513.2872    612.4287   7.142857       9000
quantityd_~t |     13473     1.48159     4.67223   .0051429        362
      strata |     13612    6.282765    2.360666          1         10
-------------+--------------------------------------------------------
      hhsize |     13612    5.921393    2.485605          1         19
    hhweight |     13612    5240.411    4192.181        100      60164
    survquar |     13612    2.550103    1.163222          1          4
     survmon |     13612    6.841316      3.4422          1         12
       rural |     13612    .9381428    .2409048          0          1
-------------+--------------------------------------------------------
        news |     13612    2.668969    .9527972          1          4
    spdomain |     13612    3.548266    1.190332          1          5
     reg_tpi |     13612    2.668969    .9527972          1          4
  bottom_tpi |     13612           1           0          1          1

. * Drop one HH with extremely high quantity and low value in IAF 2002/03 (t=t1) ;
. *        drop if hhid==263001;
.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survmon);

.                         drop if product==.;
(30 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         lab var ppkg "Unit value per kg";

.                         sort reg_tpi product ;

.                         compress;

.                         tempfile uvm;

.                 save `uvm', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000a.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000a.tmp saved

.                 save "$path/work/tpi_unit_val_monthly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_monthly.dta saved

.         restore;

.         preserve;

.                 collapse (sum) valued_tot quantityd_tot [aw=hhweight] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(16 observations deleted)

.                         gen ppkg=valued_tot/quantityd_tot;

.                         sort reg_tpi product survquar;

.                         list in  1/3;

     +-------------------------------------------------------------------------+
     | product      survquar   news   reg_tpi   valued~t   quanti~t       ppkg |
     |-------------------------------------------------------------------------|
  1. |     103    May-Jul 09      1   central   22568.77   73.73573   306.0764 |
  2. |     103   Sept-Oct 09      1   central   14153.36   46.40452   304.9995 |
  3. |     103   Nov09-Jan10      1   central   6368.062   18.81594   338.4398 |
     +-------------------------------------------------------------------------+

.                         list in -3/-1;

     +-------------------------------------------------------------------------+
     | product      survquar   news   reg_tpi   valued~t   quanti~t       ppkg |
     |-------------------------------------------------------------------------|
237. |     153   Sept-Oct 09      4   western   5314.159   5.482946    969.216 |
238. |     153   Nov09-Jan10      4   western   7463.587   5.877618   1269.832 |
239. |     153    Feb-Apr 10      4   western   4601.457    3.04152   1512.881 |
     +-------------------------------------------------------------------------+

.                         tempfile uvq;

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_quarterly.dta sav
> ed

.                 save `uvq', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000c.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000c.tmp saved

.         restore;

.         **************************************************************************;
. * Toss out the bottom 5% and top 5% of the HH-LEVEL prices per kg in
> * each reg_tpi & product combination. This should eliminate outliers that
> * may have an undue influence on the price calculation. Then use sample
> * weighting PLUS quantity weighting on those HH-level observations.
> **************************************************************************;
.         preserve;

.                 gen hhppkg=valued_tot/quantityd_tot;
(139 missing values generated)

.                 egen lower5=pctile(hhppkg), p(5) by(reg_tpi product);
(139 missing values generated)

.                 egen upper5=pctile(hhppkg), p(95) by(reg_tpi product);
(139 missing values generated)

.                 keep if hhppkg>=lower5 & hhppkg<=upper5;
(889 observations deleted)

.                                 gen hhqtywt=hhweight*quantityd_tot;
(139 missing values generated)

.                                 collapse (sum) valued_tot quantityd_tot [aw=hhqtywt] , 
>                                 by(reg_tpi news product survquar);

.                         drop if product==.;
(0 observations deleted)

.                         gen ppkg_trim=valued_tot/quantityd_tot;

.                         lab var ppkg_trim "90% trimmed unit value per kg";

.                         sort reg_tpi product survquar;

.                         list , nol;

     +----------------------------------------------------------------------+
     | product   survquar   news   reg_tpi   valued~t   quanti~t   ppkg_t~m |
     |----------------------------------------------------------------------|
  1. |     103          1      1         1   28319.06   96.17417    294.456 |
  2. |     103          2      1         1   18820.04    63.6893   295.4977 |
  3. |     103          3      1         1   9132.665   27.16821   336.1527 |
  4. |     103          4      1         1   27228.33    88.0705   309.1652 |
  5. |     104          1      1         1   42474.56   71.73248   592.1246 |
     |----------------------------------------------------------------------|
  6. |     104          2      1         1   17802.97   23.25988   765.3936 |
  7. |     104          3      1         1   31911.45   52.31848   609.9461 |
  8. |     104          4      1         1   9015.529   25.42311   354.6194 |
  9. |     105          1      1         1   91509.81   395.6744   231.2755 |
 10. |     105          2      1         1   57368.14   241.7264   237.3268 |
     |----------------------------------------------------------------------|
 11. |     105          3      1         1   145358.1   1071.283    135.686 |
 12. |     105          4      1         1   114331.1   759.7541   150.4843 |
 13. |     107          1      1         1   85844.55   873.0867   98.32306 |
 14. |     107          2      1         1   32172.96   369.5086   87.06957 |
 15. |     107          3      1         1   23106.83   195.9678   117.9113 |
     |----------------------------------------------------------------------|
 16. |     107          4      1         1    30158.9   322.1287   93.62376 |
 17. |     108          1      1         1    35842.4   134.7221   266.0469 |
 18. |     108          2      1         1   14800.12   15.20498   973.3733 |
 19. |     108          3      1         1   22291.46   24.94331   893.6847 |
 20. |     108          4      1         1   5728.396   5.748081   996.5754 |
     |----------------------------------------------------------------------|
 21. |     113          1      1         1   91826.66    75.2524   1220.249 |
 22. |     113          2      1         1   124001.4   97.77476   1268.236 |
 23. |     113          3      1         1   62127.95   50.07518   1240.693 |
 24. |     113          4      1         1   87345.91   77.05343   1133.576 |
 25. |     116          1      1         1   114.2857   .2857143        400 |
     |----------------------------------------------------------------------|
 26. |     116          2      1         1   42.85714   .0357143       1200 |
 27. |     116          3      1         1   142.8571   .1428571       1000 |
 28. |     116          4      1         1   1382.168   1.373979    1005.96 |
 29. |     117          1      1         1   15414.56   3.561197   4328.479 |
 30. |     117          2      1         1    8197.15    2.04051   4017.206 |
     |----------------------------------------------------------------------|
 31. |     117          3      1         1   27218.37   6.048779   4499.812 |
 32. |     117          4      1         1   12511.55   3.448729   3627.873 |
 33. |     123          1      1         1   5117.439   84.14975   60.81348 |
 34. |     123          2      1         1   8558.404   44.09394   194.0948 |
 35. |     123          3      1         1   6036.032   18.57097   325.0252 |
     |----------------------------------------------------------------------|
 36. |     123          4      1         1   7414.212   53.56753   138.4087 |
 37. |     125          1      1         1   24705.94   393.7206   62.74994 |
 38. |     125          2      1         1   11200.71   136.2267   82.22111 |
 39. |     125          3      1         1   8734.345   121.0963   72.12728 |
 40. |     125          4      1         1    28546.5   303.3625    94.1003 |
     |----------------------------------------------------------------------|
 41. |     127          1      1         1    9833.11   9.506735   1034.331 |
 42. |     127          2      1         1   7060.237   10.01646   704.8632 |
 43. |     127          3      1         1   9604.674   12.31256    780.071 |
 44. |     127          4      1         1   7881.445    10.9077   722.5579 |
 45. |     140          1      1         1   168173.8   312.1417    538.774 |
     |----------------------------------------------------------------------|
 46. |     140          2      1         1   14004.16   9.738918   1437.959 |
 47. |     140          3      1         1   13425.82    12.5723    1067.89 |
 48. |     140          4      1         1        750         .5       1500 |
 49. |     141          1      1         1    73760.3    50.9324     1448.2 |
 50. |     141          2      1         1   12806.28    7.15612   1789.557 |
     |----------------------------------------------------------------------|
 51. |     141          3      1         1   62646.22   41.02652   1526.969 |
 52. |     141          4      1         1   36183.02   27.68363   1307.019 |
 53. |     147          1      1         1   54118.57   24.23457   2233.114 |
 54. |     147          2      1         1    17767.9   7.739445   2295.758 |
 55. |     147          3      1         1   26837.26   11.40099    2353.94 |
     |----------------------------------------------------------------------|
 56. |     147          4      1         1   22323.89   9.559492   2335.259 |
 57. |     153          1      1         1   4290.671   2.800241   1532.251 |
 58. |     153          2      1         1   4229.531   2.279642   1855.349 |
 59. |     153          3      1         1   2714.002    2.30214   1178.904 |
 60. |     153          4      1         1    4017.72   4.906215   818.9043 |
     |----------------------------------------------------------------------|
 61. |     103          1      2         2   15216.61   42.38829   358.9814 |
 62. |     103          2      2         2   10384.88   29.72081   349.4143 |
 63. |     103          3      2         2   2621.611   8.571429   305.8545 |
 64. |     103          4      2         2   11809.92   38.17354   309.3746 |
 65. |     104          1      2         2   2169.555   5.613356   386.4987 |
     |----------------------------------------------------------------------|
 66. |     104          2      2         2   4216.845   5.868171    718.596 |
 67. |     104          3      2         2   2266.713   3.726532   608.2634 |
 68. |     104          4      2         2    711.778   1.071429   664.3262 |
 69. |     105          1      2         2   110893.2   530.7202   208.9486 |
 70. |     105          2      2         2     227212     834.56   272.2536 |
     |----------------------------------------------------------------------|
 71. |     105          3      2         2   240318.4   771.1798   311.6244 |
 72. |     105          4      2         2   170147.4   843.8369   201.6354 |
 73. |     107          1      2         2   111622.5   1423.144   78.43377 |
 74. |     107          2      2         2   80616.85   1267.057   63.62529 |
 75. |     107          3      2         2   83343.61   920.6839   90.52359 |
     |----------------------------------------------------------------------|
 76. |     107          4      2         2   42145.69   585.6392   71.96529 |
 77. |     108          1      2         2   223255.7   294.0954   759.1269 |
 78. |     108          2      2         2   165368.5   210.7026    784.843 |
 79. |     108          3      2         2   126050.7   153.0366   823.6641 |
 80. |     108          4      2         2   77268.72   103.1481   749.1049 |
     |----------------------------------------------------------------------|
 81. |     113          1      2         2   112812.5   107.5083   1049.338 |
 82. |     113          2      2         2     257837   246.4263   1046.305 |
 83. |     113          3      2         2   143475.6   134.1408   1069.589 |
 84. |     113          4      2         2   111106.9   141.3594   785.9888 |
 85. |     116          1      2         2   67574.73   158.8968   425.2742 |
     |----------------------------------------------------------------------|
 86. |     116          2      2         2   50211.55    115.254     435.66 |
 87. |     116          3      2         2    9590.41   14.60383   656.7053 |
 88. |     116          4      2         2   25656.21   59.25055   433.0121 |
 89. |     117          1      2         2   22650.82   5.262053   4304.559 |
 90. |     117          2      2         2    58746.1   14.44641   4066.485 |
     |----------------------------------------------------------------------|
 91. |     117          3      2         2   39753.66   9.453981   4204.965 |
 92. |     117          4      2         2   46207.79   11.27829   4097.056 |
 93. |     123          1      2         2    19677.4   111.2016   176.9525 |
 94. |     123          2      2         2   23213.51   106.9577   217.0345 |
 95. |     123          3      2         2   35242.69   115.5208   305.0765 |
     |----------------------------------------------------------------------|
 96. |     123          4      2         2   12075.58    39.7925   303.4638 |
 97. |     125          1      2         2   12538.33   158.3562   79.17799 |
 98. |     125          2      2         2    30960.9   465.6374   66.49143 |
 99. |     125          3      2         2   21628.59   306.5145     70.563 |
100. |     125          4      2         2   24096.16   288.1129   83.63444 |
     |----------------------------------------------------------------------|
101. |     127          1      2         2   17128.75   22.78219   751.8484 |
102. |     127          2      2         2   17629.16    29.5287   597.0177 |
103. |     127          3      2         2   16981.87   28.49795   595.8978 |
104. |     127          4      2         2   13846.96   19.14888   723.1213 |
105. |     140          1      2         2   37986.05   29.46379   1289.245 |
     |----------------------------------------------------------------------|
106. |     140          2      2         2   45309.99   40.97656   1105.754 |
107. |     140          3      2         2   9400.593    7.53642   1247.355 |
108. |     140          4      2         2   1474.728   .6486086    2273.68 |
109. |     141          1      2         2   45619.38   29.55759   1543.407 |
110. |     141          2      2         2   42371.15   28.91936   1465.149 |
     |----------------------------------------------------------------------|
111. |     141          3      2         2   24229.99   19.20201   1261.847 |
112. |     141          4      2         2   43447.75   20.69524   2099.408 |
113. |     147          1      2         2   59120.19   27.67904   2135.919 |
114. |     147          2      2         2   47470.97   21.53229   2204.641 |
115. |     147          3      2         2      38467   16.56121   2322.717 |
     |----------------------------------------------------------------------|
116. |     147          4      2         2   68759.17   30.41655   2260.584 |
117. |     153          1      2         2   19452.29   43.12555   451.0619 |
118. |     153          2      2         2   24716.01   57.57064   429.3162 |
119. |     153          3      2         2   15118.67   30.78195   491.1536 |
120. |     153          4      2         2   20709.89   73.44278   281.9867 |
     |----------------------------------------------------------------------|
121. |     103          1      3         3   1387.982   4.285715   323.8625 |
122. |     103          2      3         3   1714.286   4.285715        400 |
123. |     103          3      3         3   10114.38   37.68812   268.3706 |
124. |     104          1      3         3   931.9478   1.071429   869.8179 |
125. |     104          2      3         3   3589.251   3.157794   1136.632 |
     |----------------------------------------------------------------------|
126. |     104          3      3         3   571.4286   .7142857        800 |
127. |     104          4      3         3   7284.352    16.7008   436.1679 |
128. |     105          1      3         3   28746.72   59.90147   479.9001 |
129. |     105          2      3         3   155633.5   411.9799   377.7697 |
130. |     105          3      3         3   143629.8   355.1062   404.4698 |
     |----------------------------------------------------------------------|
131. |     105          4      3         3   177375.9   461.8986   384.0148 |
132. |     107          1      3         3   147889.6   2164.835   68.31451 |
133. |     107          2      3         3   73678.71   1128.811   65.27107 |
134. |     107          3      3         3   41353.67   743.4236   55.62598 |
135. |     107          4      3         3   200328.1   3359.779   59.62537 |
     |----------------------------------------------------------------------|
136. |     108          1      3         3     113069   110.3901   1024.267 |
137. |     108          2      3         3     100464   232.1916   432.6772 |
138. |     108          3      3         3   108203.3   140.4258   770.5372 |
139. |     108          4      3         3   251788.9   366.0768   687.8033 |
140. |     113          1      3         3   74056.14   55.14548   1342.923 |
     |----------------------------------------------------------------------|
141. |     113          2      3         3   119602.9   113.5709   1053.112 |
142. |     113          3      3         3   50177.28   47.17356   1063.674 |
143. |     113          4      3         3   153256.8   277.4742   552.3282 |
144. |     116          1      3         3   122448.6   201.3366   608.1783 |
145. |     116          2      3         3   42876.34   95.12967   450.7147 |
     |----------------------------------------------------------------------|
146. |     116          3      3         3   122266.5   226.4491   539.9292 |
147. |     116          4      3         3   283037.1   631.8442   447.9539 |
148. |     117          1      3         3   43657.85   10.51257   4152.919 |
149. |     117          2      3         3   87249.14   20.52166   4251.563 |
150. |     117          3      3         3    42356.1   9.925028   4267.605 |
     |----------------------------------------------------------------------|
151. |     117          4      3         3   81555.37   20.36307   4005.062 |
152. |     123          1      3         3   39847.85   172.9701   230.3741 |
153. |     123          2      3         3   30541.64   40.93434   746.1128 |
154. |     123          3      3         3   40856.48   82.57945   494.7536 |
155. |     123          4      3         3   60931.27   99.12797   614.6729 |
     |----------------------------------------------------------------------|
156. |     125          1      3         3   27347.45   347.2096   78.76351 |
157. |     125          2      3         3   43603.09   587.6797   74.19534 |
158. |     125          3      3         3   11449.98   179.5487    63.7709 |
159. |     125          4      3         3   43612.75   567.5557   76.84313 |
160. |     127          1      3         3   41507.15   20.58854   2016.032 |
     |----------------------------------------------------------------------|
161. |     127          2      3         3   41261.23    36.2179    1139.25 |
162. |     127          3      3         3   29846.15   22.77964   1310.211 |
163. |     127          4      3         3   52372.55   38.43873   1362.494 |
164. |     140          1      3         3   23070.64   22.02973   1047.251 |
165. |     140          2      3         3    23208.8   24.12267   962.1154 |
     |----------------------------------------------------------------------|
166. |     140          3      3         3   3949.273   7.958361    496.242 |
167. |     140          4      3         3   1342.447   1.883322    712.808 |
168. |     141          1      3         3   162506.6   80.52101   2018.189 |
169. |     141          2      3         3   97560.73   46.33667   2105.476 |
170. |     141          3      3         3   95006.45    51.9903   1827.388 |
     |----------------------------------------------------------------------|
171. |     141          4      3         3   259997.5   109.5022   2374.358 |
172. |     147          1      3         3   36311.64   16.23056   2237.239 |
173. |     147          2      3         3   57144.58   25.95222   2201.915 |
174. |     147          3      3         3   38348.62   15.83702   2421.454 |
175. |     147          4      3         3   67064.92    27.9402   2400.302 |
     |----------------------------------------------------------------------|
176. |     153          1      3         3   24801.75   38.12256   650.5792 |
177. |     153          2      3         3   30626.28   58.13491   526.8139 |
178. |     153          3      3         3   52033.58   99.52981   522.7939 |
179. |     153          4      3         3   58707.19   120.4651   487.3379 |
180. |     103          1      4         4   44778.51   163.7554   273.4475 |
     |----------------------------------------------------------------------|
181. |     103          2      4         4   72394.29   233.4372   310.1232 |
182. |     103          3      4         4   31806.17   97.61178   325.8436 |
183. |     103          4      4         4   112989.5    364.812   309.7197 |
184. |     104          1      4         4   143081.3   185.6128   770.8592 |
185. |     104          2      4         4     112974   150.3383    751.465 |
     |----------------------------------------------------------------------|
186. |     104          3      4         4   30398.32   27.86736   1090.822 |
187. |     104          4      4         4   46275.97   50.80224   910.9042 |
188. |     105          1      4         4   96406.96   562.4341   171.4102 |
189. |     105          2      4         4   83866.33   347.3599   241.4393 |
190. |     105          3      4         4   107863.9   586.1739   184.0134 |
     |----------------------------------------------------------------------|
191. |     105          4      4         4   131065.8    532.648   246.0645 |
192. |     107          1      4         4   93749.12   1092.712   85.79494 |
193. |     107          2      4         4   69811.16   822.3728   84.88992 |
194. |     107          3      4         4   34417.14   494.0651   69.66113 |
195. |     107          4      4         4   38149.64   296.9164   128.4861 |
     |----------------------------------------------------------------------|
196. |     108          1      4         4   86082.59   385.6029   223.2415 |
197. |     108          2      4         4   42465.75   73.28425   579.4662 |
198. |     108          3      4         4   32316.56   61.21784   527.8944 |
199. |     108          4      4         4   10573.29    14.5281   727.7824 |
200. |     113          1      4         4   96491.34   83.23969   1159.199 |
     |----------------------------------------------------------------------|
201. |     113          2      4         4     120858   137.8231   876.9068 |
202. |     113          3      4         4   173842.9   215.9366   805.0648 |
203. |     113          4      4         4   58064.97   79.76872   727.9165 |
204. |     116          1      4         4   1022.575   1.225386   834.4922 |
205. |     116          2      4         4   3224.496   4.713887   684.0418 |
     |----------------------------------------------------------------------|
206. |     116          3      4         4   1939.862   3.350982   578.8937 |
207. |     116          4      4         4    1677.04   2.376296   705.7369 |
208. |     117          1      4         4   22788.04   5.596151   4072.092 |
209. |     117          2      4         4   28219.85   6.708414   4206.635 |
210. |     117          3      4         4   6515.356   1.589221   4099.716 |
     |----------------------------------------------------------------------|
211. |     117          4      4         4   19084.52   4.996784   3819.361 |
212. |     123          1      4         4   13946.75   19.09676   730.3201 |
213. |     123          2      4         4      25811   112.3558   229.7255 |
214. |     123          3      4         4   3401.328   22.35786   152.1312 |
215. |     123          4      4         4   4187.914   3.498721   1196.984 |
     |----------------------------------------------------------------------|
216. |     125          1      4         4    14303.9   179.4714   79.70015 |
217. |     125          2      4         4    28040.2   299.4866   93.62756 |
218. |     125          3      4         4    15624.2   224.3097   69.65456 |
219. |     125          4      4         4   39501.82   386.4713   102.2115 |
220. |     127          1      4         4   8198.837   7.288663   1124.875 |
     |----------------------------------------------------------------------|
221. |     127          2      4         4    5140.67   6.138281   837.4772 |
222. |     127          3      4         4   8321.004   7.638924    1089.29 |
223. |     127          4      4         4    11049.9   8.131307   1358.933 |
224. |     140          1      4         4   92135.84   118.7114   776.1332 |
225. |     140          2      4         4   17408.64   14.46378   1203.602 |
     |----------------------------------------------------------------------|
226. |     140          3      4         4   28858.82   70.10011   411.6801 |
227. |     140          4      4         4   6416.295   4.845619   1324.143 |
228. |     141          1      4         4   148954.6   101.4302   1468.544 |
229. |     141          2      4         4   96470.34   59.77904   1613.782 |
230. |     141          3      4         4    75222.7   47.38911   1587.341 |
     |----------------------------------------------------------------------|
231. |     141          4      4         4   60408.31   32.24249   1873.562 |
232. |     147          1      4         4   23547.74   10.45022   2253.324 |
233. |     147          2      4         4   22270.22   9.571515   2326.718 |
234. |     147          3      4         4   9586.356   4.335199   2211.284 |
235. |     147          4      4         4   10944.31   4.637684   2359.865 |
     |----------------------------------------------------------------------|
236. |     153          1      4         4   17942.73   17.95513   999.3094 |
237. |     153          2      4         4    8706.94    11.6054    750.249 |
238. |     153          3      4         4   19314.54   16.82786   1147.771 |
239. |     153          4      4         4   6548.263   5.328297    1228.96 |
     +----------------------------------------------------------------------+

.                         tempfile uvq2;

.                         keep reg_tpi product survquar ppkg_trim;

.                 save `uvq2', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000e.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000e.tmp saved

.                                 use `uvq' ;

.                         merge reg_tpi product survquar using `uvq2';
(label REG_TPI already defined)
(label lsurvquar already defined)

.                         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |        239      100.00      100.00
------------+-----------------------------------
      Total |        239      100.00

.                         drop _merge;

.                 save `uvq', replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000c.tmp saved

.                 save "$path/work/tpi_unit_val_quarterly.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_unit_val_quarterly.dta sav
> ed

.         restore;

. **************************************************************************;
. * Now calculate the weights for the temporal price index. The weights
> * will be based on the bottom 50% of the national nominal consumption
> * per capita (see below). We let the weights vary by strata (3 regions X rural/urban).
> *
> * First, make a small file that has the total nominal HH daily consumption,
> * to use as our denominator. We cannot simply use the `bottom_tpi' file that
> * was created earlier because we will need some other variables from
> * the cons_cat.dta file.
> **************************************************************************;
. use "$path\work\conpc.dta", clear;

. keep hhid cons_hh_nom;

. *use "$path/in/cons_cat.dta", clear ;
. *CA modified to merge in hhdata for bootstrap;
.        sort hhid;

.         merge hhid using "$path\work\hhdata.dta";

.           tab _m;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |      6,775      100.00      100.00
------------+-----------------------------------
      Total |      6,775      100.00

.         collapse (mean) cons_hh_nom hhsize strata hhweight rural news survquar reg_tpi,
>                 by(hhid);

.         lab var cons_hh_nom "Nominal daily HH consumption";

.         rename hhsize   cc_hhs;

.         rename strata   cc_reg;

.         rename hhweight cc_hhw;

.         rename rural    cc_rur;

.         rename news     cc_news;

.         rename survquar cc_qua;

.         rename reg_tpi  cc_reg_tpi;

.         sort hhid;

.         tempfile thhcons;

. save `thhcons', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000f.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000f.tmp saved

. **************************************************************************;
. * Merge the file with consumption on the food products with HH consumption file,
> * then use "fillin" to take care of cases where a household did not
> * consume all n_tpi commodities. Note that we need to do the merge
> * first because there are some households that are not in `acredd' at
> * all, because they did not consume *any* of the n_tpi items. Then replace
> * missing values in the "filled in" observations with the relevant values 
> * for that household.
> **************************************************************************;
. use `acredd';

.         cap drop _merge;

.         drop if product==.;
(315 observations deleted)

.         merge hhid using `thhcons';
variable hhid does not uniquely identify observations in the master data

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        315        0.91        0.91
          3 |     34,236       99.09      100.00
------------+-----------------------------------
      Total |     34,551      100.00

.         for var valued_tot quantityd_tot : replace X=0 if _merge==2;

->  replace valued_tot=0 if _merge==2
(315 real changes made)

->  replace quantityd_tot=0 if _merge==2
(315 real changes made)

.                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 valued_tot quantityd_tot : replace X=0 if _merge==2;
>                                 */
> 
>         replace hhsize  =cc_hhs     if _merge==2;
(315 real changes made)

.         replace strata  =cc_reg     if _merge==2;
(315 real changes made)

.         replace hhweight=cc_hhw     if _merge==2;
(315 real changes made)

.         replace rural   =cc_rur     if _merge==2;
(315 real changes made)

.         replace news    =cc_news        if _merge==2;
(315 real changes made)

.         replace survquar=cc_qua     if _merge==2;
(315 real changes made)

.         replace reg_tpi =cc_reg_tpi     if _merge==2;
(315 real changes made)

.         drop _merge cc_* ;

.                 fillin hhid product;

.         replace valued_tot=0 if _fillin;
(73849 real changes made)

.                 for var quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;

->  egen tmp=mean(quantityd_tot), by(hhid)

->  replace quantityd_tot=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(strata), by(hhid)

->  replace strata=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(rural), by(hhid)

->  replace rural=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(hhweight), by(hhid)

->  replace hhweight=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(hhsize), by(hhid)

->  replace hhsize=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(survquar), by(hhid)

->  replace survquar=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(survmon), by(hhid)
(5040 missing values generated)

->  replace survmon=tmp if _fillin
(69124 real changes made)

->  drop tmp

->  egen tmp=mean(news), by(hhid)

->  replace news=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(reg_tpi), by(hhid)

->  replace reg_tpi=tmp if _fillin
(73849 real changes made)

->  drop tmp

->  egen tmp=mean(cons_hh_nom), by(hhid)

->  replace cons_hh_nom=tmp if _fillin
(73849 real changes made)

->  drop tmp

.                                 /*
>         for var valued_ac quantityd_ac valued_re quantityd_re valued_dd quantityd_dd 
>                 quantityd_tot 
>                 strata rural hhweight hhsize survquar survmon news reg_tpi cons_hh_nom :
>                 egen tmp=mean(X), by(hhid) \
>                 replace X=tmp if _fillin \
>                 drop tmp;
>                                 */
> 
> **************************************************************************;
. * Now calculate the shares, and then the mean shares in each strata, 
> * using hhweight*hhsize weighting. 
> * Note that we are not doing quantity weighting now for the shares.
> **************************************************************************;
.         gen share = valued_tot/cons_hh_nom ;

.         gen popwt = hhsize*hhweight;

.         lab var share "HH share in total consumption";

.         lab var popwt "Population weight: hhsize*hhweight";

. **************************************************************************;
. * Select the bottom 50% (weighted) of the distribution of nominal per 
> * capita consumption.
> **************************************************************************;
.         gen cpc=cons_hh_nom/hhsize;

.         sum cpc [aw=hhweight] , detail;

                             cpc
-------------------------------------------------------------
      Percentiles      Smallest
 1%     341.2898       78.55931
 5%     695.3857       78.55932
10%     897.8539       78.55932       Obs              108400
25%     1376.486       78.55932       Sum of Wgt.   491413216

50%     2259.297                      Mean           10464.25
                        Largest       Std. Dev.      451462.1
75%     4217.707       8.12e+07
90%     9842.668       8.12e+07       Variance       2.04e+11
95%     19766.71       8.12e+07       Skewness       177.7597
99%     111655.2       8.12e+07       Kurtosis       31946.76

.         global medcpc=r(p$tpi_bottom);

. * MAH ;
.  sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |    108400    2.51e+09    1.13e+09   1.01e+09   4.19e+09
     product |    101625    121.9333    16.00619        103        153
  valued_tot |    108400    182.6271    481.8536          0      12000
quantityd_~t |    108400      1.4749     3.25775          0   364.2857
      strata |    108400    5.551734    2.873473          1         10
-------------+--------------------------------------------------------
      hhsize |    108400        4.96    2.758379          1         24
    hhweight |    108400    4533.332    4303.944         54      92511
    survquar |    108400    2.499336    1.143945          1          4
     survmon |    103360    6.719814    3.353746          1         12
       rural |    108400    .8199262    .3842507          0          1
-------------+--------------------------------------------------------
        news |    108400    2.416827    1.118312          1          4
    spdomain |     34236    3.202126    1.379049          1          5
     reg_tpi |    108400    2.416827    1.118312          1          4
 cons_hh_nom |    108400    97487.28     4938154   232.1918   4.06e+08
     _fillin |    108400    .6812638    .4659887          0          1
-------------+--------------------------------------------------------
       share |    108400    .0152195    .0411734          0   .7534428
       popwt |    108400    29614.26    44552.43         62     832599
         cpc |    108400    20773.97      987328   78.55931   8.12e+07

.  codebook hhid;

-------------------------------------------------------------------------------------------
hhid                                                                         Household Code
-------------------------------------------------------------------------------------------

                  type:  numeric (double)

                 range:  [1.013e+09,4.193e+09]        units:  1
         unique values:  6775                     missing .:  0/108400

                  mean:   2.5e+09
              std. dev:   1.1e+09

           percentiles:        10%       25%       50%       75%       90%
                           1.0e+09   1.1e+09   2.2e+09   3.2e+09   4.1e+09

.         keep if cpc<=$medcpc;
(57072 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
        hhid |     51328    2.81e+09    9.50e+08   1.01e+09   4.19e+09
     product |     48120    121.9333    16.00628        103        153
  valued_tot |     51328    144.5371    402.5764          0       9000
quantityd_~t |     51328    1.488656     3.31426          0        362
      strata |     51328    6.332606    2.333378          1         10
-------------+--------------------------------------------------------
      hhsize |     51328    5.628741    2.566767          1         24
    hhweight |     51328    4789.738    4259.487        100      60164
    survquar |     51328    2.546135    1.163029          1          4
     survmon |     49024    6.838773     3.45944          1         12
       rural |     51328    .9466958    .2246417          0          1
-------------+--------------------------------------------------------
        news |     51328    2.703865    .9463027          1          4
    spdomain |     14268    3.522638    1.217835          1          5
     reg_tpi |     51328    2.703865    .9463027          1          4
 cons_hh_nom |     51328    7198.385    4750.943   232.1918   53180.82
     _fillin |     51328    .7192176    .4493858          0          1
-------------+--------------------------------------------------------
       share |     51328    .0198654    .0515374          0   .7534428
       popwt |     51328    33070.38    43851.13        100     782132
         cpc |     51328    1292.952    550.5071   78.55931   2259.297

.                 collapse (mean) share (median) medshare=share [aw=popwt] , 
>                         by(reg_tpi product);

.                 egen sumsh=sum(share) , by(reg_tpi);

.                 replace share=share/sumsh;
(60 real changes made)

.                 drop sumsh;

.                 egen sumsh=sum(medshare) , by(reg_tpi);

.                 replace medshare=medshare/sumsh;
(15 real changes made)

.                 drop sumsh;

.                 lab var share "Reg 6: Mean HH share of total consumption";

.                 lab var medshare "Reg 6: Median HH share of total consumption";

.                 sort reg_tpi product;

.                 save "$path/work/tpi_reg_tpi_share.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/tpi_reg_tpi_share.dta saved

.                 tempfile tempwt6;

.                 save `tempwt6', replace;
(note: file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000g.tmp not found)
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000g.tmp saved

. use `uvq', clear;

.         sort reg_tpi product;

. save , replace;
file C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000c.tmp saved

. use `tempwt6';

.         merge reg_tpi product using `uvq';
variables reg_tpi product do not uniquely identify observations in
    C:\Users\TEMPLE~1\AppData\Local\Temp\ST_0j00000c.tmp
(label REG_TPI already defined)

.         tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          4        1.65        1.65
          3 |        239       98.35      100.00
------------+-----------------------------------
      Total |        243      100.00

.         gen tpi1     =ppkg     *share;
(4 missing values generated)

.         gen tpi1_trim=ppkg_trim*share;
(4 missing values generated)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       239    122.0126     16.0261        103        153
     reg_tpi |       243    2.497942    1.122182          1          4
       share |       243    .0658325     .056306          0   .2426034
    medshare |       243    .0658436    .1519141          0   .7792769
    survquar |       239    2.493724    1.118486          1          4
-------------+--------------------------------------------------------
        news |       239    2.497908    1.122252          1          4
  valued_tot |       239    32500.26    34021.66   42.85714   199196.3
quantityd_~t |       239    94.10801     188.606   .0357143   1910.384
        ppkg |       239    1094.785    1044.717   59.80142    4510.64
   ppkg_trim |       239    1020.765    1045.403   55.62598   4499.812
-------------+--------------------------------------------------------
      _merge |       243    2.967078    .2550047          1          3
        tpi1 |       239     65.7482    73.82272   .4798732   326.7566
   tpi1_trim |       239    63.03959    74.10655   .4798732   353.8831

. keep if survquar!=.;
(4 observations deleted)

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
     product |       239    122.0126     16.0261        103        153
     reg_tpi |       239    2.497908    1.122252          1          4
       share |       239    .0669343    .0561213   .0011997   .2426034
    medshare |       239    .0669456    .1529434          0   .7792769
    survquar |       239    2.493724    1.118486          1          4
-------------+--------------------------------------------------------
        news |       239    2.497908    1.122252          1          4
  valued_tot |       239    32500.26    34021.66   42.85714   199196.3
quantityd_~t |       239    94.10801     188.606   .0357143   1910.384
        ppkg |       239    1094.785    1044.717   59.80142    4510.64
   ppkg_trim |       239    1020.765    1045.403   55.62598   4499.812
-------------+--------------------------------------------------------
      _merge |       239           3           0          3          3
        tpi1 |       239     65.7482    73.82272   .4798732   326.7566
   tpi1_trim |       239    63.03959    74.10655   .4798732   353.8831

. list in  1/3;

     +-----------------------------------------------------------------------------------+
  1. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     103 | central | .0639916 |        0 | May-Jul 09 |    1 | 22568.77 | 73.73573 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    306.0764    |     294.456    |         3    |    19.58633    |    18.84271     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
  2. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     104 | central | .0671342 |        0 | May-Jul 09 |    1 | 31972.39 | 51.59874 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |     619.635    |    592.1246    |         3    |    41.59869    |     39.7518     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
  3. | product | reg_tpi |    share | medshare |   survquar | news | valued~t | quanti~t |
     |     105 | central | .2093356 | .3397116 | May-Jul 09 |    1 | 51399.64 | 228.2883 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    225.1523    |    231.2755    |         3    |    47.13239    |     48.4142     |
     +-----------------------------------------------------------------------------------+

. list in -3/-1;

     +-----------------------------------------------------------------------------------+
237. | product | reg_tpi |   share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 | western | .012343 |        0 | Sept-Oct 09 |    4 | 5314.159 | 5.482946 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |     969.216    |     750.249    |         3    |    11.96306    |    9.260348     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
238. | product | reg_tpi |   share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 | western | .012343 |        0 | Nov09-Jan10 |    4 | 7463.587 | 5.877618 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    1269.832    |    1147.771    |         3    |    15.67358    |    14.16698     |
     +-----------------------------------------------------------------------------------+

     +-----------------------------------------------------------------------------------+
239. | product | reg_tpi |   share | medshare |    survquar | news | valued~t | quanti~t |
     |     153 | western | .012343 |        0 |  Feb-Apr 10 |    4 | 4601.457 |  3.04152 |
     |-----------------------------------------------------------------------------------|
     |        ppkg    |    ppkg_t~m    |    _merge    |        tpi1    |    tpi1_t~m     |
     |    1512.881    |     1228.96    |         3    |    18.67354    |    15.16909     |
     +-----------------------------------------------------------------------------------+

.         **************************************************************************;
. * Find TPI level and indexes for non-trimmed and trimmed prices
> **************************************************************************;
. * Not trimmed ;
.         collapse (sum) tpi1 tpi1_trim  , by(reg_tpi survquar);

.                 for num 1/$n_tpi :
>                         sum tpi1 if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1 if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1 if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1 if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1 if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1 if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1 if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)

.                 lab var tpi1 "Temporal price index before normalization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi=tpi1/${base`v'} if reg_tpi==`v
> ' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi=tpi1/${base`v'} if reg_tpi
> ==`v' ;
  7.                                         } ;
  8.                                 } ;
(12 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)

.                                                                                          
>        *gen     tpi=tpi1/$base1 if reg_tpi==1;
.                 *replace tpi=tpi1/$base2 if reg_tpi==2;
.                 *replace tpi=tpi1/$base3 if reg_tpi==3;
.                 *replace tpi=tpi1/$base4 if reg_tpi==4;
.                 *replace tpi=tpi1/$base5 if reg_tpi==5;
.                 *replace tpi=tpi1/$base6 if reg_tpi==6;
.                                                                                 lab var t
> pi "Temporal price index (Q4=1)";

. * Trimmed ;
.                 for num 1/$n_tpi :
>                         sum tpi1_trim if reg_tpi==X & survquar==2 , meanonly \
>                         sum tpi1_trim if reg_tpi==X & survquar==4 , meanonly \
>                         global baseX=r(mean);

->  sum tpi1_trim if reg_tpi==1 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==1 & survquar==4 , meanonly

->  global base1=r(mean)

->  sum tpi1_trim if reg_tpi==2 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==2 & survquar==4 , meanonly

->  global base2=r(mean)

->  sum tpi1_trim if reg_tpi==3 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==3 & survquar==4 , meanonly

->  global base3=r(mean)

->  sum tpi1_trim if reg_tpi==4 & survquar==2 , meanonly

->  sum tpi1_trim if reg_tpi==4 & survquar==4 , meanonly

->  global base4=r(mean)

.                 lab var tpi1_trim "Six regions: TRIMMED Temporal price index before norma
> lization";

.                                 foreach v of numlist 1/$n_tpi { ;
  2.                                         if `v'==1 { ;
  3.                                                 gen tpi_trim=tpi1_trim/${base`v'} if r
> eg_tpi==`v' ;
  4.                                         } ;
  5.                                         if `v'>1 { ;
  6.                                                 replace tpi_trim=tpi1_trim/${base`v'} 
> if reg_tpi==`v' ;
  7.                                         } ;
  8.                                 } ;
(12 missing values generated)
(4 real changes made)
(4 real changes made)
(4 real changes made)

.                                                 lab var tpi_trim "TRIMMED Temporal price 
> index (Q4=1)";

.                 sort reg_tpi survquar;

.             drop if reg_tpi<1 | reg_tpi>$n_tpi;
(0 observations deleted)

. gen tpi_diff = tpi - tpi_trim;

. lab var tpi_diff "TPI difference btw trimmed/untrimmed";

. twoway (connected tpi_trim survquar),yline(1) by(, title("TPI: Trimmed"))
> by(reg_tpi) sav("$path/work/reg_tpi-tpi_trim", replace);
(file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/reg_tpi-tpi_trim.gph saved)

. graph export "$path/work/reg_tpi-tpi_trim.tif", replace;
(file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/reg_tpi-tpi_trim.tif written 
> in TIFF format)

. list reg_tpi survquar tpi tpi_trim tpi_diff;

     +----------------------------------------------------------+
     |  reg_tpi      survquar        tpi   tpi_trim    tpi_diff |
     |----------------------------------------------------------|
  1. |  central    May-Jul 09    .989413   1.031987   -.0425741 |
  2. |  central   Sept-Oct 09   1.144807   1.158773   -.0139661 |
  3. |  central   Nov09-Jan10   1.095241   1.098785   -.0035439 |
  4. |  central    Feb-Apr 10          1          1           0 |
  5. |  eastern    May-Jul 09   1.028587   .9939144    .0346727 |
     |----------------------------------------------------------|
  6. |  eastern   Sept-Oct 09   1.056235   .9891661    .0670691 |
  7. |  eastern   Nov09-Jan10   1.071347   1.034392    .0369555 |
  8. |  eastern    Feb-Apr 10          1          1           0 |
  9. | northern    May-Jul 09   1.130185   1.119139    .0110453 |
 10. | northern   Sept-Oct 09   1.037306   .9677771    .0695288 |
     |----------------------------------------------------------|
 11. | northern   Nov09-Jan10   1.032251   .9921228    .0401278 |
 12. | northern    Feb-Apr 10          1          1           0 |
 13. |  western    May-Jul 09   .7887307   .8666803   -.0779496 |
 14. |  western   Sept-Oct 09   .9702555   .9174521    .0528034 |
 15. |  western   Nov09-Jan10   .8940035   .8827032    .0113003 |
     |----------------------------------------------------------|
 16. |  western    Feb-Apr 10          1          1           0 |
     +----------------------------------------------------------+

.                 sort reg_tpi survquar;

. keep reg_tpi survquar tpi_trim;

. save "$path/work/temp_index_reg_tpi.dta", replace;
file C:\Users\Templeton\Desktop\GAPP\GAPP-UGANDA-HARUNA/work/temp_index_reg_tpi.dta saved

.                        ******************************************************************
> ********
> * 090_temp_index.do     (end)
> **************************************************************************;
. cap log close;
